function y0(i,n){for(var r=0;r<n.length;r++){const s=n[r];if(typeof s!="string"&&!Array.isArray(s)){for(const l in s)if(l!=="default"&&!(l in i)){const u=Object.getOwnPropertyDescriptor(s,l);u&&Object.defineProperty(i,l,u.get?u:{enumerable:!0,get:()=>s[l]})}}}return Object.freeze(Object.defineProperty(i,Symbol.toStringTag,{value:"Module"}))}(function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const l of document.querySelectorAll('link[rel="modulepreload"]'))s(l);new MutationObserver(l=>{for(const u of l)if(u.type==="childList")for(const d of u.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&s(d)}).observe(document,{childList:!0,subtree:!0});function r(l){const u={};return l.integrity&&(u.integrity=l.integrity),l.referrerPolicy&&(u.referrerPolicy=l.referrerPolicy),l.crossOrigin==="use-credentials"?u.credentials="include":l.crossOrigin==="anonymous"?u.credentials="omit":u.credentials="same-origin",u}function s(l){if(l.ep)return;l.ep=!0;const u=r(l);fetch(l.href,u)}})();function Oh(i){return i&&i.__esModule&&Object.prototype.hasOwnProperty.call(i,"default")?i.default:i}var Ya={exports:{}},Vi={},Ga={exports:{}},be={};/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var lp;function v0(){if(lp)return be;lp=1;var i=Symbol.for("react.element"),n=Symbol.for("react.portal"),r=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),l=Symbol.for("react.profiler"),u=Symbol.for("react.provider"),d=Symbol.for("react.context"),p=Symbol.for("react.forward_ref"),h=Symbol.for("react.suspense"),m=Symbol.for("react.memo"),y=Symbol.for("react.lazy"),v=Symbol.iterator;function A(b){return b===null||typeof b!="object"?null:(b=v&&b[v]||b["@@iterator"],typeof b=="function"?b:null)}var R={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,x={};function k(b,z,he){this.props=b,this.context=z,this.refs=x,this.updater=he||R}k.prototype.isReactComponent={},k.prototype.setState=function(b,z){if(typeof b!="object"&&typeof b!="function"&&b!=null)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,b,z,"setState")},k.prototype.forceUpdate=function(b){this.updater.enqueueForceUpdate(this,b,"forceUpdate")};function V(){}V.prototype=k.prototype;function P(b,z,he){this.props=b,this.context=z,this.refs=x,this.updater=he||R}var U=P.prototype=new V;U.constructor=P,C(U,k.prototype),U.isPureReactComponent=!0;var B=Array.isArray,ne=Object.prototype.hasOwnProperty,T={current:null},O={key:!0,ref:!0,__self:!0,__source:!0};function D(b,z,he){var ye,Ae={},Ee=null,we=null;if(z!=null)for(ye in z.ref!==void 0&&(we=z.ref),z.key!==void 0&&(Ee=""+z.key),z)ne.call(z,ye)&&!O.hasOwnProperty(ye)&&(Ae[ye]=z[ye]);var xe=arguments.length-2;if(xe===1)Ae.children=he;else if(1<xe){for(var Le=Array(xe),ot=0;ot<xe;ot++)Le[ot]=arguments[ot+2];Ae.children=Le}if(b&&b.defaultProps)for(ye in xe=b.defaultProps,xe)Ae[ye]===void 0&&(Ae[ye]=xe[ye]);return{$$typeof:i,type:b,key:Ee,ref:we,props:Ae,_owner:T.current}}function J(b,z){return{$$typeof:i,type:b.type,key:z,ref:b.ref,props:b.props,_owner:b._owner}}function ie(b){return typeof b=="object"&&b!==null&&b.$$typeof===i}function X(b){var z={"=":"=0",":":"=2"};return"$"+b.replace(/[=:]/g,function(he){return z[he]})}var _=/\/+/g;function $(b,z){return typeof b=="object"&&b!==null&&b.key!=null?X(""+b.key):z.toString(36)}function ee(b,z,he,ye,Ae){var Ee=typeof b;(Ee==="undefined"||Ee==="boolean")&&(b=null);var we=!1;if(b===null)we=!0;else switch(Ee){case"string":case"number":we=!0;break;case"object":switch(b.$$typeof){case i:case n:we=!0}}if(we)return we=b,Ae=Ae(we),b=ye===""?"."+$(we,0):ye,B(Ae)?(he="",b!=null&&(he=b.replace(_,"$&/")+"/"),ee(Ae,z,he,"",function(ot){return ot})):Ae!=null&&(ie(Ae)&&(Ae=J(Ae,he+(!Ae.key||we&&we.key===Ae.key?"":(""+Ae.key).replace(_,"$&/")+"/")+b)),z.push(Ae)),1;if(we=0,ye=ye===""?".":ye+":",B(b))for(var xe=0;xe<b.length;xe++){Ee=b[xe];var Le=ye+$(Ee,xe);we+=ee(Ee,z,he,Le,Ae)}else if(Le=A(b),typeof Le=="function")for(b=Le.call(b),xe=0;!(Ee=b.next()).done;)Ee=Ee.value,Le=ye+$(Ee,xe++),we+=ee(Ee,z,he,Le,Ae);else if(Ee==="object")throw z=String(b),Error("Objects are not valid as a React child (found: "+(z==="[object Object]"?"object with keys {"+Object.keys(b).join(", ")+"}":z)+"). If you meant to render a collection of children, use an array instead.");return we}function Ce(b,z,he){if(b==null)return b;var ye=[],Ae=0;return ee(b,ye,"","",function(Ee){return z.call(he,Ee,Ae++)}),ye}function ce(b){if(b._status===-1){var z=b._result;z=z(),z.then(function(he){(b._status===0||b._status===-1)&&(b._status=1,b._result=he)},function(he){(b._status===0||b._status===-1)&&(b._status=2,b._result=he)}),b._status===-1&&(b._status=0,b._result=z)}if(b._status===1)return b._result.default;throw b._result}var Ie={current:null},Q={transition:null},H={ReactCurrentDispatcher:Ie,ReactCurrentBatchConfig:Q,ReactCurrentOwner:T};function Z(){throw Error("act(...) is not supported in production builds of React.")}return be.Children={map:Ce,forEach:function(b,z,he){Ce(b,function(){z.apply(this,arguments)},he)},count:function(b){var z=0;return Ce(b,function(){z++}),z},toArray:function(b){return Ce(b,function(z){return z})||[]},only:function(b){if(!ie(b))throw Error("React.Children.only expected to receive a single React element child.");return b}},be.Component=k,be.Fragment=r,be.Profiler=l,be.PureComponent=P,be.StrictMode=s,be.Suspense=h,be.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=H,be.act=Z,be.cloneElement=function(b,z,he){if(b==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+b+".");var ye=C({},b.props),Ae=b.key,Ee=b.ref,we=b._owner;if(z!=null){if(z.ref!==void 0&&(Ee=z.ref,we=T.current),z.key!==void 0&&(Ae=""+z.key),b.type&&b.type.defaultProps)var xe=b.type.defaultProps;for(Le in z)ne.call(z,Le)&&!O.hasOwnProperty(Le)&&(ye[Le]=z[Le]===void 0&&xe!==void 0?xe[Le]:z[Le])}var Le=arguments.length-2;if(Le===1)ye.children=he;else if(1<Le){xe=Array(Le);for(var ot=0;ot<Le;ot++)xe[ot]=arguments[ot+2];ye.children=xe}return{$$typeof:i,type:b.type,key:Ae,ref:Ee,props:ye,_owner:we}},be.createContext=function(b){return b={$$typeof:d,_currentValue:b,_currentValue2:b,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null},b.Provider={$$typeof:u,_context:b},b.Consumer=b},be.createElement=D,be.createFactory=function(b){var z=D.bind(null,b);return z.type=b,z},be.createRef=function(){return{current:null}},be.forwardRef=function(b){return{$$typeof:p,render:b}},be.isValidElement=ie,be.lazy=function(b){return{$$typeof:y,_payload:{_status:-1,_result:b},_init:ce}},be.memo=function(b,z){return{$$typeof:m,type:b,compare:z===void 0?null:z}},be.startTransition=function(b){var z=Q.transition;Q.transition={};try{b()}finally{Q.transition=z}},be.unstable_act=Z,be.useCallback=function(b,z){return Ie.current.useCallback(b,z)},be.useContext=function(b){return Ie.current.useContext(b)},be.useDebugValue=function(){},be.useDeferredValue=function(b){return Ie.current.useDeferredValue(b)},be.useEffect=function(b,z){return Ie.current.useEffect(b,z)},be.useId=function(){return Ie.current.useId()},be.useImperativeHandle=function(b,z,he){return Ie.current.useImperativeHandle(b,z,he)},be.useInsertionEffect=function(b,z){return Ie.current.useInsertionEffect(b,z)},be.useLayoutEffect=function(b,z){return Ie.current.useLayoutEffect(b,z)},be.useMemo=function(b,z){return Ie.current.useMemo(b,z)},be.useReducer=function(b,z,he){return Ie.current.useReducer(b,z,he)},be.useRef=function(b){return Ie.current.useRef(b)},be.useState=function(b){return Ie.current.useState(b)},be.useSyncExternalStore=function(b,z,he){return Ie.current.useSyncExternalStore(b,z,he)},be.useTransition=function(){return Ie.current.useTransition()},be.version="18.3.1",be}var ap;function Zu(){return ap||(ap=1,Ga.exports=v0()),Ga.exports}/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var up;function A0(){if(up)return Vi;up=1;var i=Zu(),n=Symbol.for("react.element"),r=Symbol.for("react.fragment"),s=Object.prototype.hasOwnProperty,l=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,u={key:!0,ref:!0,__self:!0,__source:!0};function d(p,h,m){var y,v={},A=null,R=null;m!==void 0&&(A=""+m),h.key!==void 0&&(A=""+h.key),h.ref!==void 0&&(R=h.ref);for(y in h)s.call(h,y)&&!u.hasOwnProperty(y)&&(v[y]=h[y]);if(p&&p.defaultProps)for(y in h=p.defaultProps,h)v[y]===void 0&&(v[y]=h[y]);return{$$typeof:n,type:p,key:A,ref:R,props:v,_owner:l.current}}return Vi.Fragment=r,Vi.jsx=d,Vi.jsxs=d,Vi}var cp;function w0(){return cp||(cp=1,Ya.exports=A0()),Ya.exports}var M=w0(),G=Zu();const qn=Oh(G),C0=y0({__proto__:null,default:qn},[G]);var ps={},Za={exports:{}},xt={},Ja={exports:{}},Ha={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var dp;function E0(){return dp||(dp=1,function(i){function n(Q,H){var Z=Q.length;Q.push(H);e:for(;0<Z;){var b=Z-1>>>1,z=Q[b];if(0<l(z,H))Q[b]=H,Q[Z]=z,Z=b;else break e}}function r(Q){return Q.length===0?null:Q[0]}function s(Q){if(Q.length===0)return null;var H=Q[0],Z=Q.pop();if(Z!==H){Q[0]=Z;e:for(var b=0,z=Q.length,he=z>>>1;b<he;){var ye=2*(b+1)-1,Ae=Q[ye],Ee=ye+1,we=Q[Ee];if(0>l(Ae,Z))Ee<z&&0>l(we,Ae)?(Q[b]=we,Q[Ee]=Z,b=Ee):(Q[b]=Ae,Q[ye]=Z,b=ye);else if(Ee<z&&0>l(we,Z))Q[b]=we,Q[Ee]=Z,b=Ee;else break e}}return H}function l(Q,H){var Z=Q.sortIndex-H.sortIndex;return Z!==0?Z:Q.id-H.id}if(typeof performance=="object"&&typeof performance.now=="function"){var u=performance;i.unstable_now=function(){return u.now()}}else{var d=Date,p=d.now();i.unstable_now=function(){return d.now()-p}}var h=[],m=[],y=1,v=null,A=3,R=!1,C=!1,x=!1,k=typeof setTimeout=="function"?setTimeout:null,V=typeof clearTimeout=="function"?clearTimeout:null,P=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function U(Q){for(var H=r(m);H!==null;){if(H.callback===null)s(m);else if(H.startTime<=Q)s(m),H.sortIndex=H.expirationTime,n(h,H);else break;H=r(m)}}function B(Q){if(x=!1,U(Q),!C)if(r(h)!==null)C=!0,ce(ne);else{var H=r(m);H!==null&&Ie(B,H.startTime-Q)}}function ne(Q,H){C=!1,x&&(x=!1,V(D),D=-1),R=!0;var Z=A;try{for(U(H),v=r(h);v!==null&&(!(v.expirationTime>H)||Q&&!X());){var b=v.callback;if(typeof b=="function"){v.callback=null,A=v.priorityLevel;var z=b(v.expirationTime<=H);H=i.unstable_now(),typeof z=="function"?v.callback=z:v===r(h)&&s(h),U(H)}else s(h);v=r(h)}if(v!==null)var he=!0;else{var ye=r(m);ye!==null&&Ie(B,ye.startTime-H),he=!1}return he}finally{v=null,A=Z,R=!1}}var T=!1,O=null,D=-1,J=5,ie=-1;function X(){return!(i.unstable_now()-ie<J)}function _(){if(O!==null){var Q=i.unstable_now();ie=Q;var H=!0;try{H=O(!0,Q)}finally{H?$():(T=!1,O=null)}}else T=!1}var $;if(typeof P=="function")$=function(){P(_)};else if(typeof MessageChannel<"u"){var ee=new MessageChannel,Ce=ee.port2;ee.port1.onmessage=_,$=function(){Ce.postMessage(null)}}else $=function(){k(_,0)};function ce(Q){O=Q,T||(T=!0,$())}function Ie(Q,H){D=k(function(){Q(i.unstable_now())},H)}i.unstable_IdlePriority=5,i.unstable_ImmediatePriority=1,i.unstable_LowPriority=4,i.unstable_NormalPriority=3,i.unstable_Profiling=null,i.unstable_UserBlockingPriority=2,i.unstable_cancelCallback=function(Q){Q.callback=null},i.unstable_continueExecution=function(){C||R||(C=!0,ce(ne))},i.unstable_forceFrameRate=function(Q){0>Q||125<Q?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):J=0<Q?Math.floor(1e3/Q):5},i.unstable_getCurrentPriorityLevel=function(){return A},i.unstable_getFirstCallbackNode=function(){return r(h)},i.unstable_next=function(Q){switch(A){case 1:case 2:case 3:var H=3;break;default:H=A}var Z=A;A=H;try{return Q()}finally{A=Z}},i.unstable_pauseExecution=function(){},i.unstable_requestPaint=function(){},i.unstable_runWithPriority=function(Q,H){switch(Q){case 1:case 2:case 3:case 4:case 5:break;default:Q=3}var Z=A;A=Q;try{return H()}finally{A=Z}},i.unstable_scheduleCallback=function(Q,H,Z){var b=i.unstable_now();switch(typeof Z=="object"&&Z!==null?(Z=Z.delay,Z=typeof Z=="number"&&0<Z?b+Z:b):Z=b,Q){case 1:var z=-1;break;case 2:z=250;break;case 5:z=1073741823;break;case 4:z=1e4;break;default:z=5e3}return z=Z+z,Q={id:y++,callback:H,priorityLevel:Q,startTime:Z,expirationTime:z,sortIndex:-1},Z>b?(Q.sortIndex=Z,n(m,Q),r(h)===null&&Q===r(m)&&(x?(V(D),D=-1):x=!0,Ie(B,Z-b))):(Q.sortIndex=z,n(h,Q),C||R||(C=!0,ce(ne))),Q},i.unstable_shouldYield=X,i.unstable_wrapCallback=function(Q){var H=A;return function(){var Z=A;A=H;try{return Q.apply(this,arguments)}finally{A=Z}}}}(Ha)),Ha}var fp;function x0(){return fp||(fp=1,Ja.exports=E0()),Ja.exports}/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var pp;function S0(){if(pp)return xt;pp=1;var i=Zu(),n=x0();function r(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,o=1;o<arguments.length;o++)t+="&args[]="+encodeURIComponent(arguments[o]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var s=new Set,l={};function u(e,t){d(e,t),d(e+"Capture",t)}function d(e,t){for(l[e]=t,e=0;e<t.length;e++)s.add(t[e])}var p=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),h=Object.prototype.hasOwnProperty,m=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,y={},v={};function A(e){return h.call(v,e)?!0:h.call(y,e)?!1:m.test(e)?v[e]=!0:(y[e]=!0,!1)}function R(e,t,o,a){if(o!==null&&o.type===0)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return a?!1:o!==null?!o.acceptsBooleans:(e=e.toLowerCase().slice(0,5),e!=="data-"&&e!=="aria-");default:return!1}}function C(e,t,o,a){if(t===null||typeof t>"u"||R(e,t,o,a))return!0;if(a)return!1;if(o!==null)switch(o.type){case 3:return!t;case 4:return t===!1;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}function x(e,t,o,a,c,f,g){this.acceptsBooleans=t===2||t===3||t===4,this.attributeName=a,this.attributeNamespace=c,this.mustUseProperty=o,this.propertyName=e,this.type=t,this.sanitizeURL=f,this.removeEmptyString=g}var k={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){k[e]=new x(e,0,!1,e,null,!1,!1)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];k[t]=new x(t,1,!1,e[1],null,!1,!1)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){k[e]=new x(e,2,!1,e.toLowerCase(),null,!1,!1)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){k[e]=new x(e,2,!1,e,null,!1,!1)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){k[e]=new x(e,3,!1,e.toLowerCase(),null,!1,!1)}),["checked","multiple","muted","selected"].forEach(function(e){k[e]=new x(e,3,!0,e,null,!1,!1)}),["capture","download"].forEach(function(e){k[e]=new x(e,4,!1,e,null,!1,!1)}),["cols","rows","size","span"].forEach(function(e){k[e]=new x(e,6,!1,e,null,!1,!1)}),["rowSpan","start"].forEach(function(e){k[e]=new x(e,5,!1,e.toLowerCase(),null,!1,!1)});var V=/[\-:]([a-z])/g;function P(e){return e[1].toUpperCase()}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(V,P);k[t]=new x(t,1,!1,e,null,!1,!1)}),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(V,P);k[t]=new x(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(V,P);k[t]=new x(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)}),["tabIndex","crossOrigin"].forEach(function(e){k[e]=new x(e,1,!1,e.toLowerCase(),null,!1,!1)}),k.xlinkHref=new x("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach(function(e){k[e]=new x(e,1,!1,e.toLowerCase(),null,!0,!0)});function U(e,t,o,a){var c=k.hasOwnProperty(t)?k[t]:null;(c!==null?c.type!==0:a||!(2<t.length)||t[0]!=="o"&&t[0]!=="O"||t[1]!=="n"&&t[1]!=="N")&&(C(t,o,c,a)&&(o=null),a||c===null?A(t)&&(o===null?e.removeAttribute(t):e.setAttribute(t,""+o)):c.mustUseProperty?e[c.propertyName]=o===null?c.type===3?!1:"":o:(t=c.attributeName,a=c.attributeNamespace,o===null?e.removeAttribute(t):(c=c.type,o=c===3||c===4&&o===!0?"":""+o,a?e.setAttributeNS(a,t,o):e.setAttribute(t,o))))}var B=i.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,ne=Symbol.for("react.element"),T=Symbol.for("react.portal"),O=Symbol.for("react.fragment"),D=Symbol.for("react.strict_mode"),J=Symbol.for("react.profiler"),ie=Symbol.for("react.provider"),X=Symbol.for("react.context"),_=Symbol.for("react.forward_ref"),$=Symbol.for("react.suspense"),ee=Symbol.for("react.suspense_list"),Ce=Symbol.for("react.memo"),ce=Symbol.for("react.lazy"),Ie=Symbol.for("react.offscreen"),Q=Symbol.iterator;function H(e){return e===null||typeof e!="object"?null:(e=Q&&e[Q]||e["@@iterator"],typeof e=="function"?e:null)}var Z=Object.assign,b;function z(e){if(b===void 0)try{throw Error()}catch(o){var t=o.stack.trim().match(/\n( *(at )?)/);b=t&&t[1]||""}return`
`+b+e}var he=!1;function ye(e,t){if(!e||he)return"";he=!0;var o=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(t,[])}catch(L){var a=L}Reflect.construct(e,[],t)}else{try{t.call()}catch(L){a=L}e.call(t.prototype)}else{try{throw Error()}catch(L){a=L}e()}}catch(L){if(L&&a&&typeof L.stack=="string"){for(var c=L.stack.split(`
`),f=a.stack.split(`
`),g=c.length-1,w=f.length-1;1<=g&&0<=w&&c[g]!==f[w];)w--;for(;1<=g&&0<=w;g--,w--)if(c[g]!==f[w]){if(g!==1||w!==1)do if(g--,w--,0>w||c[g]!==f[w]){var E=`
`+c[g].replace(" at new "," at ");return e.displayName&&E.includes("<anonymous>")&&(E=E.replace("<anonymous>",e.displayName)),E}while(1<=g&&0<=w);break}}}finally{he=!1,Error.prepareStackTrace=o}return(e=e?e.displayName||e.name:"")?z(e):""}function Ae(e){switch(e.tag){case 5:return z(e.type);case 16:return z("Lazy");case 13:return z("Suspense");case 19:return z("SuspenseList");case 0:case 2:case 15:return e=ye(e.type,!1),e;case 11:return e=ye(e.type.render,!1),e;case 1:return e=ye(e.type,!0),e;default:return""}}function Ee(e){if(e==null)return null;if(typeof e=="function")return e.displayName||e.name||null;if(typeof e=="string")return e;switch(e){case O:return"Fragment";case T:return"Portal";case J:return"Profiler";case D:return"StrictMode";case $:return"Suspense";case ee:return"SuspenseList"}if(typeof e=="object")switch(e.$$typeof){case X:return(e.displayName||"Context")+".Consumer";case ie:return(e._context.displayName||"Context")+".Provider";case _:var t=e.render;return e=e.displayName,e||(e=t.displayName||t.name||"",e=e!==""?"ForwardRef("+e+")":"ForwardRef"),e;case Ce:return t=e.displayName||null,t!==null?t:Ee(e.type)||"Memo";case ce:t=e._payload,e=e._init;try{return Ee(e(t))}catch{}}return null}function we(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=t.render,e=e.displayName||e.name||"",t.displayName||(e!==""?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return Ee(t);case 8:return t===D?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof t=="function")return t.displayName||t.name||null;if(typeof t=="string")return t}return null}function xe(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":return e;case"object":return e;default:return""}}function Le(e){var t=e.type;return(e=e.nodeName)&&e.toLowerCase()==="input"&&(t==="checkbox"||t==="radio")}function ot(e){var t=Le(e)?"checked":"value",o=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),a=""+e[t];if(!e.hasOwnProperty(t)&&typeof o<"u"&&typeof o.get=="function"&&typeof o.set=="function"){var c=o.get,f=o.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return c.call(this)},set:function(g){a=""+g,f.call(this,g)}}),Object.defineProperty(e,t,{enumerable:o.enumerable}),{getValue:function(){return a},setValue:function(g){a=""+g},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}function no(e){e._valueTracker||(e._valueTracker=ot(e))}function fc(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var o=t.getValue(),a="";return e&&(a=Le(e)?e.checked?"true":"false":e.value),e=a,e!==o?(t.setValue(e),!0):!1}function ro(e){if(e=e||(typeof document<"u"?document:void 0),typeof e>"u")return null;try{return e.activeElement||e.body}catch{return e.body}}function $s(e,t){var o=t.checked;return Z({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:o??e._wrapperState.initialChecked})}function pc(e,t){var o=t.defaultValue==null?"":t.defaultValue,a=t.checked!=null?t.checked:t.defaultChecked;o=xe(t.value!=null?t.value:o),e._wrapperState={initialChecked:a,initialValue:o,controlled:t.type==="checkbox"||t.type==="radio"?t.checked!=null:t.value!=null}}function hc(e,t){t=t.checked,t!=null&&U(e,"checked",t,!1)}function el(e,t){hc(e,t);var o=xe(t.value),a=t.type;if(o!=null)a==="number"?(o===0&&e.value===""||e.value!=o)&&(e.value=""+o):e.value!==""+o&&(e.value=""+o);else if(a==="submit"||a==="reset"){e.removeAttribute("value");return}t.hasOwnProperty("value")?tl(e,t.type,o):t.hasOwnProperty("defaultValue")&&tl(e,t.type,xe(t.defaultValue)),t.checked==null&&t.defaultChecked!=null&&(e.defaultChecked=!!t.defaultChecked)}function mc(e,t,o){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var a=t.type;if(!(a!=="submit"&&a!=="reset"||t.value!==void 0&&t.value!==null))return;t=""+e._wrapperState.initialValue,o||t===e.value||(e.value=t),e.defaultValue=t}o=e.name,o!==""&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,o!==""&&(e.name=o)}function tl(e,t,o){(t!=="number"||ro(e.ownerDocument)!==e)&&(o==null?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+o&&(e.defaultValue=""+o))}var Zr=Array.isArray;function dr(e,t,o,a){if(e=e.options,t){t={};for(var c=0;c<o.length;c++)t["$"+o[c]]=!0;for(o=0;o<e.length;o++)c=t.hasOwnProperty("$"+e[o].value),e[o].selected!==c&&(e[o].selected=c),c&&a&&(e[o].defaultSelected=!0)}else{for(o=""+xe(o),t=null,c=0;c<e.length;c++){if(e[c].value===o){e[c].selected=!0,a&&(e[c].defaultSelected=!0);return}t!==null||e[c].disabled||(t=e[c])}t!==null&&(t.selected=!0)}}function nl(e,t){if(t.dangerouslySetInnerHTML!=null)throw Error(r(91));return Z({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function gc(e,t){var o=t.value;if(o==null){if(o=t.children,t=t.defaultValue,o!=null){if(t!=null)throw Error(r(92));if(Zr(o)){if(1<o.length)throw Error(r(93));o=o[0]}t=o}t==null&&(t=""),o=t}e._wrapperState={initialValue:xe(o)}}function yc(e,t){var o=xe(t.value),a=xe(t.defaultValue);o!=null&&(o=""+o,o!==e.value&&(e.value=o),t.defaultValue==null&&e.defaultValue!==o&&(e.defaultValue=o)),a!=null&&(e.defaultValue=""+a)}function vc(e){var t=e.textContent;t===e._wrapperState.initialValue&&t!==""&&t!==null&&(e.value=t)}function Ac(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function rl(e,t){return e==null||e==="http://www.w3.org/1999/xhtml"?Ac(t):e==="http://www.w3.org/2000/svg"&&t==="foreignObject"?"http://www.w3.org/1999/xhtml":e}var io,wc=function(e){return typeof MSApp<"u"&&MSApp.execUnsafeLocalFunction?function(t,o,a,c){MSApp.execUnsafeLocalFunction(function(){return e(t,o,a,c)})}:e}(function(e,t){if(e.namespaceURI!=="http://www.w3.org/2000/svg"||"innerHTML"in e)e.innerHTML=t;else{for(io=io||document.createElement("div"),io.innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=io.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}});function Jr(e,t){if(t){var o=e.firstChild;if(o&&o===e.lastChild&&o.nodeType===3){o.nodeValue=t;return}}e.textContent=t}var Hr={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Cg=["Webkit","ms","Moz","O"];Object.keys(Hr).forEach(function(e){Cg.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Hr[t]=Hr[e]})});function Cc(e,t,o){return t==null||typeof t=="boolean"||t===""?"":o||typeof t!="number"||t===0||Hr.hasOwnProperty(e)&&Hr[e]?(""+t).trim():t+"px"}function Ec(e,t){e=e.style;for(var o in t)if(t.hasOwnProperty(o)){var a=o.indexOf("--")===0,c=Cc(o,t[o],a);o==="float"&&(o="cssFloat"),a?e.setProperty(o,c):e[o]=c}}var Eg=Z({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function il(e,t){if(t){if(Eg[e]&&(t.children!=null||t.dangerouslySetInnerHTML!=null))throw Error(r(137,e));if(t.dangerouslySetInnerHTML!=null){if(t.children!=null)throw Error(r(60));if(typeof t.dangerouslySetInnerHTML!="object"||!("__html"in t.dangerouslySetInnerHTML))throw Error(r(61))}if(t.style!=null&&typeof t.style!="object")throw Error(r(62))}}function ol(e,t){if(e.indexOf("-")===-1)return typeof t.is=="string";switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var sl=null;function ll(e){return e=e.target||e.srcElement||window,e.correspondingUseElement&&(e=e.correspondingUseElement),e.nodeType===3?e.parentNode:e}var al=null,fr=null,pr=null;function xc(e){if(e=vi(e)){if(typeof al!="function")throw Error(r(280));var t=e.stateNode;t&&(t=Io(t),al(e.stateNode,e.type,t))}}function Sc(e){fr?pr?pr.push(e):pr=[e]:fr=e}function bc(){if(fr){var e=fr,t=pr;if(pr=fr=null,xc(e),t)for(e=0;e<t.length;e++)xc(t[e])}}function kc(e,t){return e(t)}function Rc(){}var ul=!1;function Ic(e,t,o){if(ul)return e(t,o);ul=!0;try{return kc(e,t,o)}finally{ul=!1,(fr!==null||pr!==null)&&(Rc(),bc())}}function Xr(e,t){var o=e.stateNode;if(o===null)return null;var a=Io(o);if(a===null)return null;o=a[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(a=!a.disabled)||(e=e.type,a=!(e==="button"||e==="input"||e==="select"||e==="textarea")),e=!a;break e;default:e=!1}if(e)return null;if(o&&typeof o!="function")throw Error(r(231,t,typeof o));return o}var cl=!1;if(p)try{var _r={};Object.defineProperty(_r,"passive",{get:function(){cl=!0}}),window.addEventListener("test",_r,_r),window.removeEventListener("test",_r,_r)}catch{cl=!1}function xg(e,t,o,a,c,f,g,w,E){var L=Array.prototype.slice.call(arguments,3);try{t.apply(o,L)}catch(W){this.onError(W)}}var $r=!1,oo=null,so=!1,dl=null,Sg={onError:function(e){$r=!0,oo=e}};function bg(e,t,o,a,c,f,g,w,E){$r=!1,oo=null,xg.apply(Sg,arguments)}function kg(e,t,o,a,c,f,g,w,E){if(bg.apply(this,arguments),$r){if($r){var L=oo;$r=!1,oo=null}else throw Error(r(198));so||(so=!0,dl=L)}}function Kn(e){var t=e,o=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do t=e,(t.flags&4098)!==0&&(o=t.return),e=t.return;while(e)}return t.tag===3?o:null}function Nc(e){if(e.tag===13){var t=e.memoizedState;if(t===null&&(e=e.alternate,e!==null&&(t=e.memoizedState)),t!==null)return t.dehydrated}return null}function Mc(e){if(Kn(e)!==e)throw Error(r(188))}function Rg(e){var t=e.alternate;if(!t){if(t=Kn(e),t===null)throw Error(r(188));return t!==e?null:e}for(var o=e,a=t;;){var c=o.return;if(c===null)break;var f=c.alternate;if(f===null){if(a=c.return,a!==null){o=a;continue}break}if(c.child===f.child){for(f=c.child;f;){if(f===o)return Mc(c),e;if(f===a)return Mc(c),t;f=f.sibling}throw Error(r(188))}if(o.return!==a.return)o=c,a=f;else{for(var g=!1,w=c.child;w;){if(w===o){g=!0,o=c,a=f;break}if(w===a){g=!0,a=c,o=f;break}w=w.sibling}if(!g){for(w=f.child;w;){if(w===o){g=!0,o=f,a=c;break}if(w===a){g=!0,a=f,o=c;break}w=w.sibling}if(!g)throw Error(r(189))}}if(o.alternate!==a)throw Error(r(190))}if(o.tag!==3)throw Error(r(188));return o.stateNode.current===o?e:t}function Lc(e){return e=Rg(e),e!==null?Tc(e):null}function Tc(e){if(e.tag===5||e.tag===6)return e;for(e=e.child;e!==null;){var t=Tc(e);if(t!==null)return t;e=e.sibling}return null}var Vc=n.unstable_scheduleCallback,Fc=n.unstable_cancelCallback,Ig=n.unstable_shouldYield,Ng=n.unstable_requestPaint,Qe=n.unstable_now,Mg=n.unstable_getCurrentPriorityLevel,fl=n.unstable_ImmediatePriority,Oc=n.unstable_UserBlockingPriority,lo=n.unstable_NormalPriority,Lg=n.unstable_LowPriority,Pc=n.unstable_IdlePriority,ao=null,Xt=null;function Tg(e){if(Xt&&typeof Xt.onCommitFiberRoot=="function")try{Xt.onCommitFiberRoot(ao,e,void 0,(e.current.flags&128)===128)}catch{}}var Bt=Math.clz32?Math.clz32:Og,Vg=Math.log,Fg=Math.LN2;function Og(e){return e>>>=0,e===0?32:31-(Vg(e)/Fg|0)|0}var uo=64,co=4194304;function ei(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return e&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function fo(e,t){var o=e.pendingLanes;if(o===0)return 0;var a=0,c=e.suspendedLanes,f=e.pingedLanes,g=o&268435455;if(g!==0){var w=g&~c;w!==0?a=ei(w):(f&=g,f!==0&&(a=ei(f)))}else g=o&~c,g!==0?a=ei(g):f!==0&&(a=ei(f));if(a===0)return 0;if(t!==0&&t!==a&&(t&c)===0&&(c=a&-a,f=t&-t,c>=f||c===16&&(f&4194240)!==0))return t;if((a&4)!==0&&(a|=o&16),t=e.entangledLanes,t!==0)for(e=e.entanglements,t&=a;0<t;)o=31-Bt(t),c=1<<o,a|=e[o],t&=~c;return a}function Pg(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function Ug(e,t){for(var o=e.suspendedLanes,a=e.pingedLanes,c=e.expirationTimes,f=e.pendingLanes;0<f;){var g=31-Bt(f),w=1<<g,E=c[g];E===-1?((w&o)===0||(w&a)!==0)&&(c[g]=Pg(w,t)):E<=t&&(e.expiredLanes|=w),f&=~w}}function pl(e){return e=e.pendingLanes&-1073741825,e!==0?e:e&1073741824?1073741824:0}function Uc(){var e=uo;return uo<<=1,(uo&4194240)===0&&(uo=64),e}function hl(e){for(var t=[],o=0;31>o;o++)t.push(e);return t}function ti(e,t,o){e.pendingLanes|=t,t!==536870912&&(e.suspendedLanes=0,e.pingedLanes=0),e=e.eventTimes,t=31-Bt(t),e[t]=o}function zg(e,t){var o=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var a=e.eventTimes;for(e=e.expirationTimes;0<o;){var c=31-Bt(o),f=1<<c;t[c]=0,a[c]=-1,e[c]=-1,o&=~f}}function ml(e,t){var o=e.entangledLanes|=t;for(e=e.entanglements;o;){var a=31-Bt(o),c=1<<a;c&t|e[a]&t&&(e[a]|=t),o&=~c}}var Fe=0;function zc(e){return e&=-e,1<e?4<e?(e&268435455)!==0?16:536870912:4:1}var qc,gl,jc,Bc,Wc,yl=!1,po=[],yn=null,vn=null,An=null,ni=new Map,ri=new Map,wn=[],qg="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function Dc(e,t){switch(e){case"focusin":case"focusout":yn=null;break;case"dragenter":case"dragleave":vn=null;break;case"mouseover":case"mouseout":An=null;break;case"pointerover":case"pointerout":ni.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":ri.delete(t.pointerId)}}function ii(e,t,o,a,c,f){return e===null||e.nativeEvent!==f?(e={blockedOn:t,domEventName:o,eventSystemFlags:a,nativeEvent:f,targetContainers:[c]},t!==null&&(t=vi(t),t!==null&&gl(t)),e):(e.eventSystemFlags|=a,t=e.targetContainers,c!==null&&t.indexOf(c)===-1&&t.push(c),e)}function jg(e,t,o,a,c){switch(t){case"focusin":return yn=ii(yn,e,t,o,a,c),!0;case"dragenter":return vn=ii(vn,e,t,o,a,c),!0;case"mouseover":return An=ii(An,e,t,o,a,c),!0;case"pointerover":var f=c.pointerId;return ni.set(f,ii(ni.get(f)||null,e,t,o,a,c)),!0;case"gotpointercapture":return f=c.pointerId,ri.set(f,ii(ri.get(f)||null,e,t,o,a,c)),!0}return!1}function Kc(e){var t=Qn(e.target);if(t!==null){var o=Kn(t);if(o!==null){if(t=o.tag,t===13){if(t=Nc(o),t!==null){e.blockedOn=t,Wc(e.priority,function(){jc(o)});return}}else if(t===3&&o.stateNode.current.memoizedState.isDehydrated){e.blockedOn=o.tag===3?o.stateNode.containerInfo:null;return}}}e.blockedOn=null}function ho(e){if(e.blockedOn!==null)return!1;for(var t=e.targetContainers;0<t.length;){var o=Al(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(o===null){o=e.nativeEvent;var a=new o.constructor(o.type,o);sl=a,o.target.dispatchEvent(a),sl=null}else return t=vi(o),t!==null&&gl(t),e.blockedOn=o,!1;t.shift()}return!0}function Qc(e,t,o){ho(e)&&o.delete(t)}function Bg(){yl=!1,yn!==null&&ho(yn)&&(yn=null),vn!==null&&ho(vn)&&(vn=null),An!==null&&ho(An)&&(An=null),ni.forEach(Qc),ri.forEach(Qc)}function oi(e,t){e.blockedOn===t&&(e.blockedOn=null,yl||(yl=!0,n.unstable_scheduleCallback(n.unstable_NormalPriority,Bg)))}function si(e){function t(c){return oi(c,e)}if(0<po.length){oi(po[0],e);for(var o=1;o<po.length;o++){var a=po[o];a.blockedOn===e&&(a.blockedOn=null)}}for(yn!==null&&oi(yn,e),vn!==null&&oi(vn,e),An!==null&&oi(An,e),ni.forEach(t),ri.forEach(t),o=0;o<wn.length;o++)a=wn[o],a.blockedOn===e&&(a.blockedOn=null);for(;0<wn.length&&(o=wn[0],o.blockedOn===null);)Kc(o),o.blockedOn===null&&wn.shift()}var hr=B.ReactCurrentBatchConfig,mo=!0;function Wg(e,t,o,a){var c=Fe,f=hr.transition;hr.transition=null;try{Fe=1,vl(e,t,o,a)}finally{Fe=c,hr.transition=f}}function Dg(e,t,o,a){var c=Fe,f=hr.transition;hr.transition=null;try{Fe=4,vl(e,t,o,a)}finally{Fe=c,hr.transition=f}}function vl(e,t,o,a){if(mo){var c=Al(e,t,o,a);if(c===null)Pl(e,t,a,go,o),Dc(e,a);else if(jg(c,e,t,o,a))a.stopPropagation();else if(Dc(e,a),t&4&&-1<qg.indexOf(e)){for(;c!==null;){var f=vi(c);if(f!==null&&qc(f),f=Al(e,t,o,a),f===null&&Pl(e,t,a,go,o),f===c)break;c=f}c!==null&&a.stopPropagation()}else Pl(e,t,a,null,o)}}var go=null;function Al(e,t,o,a){if(go=null,e=ll(a),e=Qn(e),e!==null)if(t=Kn(e),t===null)e=null;else if(o=t.tag,o===13){if(e=Nc(t),e!==null)return e;e=null}else if(o===3){if(t.stateNode.current.memoizedState.isDehydrated)return t.tag===3?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return go=e,null}function Yc(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Mg()){case fl:return 1;case Oc:return 4;case lo:case Lg:return 16;case Pc:return 536870912;default:return 16}default:return 16}}var Cn=null,wl=null,yo=null;function Gc(){if(yo)return yo;var e,t=wl,o=t.length,a,c="value"in Cn?Cn.value:Cn.textContent,f=c.length;for(e=0;e<o&&t[e]===c[e];e++);var g=o-e;for(a=1;a<=g&&t[o-a]===c[f-a];a++);return yo=c.slice(e,1<a?1-a:void 0)}function vo(e){var t=e.keyCode;return"charCode"in e?(e=e.charCode,e===0&&t===13&&(e=13)):e=t,e===10&&(e=13),32<=e||e===13?e:0}function Ao(){return!0}function Zc(){return!1}function kt(e){function t(o,a,c,f,g){this._reactName=o,this._targetInst=c,this.type=a,this.nativeEvent=f,this.target=g,this.currentTarget=null;for(var w in e)e.hasOwnProperty(w)&&(o=e[w],this[w]=o?o(f):f[w]);return this.isDefaultPrevented=(f.defaultPrevented!=null?f.defaultPrevented:f.returnValue===!1)?Ao:Zc,this.isPropagationStopped=Zc,this}return Z(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var o=this.nativeEvent;o&&(o.preventDefault?o.preventDefault():typeof o.returnValue!="unknown"&&(o.returnValue=!1),this.isDefaultPrevented=Ao)},stopPropagation:function(){var o=this.nativeEvent;o&&(o.stopPropagation?o.stopPropagation():typeof o.cancelBubble!="unknown"&&(o.cancelBubble=!0),this.isPropagationStopped=Ao)},persist:function(){},isPersistent:Ao}),t}var mr={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},Cl=kt(mr),li=Z({},mr,{view:0,detail:0}),Kg=kt(li),El,xl,ai,wo=Z({},li,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:bl,button:0,buttons:0,relatedTarget:function(e){return e.relatedTarget===void 0?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==ai&&(ai&&e.type==="mousemove"?(El=e.screenX-ai.screenX,xl=e.screenY-ai.screenY):xl=El=0,ai=e),El)},movementY:function(e){return"movementY"in e?e.movementY:xl}}),Jc=kt(wo),Qg=Z({},wo,{dataTransfer:0}),Yg=kt(Qg),Gg=Z({},li,{relatedTarget:0}),Sl=kt(Gg),Zg=Z({},mr,{animationName:0,elapsedTime:0,pseudoElement:0}),Jg=kt(Zg),Hg=Z({},mr,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),Xg=kt(Hg),_g=Z({},mr,{data:0}),Hc=kt(_g),$g={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},e1={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},t1={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function n1(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):(e=t1[e])?!!t[e]:!1}function bl(){return n1}var r1=Z({},li,{key:function(e){if(e.key){var t=$g[e.key]||e.key;if(t!=="Unidentified")return t}return e.type==="keypress"?(e=vo(e),e===13?"Enter":String.fromCharCode(e)):e.type==="keydown"||e.type==="keyup"?e1[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:bl,charCode:function(e){return e.type==="keypress"?vo(e):0},keyCode:function(e){return e.type==="keydown"||e.type==="keyup"?e.keyCode:0},which:function(e){return e.type==="keypress"?vo(e):e.type==="keydown"||e.type==="keyup"?e.keyCode:0}}),i1=kt(r1),o1=Z({},wo,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Xc=kt(o1),s1=Z({},li,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:bl}),l1=kt(s1),a1=Z({},mr,{propertyName:0,elapsedTime:0,pseudoElement:0}),u1=kt(a1),c1=Z({},wo,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),d1=kt(c1),f1=[9,13,27,32],kl=p&&"CompositionEvent"in window,ui=null;p&&"documentMode"in document&&(ui=document.documentMode);var p1=p&&"TextEvent"in window&&!ui,_c=p&&(!kl||ui&&8<ui&&11>=ui),$c=" ",ed=!1;function td(e,t){switch(e){case"keyup":return f1.indexOf(t.keyCode)!==-1;case"keydown":return t.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function nd(e){return e=e.detail,typeof e=="object"&&"data"in e?e.data:null}var gr=!1;function h1(e,t){switch(e){case"compositionend":return nd(t);case"keypress":return t.which!==32?null:(ed=!0,$c);case"textInput":return e=t.data,e===$c&&ed?null:e;default:return null}}function m1(e,t){if(gr)return e==="compositionend"||!kl&&td(e,t)?(e=Gc(),yo=wl=Cn=null,gr=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return _c&&t.locale!=="ko"?null:t.data;default:return null}}var g1={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function rd(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t==="input"?!!g1[e.type]:t==="textarea"}function id(e,t,o,a){Sc(a),t=bo(t,"onChange"),0<t.length&&(o=new Cl("onChange","change",null,o,a),e.push({event:o,listeners:t}))}var ci=null,di=null;function y1(e){Ed(e,0)}function Co(e){var t=Cr(e);if(fc(t))return e}function v1(e,t){if(e==="change")return t}var od=!1;if(p){var Rl;if(p){var Il="oninput"in document;if(!Il){var sd=document.createElement("div");sd.setAttribute("oninput","return;"),Il=typeof sd.oninput=="function"}Rl=Il}else Rl=!1;od=Rl&&(!document.documentMode||9<document.documentMode)}function ld(){ci&&(ci.detachEvent("onpropertychange",ad),di=ci=null)}function ad(e){if(e.propertyName==="value"&&Co(di)){var t=[];id(t,di,e,ll(e)),Ic(y1,t)}}function A1(e,t,o){e==="focusin"?(ld(),ci=t,di=o,ci.attachEvent("onpropertychange",ad)):e==="focusout"&&ld()}function w1(e){if(e==="selectionchange"||e==="keyup"||e==="keydown")return Co(di)}function C1(e,t){if(e==="click")return Co(t)}function E1(e,t){if(e==="input"||e==="change")return Co(t)}function x1(e,t){return e===t&&(e!==0||1/e===1/t)||e!==e&&t!==t}var Wt=typeof Object.is=="function"?Object.is:x1;function fi(e,t){if(Wt(e,t))return!0;if(typeof e!="object"||e===null||typeof t!="object"||t===null)return!1;var o=Object.keys(e),a=Object.keys(t);if(o.length!==a.length)return!1;for(a=0;a<o.length;a++){var c=o[a];if(!h.call(t,c)||!Wt(e[c],t[c]))return!1}return!0}function ud(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cd(e,t){var o=ud(e);e=0;for(var a;o;){if(o.nodeType===3){if(a=e+o.textContent.length,e<=t&&a>=t)return{node:o,offset:t-e};e=a}e:{for(;o;){if(o.nextSibling){o=o.nextSibling;break e}o=o.parentNode}o=void 0}o=ud(o)}}function dd(e,t){return e&&t?e===t?!0:e&&e.nodeType===3?!1:t&&t.nodeType===3?dd(e,t.parentNode):"contains"in e?e.contains(t):e.compareDocumentPosition?!!(e.compareDocumentPosition(t)&16):!1:!1}function fd(){for(var e=window,t=ro();t instanceof e.HTMLIFrameElement;){try{var o=typeof t.contentWindow.location.href=="string"}catch{o=!1}if(o)e=t.contentWindow;else break;t=ro(e.document)}return t}function Nl(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&(t==="input"&&(e.type==="text"||e.type==="search"||e.type==="tel"||e.type==="url"||e.type==="password")||t==="textarea"||e.contentEditable==="true")}function S1(e){var t=fd(),o=e.focusedElem,a=e.selectionRange;if(t!==o&&o&&o.ownerDocument&&dd(o.ownerDocument.documentElement,o)){if(a!==null&&Nl(o)){if(t=a.start,e=a.end,e===void 0&&(e=t),"selectionStart"in o)o.selectionStart=t,o.selectionEnd=Math.min(e,o.value.length);else if(e=(t=o.ownerDocument||document)&&t.defaultView||window,e.getSelection){e=e.getSelection();var c=o.textContent.length,f=Math.min(a.start,c);a=a.end===void 0?f:Math.min(a.end,c),!e.extend&&f>a&&(c=a,a=f,f=c),c=cd(o,f);var g=cd(o,a);c&&g&&(e.rangeCount!==1||e.anchorNode!==c.node||e.anchorOffset!==c.offset||e.focusNode!==g.node||e.focusOffset!==g.offset)&&(t=t.createRange(),t.setStart(c.node,c.offset),e.removeAllRanges(),f>a?(e.addRange(t),e.extend(g.node,g.offset)):(t.setEnd(g.node,g.offset),e.addRange(t)))}}for(t=[],e=o;e=e.parentNode;)e.nodeType===1&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for(typeof o.focus=="function"&&o.focus(),o=0;o<t.length;o++)e=t[o],e.element.scrollLeft=e.left,e.element.scrollTop=e.top}}var b1=p&&"documentMode"in document&&11>=document.documentMode,yr=null,Ml=null,pi=null,Ll=!1;function pd(e,t,o){var a=o.window===o?o.document:o.nodeType===9?o:o.ownerDocument;Ll||yr==null||yr!==ro(a)||(a=yr,"selectionStart"in a&&Nl(a)?a={start:a.selectionStart,end:a.selectionEnd}:(a=(a.ownerDocument&&a.ownerDocument.defaultView||window).getSelection(),a={anchorNode:a.anchorNode,anchorOffset:a.anchorOffset,focusNode:a.focusNode,focusOffset:a.focusOffset}),pi&&fi(pi,a)||(pi=a,a=bo(Ml,"onSelect"),0<a.length&&(t=new Cl("onSelect","select",null,t,o),e.push({event:t,listeners:a}),t.target=yr)))}function Eo(e,t){var o={};return o[e.toLowerCase()]=t.toLowerCase(),o["Webkit"+e]="webkit"+t,o["Moz"+e]="moz"+t,o}var vr={animationend:Eo("Animation","AnimationEnd"),animationiteration:Eo("Animation","AnimationIteration"),animationstart:Eo("Animation","AnimationStart"),transitionend:Eo("Transition","TransitionEnd")},Tl={},hd={};p&&(hd=document.createElement("div").style,"AnimationEvent"in window||(delete vr.animationend.animation,delete vr.animationiteration.animation,delete vr.animationstart.animation),"TransitionEvent"in window||delete vr.transitionend.transition);function xo(e){if(Tl[e])return Tl[e];if(!vr[e])return e;var t=vr[e],o;for(o in t)if(t.hasOwnProperty(o)&&o in hd)return Tl[e]=t[o];return e}var md=xo("animationend"),gd=xo("animationiteration"),yd=xo("animationstart"),vd=xo("transitionend"),Ad=new Map,wd="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function En(e,t){Ad.set(e,t),u(t,[e])}for(var Vl=0;Vl<wd.length;Vl++){var Fl=wd[Vl],k1=Fl.toLowerCase(),R1=Fl[0].toUpperCase()+Fl.slice(1);En(k1,"on"+R1)}En(md,"onAnimationEnd"),En(gd,"onAnimationIteration"),En(yd,"onAnimationStart"),En("dblclick","onDoubleClick"),En("focusin","onFocus"),En("focusout","onBlur"),En(vd,"onTransitionEnd"),d("onMouseEnter",["mouseout","mouseover"]),d("onMouseLeave",["mouseout","mouseover"]),d("onPointerEnter",["pointerout","pointerover"]),d("onPointerLeave",["pointerout","pointerover"]),u("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),u("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),u("onBeforeInput",["compositionend","keypress","textInput","paste"]),u("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),u("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var hi="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),I1=new Set("cancel close invalid load scroll toggle".split(" ").concat(hi));function Cd(e,t,o){var a=e.type||"unknown-event";e.currentTarget=o,kg(a,t,void 0,e),e.currentTarget=null}function Ed(e,t){t=(t&4)!==0;for(var o=0;o<e.length;o++){var a=e[o],c=a.event;a=a.listeners;e:{var f=void 0;if(t)for(var g=a.length-1;0<=g;g--){var w=a[g],E=w.instance,L=w.currentTarget;if(w=w.listener,E!==f&&c.isPropagationStopped())break e;Cd(c,w,L),f=E}else for(g=0;g<a.length;g++){if(w=a[g],E=w.instance,L=w.currentTarget,w=w.listener,E!==f&&c.isPropagationStopped())break e;Cd(c,w,L),f=E}}}if(so)throw e=dl,so=!1,dl=null,e}function Ue(e,t){var o=t[Wl];o===void 0&&(o=t[Wl]=new Set);var a=e+"__bubble";o.has(a)||(xd(t,e,2,!1),o.add(a))}function Ol(e,t,o){var a=0;t&&(a|=4),xd(o,e,a,t)}var So="_reactListening"+Math.random().toString(36).slice(2);function mi(e){if(!e[So]){e[So]=!0,s.forEach(function(o){o!=="selectionchange"&&(I1.has(o)||Ol(o,!1,e),Ol(o,!0,e))});var t=e.nodeType===9?e:e.ownerDocument;t===null||t[So]||(t[So]=!0,Ol("selectionchange",!1,t))}}function xd(e,t,o,a){switch(Yc(t)){case 1:var c=Wg;break;case 4:c=Dg;break;default:c=vl}o=c.bind(null,t,o,e),c=void 0,!cl||t!=="touchstart"&&t!=="touchmove"&&t!=="wheel"||(c=!0),a?c!==void 0?e.addEventListener(t,o,{capture:!0,passive:c}):e.addEventListener(t,o,!0):c!==void 0?e.addEventListener(t,o,{passive:c}):e.addEventListener(t,o,!1)}function Pl(e,t,o,a,c){var f=a;if((t&1)===0&&(t&2)===0&&a!==null)e:for(;;){if(a===null)return;var g=a.tag;if(g===3||g===4){var w=a.stateNode.containerInfo;if(w===c||w.nodeType===8&&w.parentNode===c)break;if(g===4)for(g=a.return;g!==null;){var E=g.tag;if((E===3||E===4)&&(E=g.stateNode.containerInfo,E===c||E.nodeType===8&&E.parentNode===c))return;g=g.return}for(;w!==null;){if(g=Qn(w),g===null)return;if(E=g.tag,E===5||E===6){a=f=g;continue e}w=w.parentNode}}a=a.return}Ic(function(){var L=f,W=ll(o),K=[];e:{var j=Ad.get(e);if(j!==void 0){var re=Cl,se=e;switch(e){case"keypress":if(vo(o)===0)break e;case"keydown":case"keyup":re=i1;break;case"focusin":se="focus",re=Sl;break;case"focusout":se="blur",re=Sl;break;case"beforeblur":case"afterblur":re=Sl;break;case"click":if(o.button===2)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":re=Jc;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":re=Yg;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":re=l1;break;case md:case gd:case yd:re=Jg;break;case vd:re=u1;break;case"scroll":re=Kg;break;case"wheel":re=d1;break;case"copy":case"cut":case"paste":re=Xg;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":re=Xc}var ue=(t&4)!==0,Ye=!ue&&e==="scroll",I=ue?j!==null?j+"Capture":null:j;ue=[];for(var S=L,N;S!==null;){N=S;var Y=N.stateNode;if(N.tag===5&&Y!==null&&(N=Y,I!==null&&(Y=Xr(S,I),Y!=null&&ue.push(gi(S,Y,N)))),Ye)break;S=S.return}0<ue.length&&(j=new re(j,se,null,o,W),K.push({event:j,listeners:ue}))}}if((t&7)===0){e:{if(j=e==="mouseover"||e==="pointerover",re=e==="mouseout"||e==="pointerout",j&&o!==sl&&(se=o.relatedTarget||o.fromElement)&&(Qn(se)||se[an]))break e;if((re||j)&&(j=W.window===W?W:(j=W.ownerDocument)?j.defaultView||j.parentWindow:window,re?(se=o.relatedTarget||o.toElement,re=L,se=se?Qn(se):null,se!==null&&(Ye=Kn(se),se!==Ye||se.tag!==5&&se.tag!==6)&&(se=null)):(re=null,se=L),re!==se)){if(ue=Jc,Y="onMouseLeave",I="onMouseEnter",S="mouse",(e==="pointerout"||e==="pointerover")&&(ue=Xc,Y="onPointerLeave",I="onPointerEnter",S="pointer"),Ye=re==null?j:Cr(re),N=se==null?j:Cr(se),j=new ue(Y,S+"leave",re,o,W),j.target=Ye,j.relatedTarget=N,Y=null,Qn(W)===L&&(ue=new ue(I,S+"enter",se,o,W),ue.target=N,ue.relatedTarget=Ye,Y=ue),Ye=Y,re&&se)t:{for(ue=re,I=se,S=0,N=ue;N;N=Ar(N))S++;for(N=0,Y=I;Y;Y=Ar(Y))N++;for(;0<S-N;)ue=Ar(ue),S--;for(;0<N-S;)I=Ar(I),N--;for(;S--;){if(ue===I||I!==null&&ue===I.alternate)break t;ue=Ar(ue),I=Ar(I)}ue=null}else ue=null;re!==null&&Sd(K,j,re,ue,!1),se!==null&&Ye!==null&&Sd(K,Ye,se,ue,!0)}}e:{if(j=L?Cr(L):window,re=j.nodeName&&j.nodeName.toLowerCase(),re==="select"||re==="input"&&j.type==="file")var de=v1;else if(rd(j))if(od)de=E1;else{de=w1;var fe=A1}else(re=j.nodeName)&&re.toLowerCase()==="input"&&(j.type==="checkbox"||j.type==="radio")&&(de=C1);if(de&&(de=de(e,L))){id(K,de,o,W);break e}fe&&fe(e,j,L),e==="focusout"&&(fe=j._wrapperState)&&fe.controlled&&j.type==="number"&&tl(j,"number",j.value)}switch(fe=L?Cr(L):window,e){case"focusin":(rd(fe)||fe.contentEditable==="true")&&(yr=fe,Ml=L,pi=null);break;case"focusout":pi=Ml=yr=null;break;case"mousedown":Ll=!0;break;case"contextmenu":case"mouseup":case"dragend":Ll=!1,pd(K,o,W);break;case"selectionchange":if(b1)break;case"keydown":case"keyup":pd(K,o,W)}var pe;if(kl)e:{switch(e){case"compositionstart":var me="onCompositionStart";break e;case"compositionend":me="onCompositionEnd";break e;case"compositionupdate":me="onCompositionUpdate";break e}me=void 0}else gr?td(e,o)&&(me="onCompositionEnd"):e==="keydown"&&o.keyCode===229&&(me="onCompositionStart");me&&(_c&&o.locale!=="ko"&&(gr||me!=="onCompositionStart"?me==="onCompositionEnd"&&gr&&(pe=Gc()):(Cn=W,wl="value"in Cn?Cn.value:Cn.textContent,gr=!0)),fe=bo(L,me),0<fe.length&&(me=new Hc(me,e,null,o,W),K.push({event:me,listeners:fe}),pe?me.data=pe:(pe=nd(o),pe!==null&&(me.data=pe)))),(pe=p1?h1(e,o):m1(e,o))&&(L=bo(L,"onBeforeInput"),0<L.length&&(W=new Hc("onBeforeInput","beforeinput",null,o,W),K.push({event:W,listeners:L}),W.data=pe))}Ed(K,t)})}function gi(e,t,o){return{instance:e,listener:t,currentTarget:o}}function bo(e,t){for(var o=t+"Capture",a=[];e!==null;){var c=e,f=c.stateNode;c.tag===5&&f!==null&&(c=f,f=Xr(e,o),f!=null&&a.unshift(gi(e,f,c)),f=Xr(e,t),f!=null&&a.push(gi(e,f,c))),e=e.return}return a}function Ar(e){if(e===null)return null;do e=e.return;while(e&&e.tag!==5);return e||null}function Sd(e,t,o,a,c){for(var f=t._reactName,g=[];o!==null&&o!==a;){var w=o,E=w.alternate,L=w.stateNode;if(E!==null&&E===a)break;w.tag===5&&L!==null&&(w=L,c?(E=Xr(o,f),E!=null&&g.unshift(gi(o,E,w))):c||(E=Xr(o,f),E!=null&&g.push(gi(o,E,w)))),o=o.return}g.length!==0&&e.push({event:t,listeners:g})}var N1=/\r\n?/g,M1=/\u0000|\uFFFD/g;function bd(e){return(typeof e=="string"?e:""+e).replace(N1,`
`).replace(M1,"")}function ko(e,t,o){if(t=bd(t),bd(e)!==t&&o)throw Error(r(425))}function Ro(){}var Ul=null,zl=null;function ql(e,t){return e==="textarea"||e==="noscript"||typeof t.children=="string"||typeof t.children=="number"||typeof t.dangerouslySetInnerHTML=="object"&&t.dangerouslySetInnerHTML!==null&&t.dangerouslySetInnerHTML.__html!=null}var jl=typeof setTimeout=="function"?setTimeout:void 0,L1=typeof clearTimeout=="function"?clearTimeout:void 0,kd=typeof Promise=="function"?Promise:void 0,T1=typeof queueMicrotask=="function"?queueMicrotask:typeof kd<"u"?function(e){return kd.resolve(null).then(e).catch(V1)}:jl;function V1(e){setTimeout(function(){throw e})}function Bl(e,t){var o=t,a=0;do{var c=o.nextSibling;if(e.removeChild(o),c&&c.nodeType===8)if(o=c.data,o==="/$"){if(a===0){e.removeChild(c),si(t);return}a--}else o!=="$"&&o!=="$?"&&o!=="$!"||a++;o=c}while(o);si(t)}function xn(e){for(;e!=null;e=e.nextSibling){var t=e.nodeType;if(t===1||t===3)break;if(t===8){if(t=e.data,t==="$"||t==="$!"||t==="$?")break;if(t==="/$")return null}}return e}function Rd(e){e=e.previousSibling;for(var t=0;e;){if(e.nodeType===8){var o=e.data;if(o==="$"||o==="$!"||o==="$?"){if(t===0)return e;t--}else o==="/$"&&t++}e=e.previousSibling}return null}var wr=Math.random().toString(36).slice(2),_t="__reactFiber$"+wr,yi="__reactProps$"+wr,an="__reactContainer$"+wr,Wl="__reactEvents$"+wr,F1="__reactListeners$"+wr,O1="__reactHandles$"+wr;function Qn(e){var t=e[_t];if(t)return t;for(var o=e.parentNode;o;){if(t=o[an]||o[_t]){if(o=t.alternate,t.child!==null||o!==null&&o.child!==null)for(e=Rd(e);e!==null;){if(o=e[_t])return o;e=Rd(e)}return t}e=o,o=e.parentNode}return null}function vi(e){return e=e[_t]||e[an],!e||e.tag!==5&&e.tag!==6&&e.tag!==13&&e.tag!==3?null:e}function Cr(e){if(e.tag===5||e.tag===6)return e.stateNode;throw Error(r(33))}function Io(e){return e[yi]||null}var Dl=[],Er=-1;function Sn(e){return{current:e}}function ze(e){0>Er||(e.current=Dl[Er],Dl[Er]=null,Er--)}function Pe(e,t){Er++,Dl[Er]=e.current,e.current=t}var bn={},ut=Sn(bn),vt=Sn(!1),Yn=bn;function xr(e,t){var o=e.type.contextTypes;if(!o)return bn;var a=e.stateNode;if(a&&a.__reactInternalMemoizedUnmaskedChildContext===t)return a.__reactInternalMemoizedMaskedChildContext;var c={},f;for(f in o)c[f]=t[f];return a&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=c),c}function At(e){return e=e.childContextTypes,e!=null}function No(){ze(vt),ze(ut)}function Id(e,t,o){if(ut.current!==bn)throw Error(r(168));Pe(ut,t),Pe(vt,o)}function Nd(e,t,o){var a=e.stateNode;if(t=t.childContextTypes,typeof a.getChildContext!="function")return o;a=a.getChildContext();for(var c in a)if(!(c in t))throw Error(r(108,we(e)||"Unknown",c));return Z({},o,a)}function Mo(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||bn,Yn=ut.current,Pe(ut,e),Pe(vt,vt.current),!0}function Md(e,t,o){var a=e.stateNode;if(!a)throw Error(r(169));o?(e=Nd(e,t,Yn),a.__reactInternalMemoizedMergedChildContext=e,ze(vt),ze(ut),Pe(ut,e)):ze(vt),Pe(vt,o)}var un=null,Lo=!1,Kl=!1;function Ld(e){un===null?un=[e]:un.push(e)}function P1(e){Lo=!0,Ld(e)}function kn(){if(!Kl&&un!==null){Kl=!0;var e=0,t=Fe;try{var o=un;for(Fe=1;e<o.length;e++){var a=o[e];do a=a(!0);while(a!==null)}un=null,Lo=!1}catch(c){throw un!==null&&(un=un.slice(e+1)),Vc(fl,kn),c}finally{Fe=t,Kl=!1}}return null}var Sr=[],br=0,To=null,Vo=0,Ft=[],Ot=0,Gn=null,cn=1,dn="";function Zn(e,t){Sr[br++]=Vo,Sr[br++]=To,To=e,Vo=t}function Td(e,t,o){Ft[Ot++]=cn,Ft[Ot++]=dn,Ft[Ot++]=Gn,Gn=e;var a=cn;e=dn;var c=32-Bt(a)-1;a&=~(1<<c),o+=1;var f=32-Bt(t)+c;if(30<f){var g=c-c%5;f=(a&(1<<g)-1).toString(32),a>>=g,c-=g,cn=1<<32-Bt(t)+c|o<<c|a,dn=f+e}else cn=1<<f|o<<c|a,dn=e}function Ql(e){e.return!==null&&(Zn(e,1),Td(e,1,0))}function Yl(e){for(;e===To;)To=Sr[--br],Sr[br]=null,Vo=Sr[--br],Sr[br]=null;for(;e===Gn;)Gn=Ft[--Ot],Ft[Ot]=null,dn=Ft[--Ot],Ft[Ot]=null,cn=Ft[--Ot],Ft[Ot]=null}var Rt=null,It=null,je=!1,Dt=null;function Vd(e,t){var o=qt(5,null,null,0);o.elementType="DELETED",o.stateNode=t,o.return=e,t=e.deletions,t===null?(e.deletions=[o],e.flags|=16):t.push(o)}function Fd(e,t){switch(e.tag){case 5:var o=e.type;return t=t.nodeType!==1||o.toLowerCase()!==t.nodeName.toLowerCase()?null:t,t!==null?(e.stateNode=t,Rt=e,It=xn(t.firstChild),!0):!1;case 6:return t=e.pendingProps===""||t.nodeType!==3?null:t,t!==null?(e.stateNode=t,Rt=e,It=null,!0):!1;case 13:return t=t.nodeType!==8?null:t,t!==null?(o=Gn!==null?{id:cn,overflow:dn}:null,e.memoizedState={dehydrated:t,treeContext:o,retryLane:1073741824},o=qt(18,null,null,0),o.stateNode=t,o.return=e,e.child=o,Rt=e,It=null,!0):!1;default:return!1}}function Gl(e){return(e.mode&1)!==0&&(e.flags&128)===0}function Zl(e){if(je){var t=It;if(t){var o=t;if(!Fd(e,t)){if(Gl(e))throw Error(r(418));t=xn(o.nextSibling);var a=Rt;t&&Fd(e,t)?Vd(a,o):(e.flags=e.flags&-4097|2,je=!1,Rt=e)}}else{if(Gl(e))throw Error(r(418));e.flags=e.flags&-4097|2,je=!1,Rt=e}}}function Od(e){for(e=e.return;e!==null&&e.tag!==5&&e.tag!==3&&e.tag!==13;)e=e.return;Rt=e}function Fo(e){if(e!==Rt)return!1;if(!je)return Od(e),je=!0,!1;var t;if((t=e.tag!==3)&&!(t=e.tag!==5)&&(t=e.type,t=t!=="head"&&t!=="body"&&!ql(e.type,e.memoizedProps)),t&&(t=It)){if(Gl(e))throw Pd(),Error(r(418));for(;t;)Vd(e,t),t=xn(t.nextSibling)}if(Od(e),e.tag===13){if(e=e.memoizedState,e=e!==null?e.dehydrated:null,!e)throw Error(r(317));e:{for(e=e.nextSibling,t=0;e;){if(e.nodeType===8){var o=e.data;if(o==="/$"){if(t===0){It=xn(e.nextSibling);break e}t--}else o!=="$"&&o!=="$!"&&o!=="$?"||t++}e=e.nextSibling}It=null}}else It=Rt?xn(e.stateNode.nextSibling):null;return!0}function Pd(){for(var e=It;e;)e=xn(e.nextSibling)}function kr(){It=Rt=null,je=!1}function Jl(e){Dt===null?Dt=[e]:Dt.push(e)}var U1=B.ReactCurrentBatchConfig;function Ai(e,t,o){if(e=o.ref,e!==null&&typeof e!="function"&&typeof e!="object"){if(o._owner){if(o=o._owner,o){if(o.tag!==1)throw Error(r(309));var a=o.stateNode}if(!a)throw Error(r(147,e));var c=a,f=""+e;return t!==null&&t.ref!==null&&typeof t.ref=="function"&&t.ref._stringRef===f?t.ref:(t=function(g){var w=c.refs;g===null?delete w[f]:w[f]=g},t._stringRef=f,t)}if(typeof e!="string")throw Error(r(284));if(!o._owner)throw Error(r(290,e))}return e}function Oo(e,t){throw e=Object.prototype.toString.call(t),Error(r(31,e==="[object Object]"?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function Ud(e){var t=e._init;return t(e._payload)}function zd(e){function t(I,S){if(e){var N=I.deletions;N===null?(I.deletions=[S],I.flags|=16):N.push(S)}}function o(I,S){if(!e)return null;for(;S!==null;)t(I,S),S=S.sibling;return null}function a(I,S){for(I=new Map;S!==null;)S.key!==null?I.set(S.key,S):I.set(S.index,S),S=S.sibling;return I}function c(I,S){return I=Fn(I,S),I.index=0,I.sibling=null,I}function f(I,S,N){return I.index=N,e?(N=I.alternate,N!==null?(N=N.index,N<S?(I.flags|=2,S):N):(I.flags|=2,S)):(I.flags|=1048576,S)}function g(I){return e&&I.alternate===null&&(I.flags|=2),I}function w(I,S,N,Y){return S===null||S.tag!==6?(S=ja(N,I.mode,Y),S.return=I,S):(S=c(S,N),S.return=I,S)}function E(I,S,N,Y){var de=N.type;return de===O?W(I,S,N.props.children,Y,N.key):S!==null&&(S.elementType===de||typeof de=="object"&&de!==null&&de.$$typeof===ce&&Ud(de)===S.type)?(Y=c(S,N.props),Y.ref=Ai(I,S,N),Y.return=I,Y):(Y=os(N.type,N.key,N.props,null,I.mode,Y),Y.ref=Ai(I,S,N),Y.return=I,Y)}function L(I,S,N,Y){return S===null||S.tag!==4||S.stateNode.containerInfo!==N.containerInfo||S.stateNode.implementation!==N.implementation?(S=Ba(N,I.mode,Y),S.return=I,S):(S=c(S,N.children||[]),S.return=I,S)}function W(I,S,N,Y,de){return S===null||S.tag!==7?(S=nr(N,I.mode,Y,de),S.return=I,S):(S=c(S,N),S.return=I,S)}function K(I,S,N){if(typeof S=="string"&&S!==""||typeof S=="number")return S=ja(""+S,I.mode,N),S.return=I,S;if(typeof S=="object"&&S!==null){switch(S.$$typeof){case ne:return N=os(S.type,S.key,S.props,null,I.mode,N),N.ref=Ai(I,null,S),N.return=I,N;case T:return S=Ba(S,I.mode,N),S.return=I,S;case ce:var Y=S._init;return K(I,Y(S._payload),N)}if(Zr(S)||H(S))return S=nr(S,I.mode,N,null),S.return=I,S;Oo(I,S)}return null}function j(I,S,N,Y){var de=S!==null?S.key:null;if(typeof N=="string"&&N!==""||typeof N=="number")return de!==null?null:w(I,S,""+N,Y);if(typeof N=="object"&&N!==null){switch(N.$$typeof){case ne:return N.key===de?E(I,S,N,Y):null;case T:return N.key===de?L(I,S,N,Y):null;case ce:return de=N._init,j(I,S,de(N._payload),Y)}if(Zr(N)||H(N))return de!==null?null:W(I,S,N,Y,null);Oo(I,N)}return null}function re(I,S,N,Y,de){if(typeof Y=="string"&&Y!==""||typeof Y=="number")return I=I.get(N)||null,w(S,I,""+Y,de);if(typeof Y=="object"&&Y!==null){switch(Y.$$typeof){case ne:return I=I.get(Y.key===null?N:Y.key)||null,E(S,I,Y,de);case T:return I=I.get(Y.key===null?N:Y.key)||null,L(S,I,Y,de);case ce:var fe=Y._init;return re(I,S,N,fe(Y._payload),de)}if(Zr(Y)||H(Y))return I=I.get(N)||null,W(S,I,Y,de,null);Oo(S,Y)}return null}function se(I,S,N,Y){for(var de=null,fe=null,pe=S,me=S=0,nt=null;pe!==null&&me<N.length;me++){pe.index>me?(nt=pe,pe=null):nt=pe.sibling;var Me=j(I,pe,N[me],Y);if(Me===null){pe===null&&(pe=nt);break}e&&pe&&Me.alternate===null&&t(I,pe),S=f(Me,S,me),fe===null?de=Me:fe.sibling=Me,fe=Me,pe=nt}if(me===N.length)return o(I,pe),je&&Zn(I,me),de;if(pe===null){for(;me<N.length;me++)pe=K(I,N[me],Y),pe!==null&&(S=f(pe,S,me),fe===null?de=pe:fe.sibling=pe,fe=pe);return je&&Zn(I,me),de}for(pe=a(I,pe);me<N.length;me++)nt=re(pe,I,me,N[me],Y),nt!==null&&(e&&nt.alternate!==null&&pe.delete(nt.key===null?me:nt.key),S=f(nt,S,me),fe===null?de=nt:fe.sibling=nt,fe=nt);return e&&pe.forEach(function(On){return t(I,On)}),je&&Zn(I,me),de}function ue(I,S,N,Y){var de=H(N);if(typeof de!="function")throw Error(r(150));if(N=de.call(N),N==null)throw Error(r(151));for(var fe=de=null,pe=S,me=S=0,nt=null,Me=N.next();pe!==null&&!Me.done;me++,Me=N.next()){pe.index>me?(nt=pe,pe=null):nt=pe.sibling;var On=j(I,pe,Me.value,Y);if(On===null){pe===null&&(pe=nt);break}e&&pe&&On.alternate===null&&t(I,pe),S=f(On,S,me),fe===null?de=On:fe.sibling=On,fe=On,pe=nt}if(Me.done)return o(I,pe),je&&Zn(I,me),de;if(pe===null){for(;!Me.done;me++,Me=N.next())Me=K(I,Me.value,Y),Me!==null&&(S=f(Me,S,me),fe===null?de=Me:fe.sibling=Me,fe=Me);return je&&Zn(I,me),de}for(pe=a(I,pe);!Me.done;me++,Me=N.next())Me=re(pe,I,me,Me.value,Y),Me!==null&&(e&&Me.alternate!==null&&pe.delete(Me.key===null?me:Me.key),S=f(Me,S,me),fe===null?de=Me:fe.sibling=Me,fe=Me);return e&&pe.forEach(function(g0){return t(I,g0)}),je&&Zn(I,me),de}function Ye(I,S,N,Y){if(typeof N=="object"&&N!==null&&N.type===O&&N.key===null&&(N=N.props.children),typeof N=="object"&&N!==null){switch(N.$$typeof){case ne:e:{for(var de=N.key,fe=S;fe!==null;){if(fe.key===de){if(de=N.type,de===O){if(fe.tag===7){o(I,fe.sibling),S=c(fe,N.props.children),S.return=I,I=S;break e}}else if(fe.elementType===de||typeof de=="object"&&de!==null&&de.$$typeof===ce&&Ud(de)===fe.type){o(I,fe.sibling),S=c(fe,N.props),S.ref=Ai(I,fe,N),S.return=I,I=S;break e}o(I,fe);break}else t(I,fe);fe=fe.sibling}N.type===O?(S=nr(N.props.children,I.mode,Y,N.key),S.return=I,I=S):(Y=os(N.type,N.key,N.props,null,I.mode,Y),Y.ref=Ai(I,S,N),Y.return=I,I=Y)}return g(I);case T:e:{for(fe=N.key;S!==null;){if(S.key===fe)if(S.tag===4&&S.stateNode.containerInfo===N.containerInfo&&S.stateNode.implementation===N.implementation){o(I,S.sibling),S=c(S,N.children||[]),S.return=I,I=S;break e}else{o(I,S);break}else t(I,S);S=S.sibling}S=Ba(N,I.mode,Y),S.return=I,I=S}return g(I);case ce:return fe=N._init,Ye(I,S,fe(N._payload),Y)}if(Zr(N))return se(I,S,N,Y);if(H(N))return ue(I,S,N,Y);Oo(I,N)}return typeof N=="string"&&N!==""||typeof N=="number"?(N=""+N,S!==null&&S.tag===6?(o(I,S.sibling),S=c(S,N),S.return=I,I=S):(o(I,S),S=ja(N,I.mode,Y),S.return=I,I=S),g(I)):o(I,S)}return Ye}var Rr=zd(!0),qd=zd(!1),Po=Sn(null),Uo=null,Ir=null,Hl=null;function Xl(){Hl=Ir=Uo=null}function _l(e){var t=Po.current;ze(Po),e._currentValue=t}function $l(e,t,o){for(;e!==null;){var a=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,a!==null&&(a.childLanes|=t)):a!==null&&(a.childLanes&t)!==t&&(a.childLanes|=t),e===o)break;e=e.return}}function Nr(e,t){Uo=e,Hl=Ir=null,e=e.dependencies,e!==null&&e.firstContext!==null&&((e.lanes&t)!==0&&(wt=!0),e.firstContext=null)}function Pt(e){var t=e._currentValue;if(Hl!==e)if(e={context:e,memoizedValue:t,next:null},Ir===null){if(Uo===null)throw Error(r(308));Ir=e,Uo.dependencies={lanes:0,firstContext:e}}else Ir=Ir.next=e;return t}var Jn=null;function ea(e){Jn===null?Jn=[e]:Jn.push(e)}function jd(e,t,o,a){var c=t.interleaved;return c===null?(o.next=o,ea(t)):(o.next=c.next,c.next=o),t.interleaved=o,fn(e,a)}function fn(e,t){e.lanes|=t;var o=e.alternate;for(o!==null&&(o.lanes|=t),o=e,e=e.return;e!==null;)e.childLanes|=t,o=e.alternate,o!==null&&(o.childLanes|=t),o=e,e=e.return;return o.tag===3?o.stateNode:null}var Rn=!1;function ta(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Bd(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function pn(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function In(e,t,o){var a=e.updateQueue;if(a===null)return null;if(a=a.shared,(Ne&2)!==0){var c=a.pending;return c===null?t.next=t:(t.next=c.next,c.next=t),a.pending=t,fn(e,o)}return c=a.interleaved,c===null?(t.next=t,ea(a)):(t.next=c.next,c.next=t),a.interleaved=t,fn(e,o)}function zo(e,t,o){if(t=t.updateQueue,t!==null&&(t=t.shared,(o&4194240)!==0)){var a=t.lanes;a&=e.pendingLanes,o|=a,t.lanes=o,ml(e,o)}}function Wd(e,t){var o=e.updateQueue,a=e.alternate;if(a!==null&&(a=a.updateQueue,o===a)){var c=null,f=null;if(o=o.firstBaseUpdate,o!==null){do{var g={eventTime:o.eventTime,lane:o.lane,tag:o.tag,payload:o.payload,callback:o.callback,next:null};f===null?c=f=g:f=f.next=g,o=o.next}while(o!==null);f===null?c=f=t:f=f.next=t}else c=f=t;o={baseState:a.baseState,firstBaseUpdate:c,lastBaseUpdate:f,shared:a.shared,effects:a.effects},e.updateQueue=o;return}e=o.lastBaseUpdate,e===null?o.firstBaseUpdate=t:e.next=t,o.lastBaseUpdate=t}function qo(e,t,o,a){var c=e.updateQueue;Rn=!1;var f=c.firstBaseUpdate,g=c.lastBaseUpdate,w=c.shared.pending;if(w!==null){c.shared.pending=null;var E=w,L=E.next;E.next=null,g===null?f=L:g.next=L,g=E;var W=e.alternate;W!==null&&(W=W.updateQueue,w=W.lastBaseUpdate,w!==g&&(w===null?W.firstBaseUpdate=L:w.next=L,W.lastBaseUpdate=E))}if(f!==null){var K=c.baseState;g=0,W=L=E=null,w=f;do{var j=w.lane,re=w.eventTime;if((a&j)===j){W!==null&&(W=W.next={eventTime:re,lane:0,tag:w.tag,payload:w.payload,callback:w.callback,next:null});e:{var se=e,ue=w;switch(j=t,re=o,ue.tag){case 1:if(se=ue.payload,typeof se=="function"){K=se.call(re,K,j);break e}K=se;break e;case 3:se.flags=se.flags&-65537|128;case 0:if(se=ue.payload,j=typeof se=="function"?se.call(re,K,j):se,j==null)break e;K=Z({},K,j);break e;case 2:Rn=!0}}w.callback!==null&&w.lane!==0&&(e.flags|=64,j=c.effects,j===null?c.effects=[w]:j.push(w))}else re={eventTime:re,lane:j,tag:w.tag,payload:w.payload,callback:w.callback,next:null},W===null?(L=W=re,E=K):W=W.next=re,g|=j;if(w=w.next,w===null){if(w=c.shared.pending,w===null)break;j=w,w=j.next,j.next=null,c.lastBaseUpdate=j,c.shared.pending=null}}while(!0);if(W===null&&(E=K),c.baseState=E,c.firstBaseUpdate=L,c.lastBaseUpdate=W,t=c.shared.interleaved,t!==null){c=t;do g|=c.lane,c=c.next;while(c!==t)}else f===null&&(c.shared.lanes=0);_n|=g,e.lanes=g,e.memoizedState=K}}function Dd(e,t,o){if(e=t.effects,t.effects=null,e!==null)for(t=0;t<e.length;t++){var a=e[t],c=a.callback;if(c!==null){if(a.callback=null,a=o,typeof c!="function")throw Error(r(191,c));c.call(a)}}}var wi={},$t=Sn(wi),Ci=Sn(wi),Ei=Sn(wi);function Hn(e){if(e===wi)throw Error(r(174));return e}function na(e,t){switch(Pe(Ei,t),Pe(Ci,e),Pe($t,wi),e=t.nodeType,e){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:rl(null,"");break;default:e=e===8?t.parentNode:t,t=e.namespaceURI||null,e=e.tagName,t=rl(t,e)}ze($t),Pe($t,t)}function Mr(){ze($t),ze(Ci),ze(Ei)}function Kd(e){Hn(Ei.current);var t=Hn($t.current),o=rl(t,e.type);t!==o&&(Pe(Ci,e),Pe($t,o))}function ra(e){Ci.current===e&&(ze($t),ze(Ci))}var We=Sn(0);function jo(e){for(var t=e;t!==null;){if(t.tag===13){var o=t.memoizedState;if(o!==null&&(o=o.dehydrated,o===null||o.data==="$?"||o.data==="$!"))return t}else if(t.tag===19&&t.memoizedProps.revealOrder!==void 0){if((t.flags&128)!==0)return t}else if(t.child!==null){t.child.return=t,t=t.child;continue}if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var ia=[];function oa(){for(var e=0;e<ia.length;e++)ia[e]._workInProgressVersionPrimary=null;ia.length=0}var Bo=B.ReactCurrentDispatcher,sa=B.ReactCurrentBatchConfig,Xn=0,De=null,Xe=null,et=null,Wo=!1,xi=!1,Si=0,z1=0;function ct(){throw Error(r(321))}function la(e,t){if(t===null)return!1;for(var o=0;o<t.length&&o<e.length;o++)if(!Wt(e[o],t[o]))return!1;return!0}function aa(e,t,o,a,c,f){if(Xn=f,De=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Bo.current=e===null||e.memoizedState===null?W1:D1,e=o(a,c),xi){f=0;do{if(xi=!1,Si=0,25<=f)throw Error(r(301));f+=1,et=Xe=null,t.updateQueue=null,Bo.current=K1,e=o(a,c)}while(xi)}if(Bo.current=Qo,t=Xe!==null&&Xe.next!==null,Xn=0,et=Xe=De=null,Wo=!1,t)throw Error(r(300));return e}function ua(){var e=Si!==0;return Si=0,e}function en(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return et===null?De.memoizedState=et=e:et=et.next=e,et}function Ut(){if(Xe===null){var e=De.alternate;e=e!==null?e.memoizedState:null}else e=Xe.next;var t=et===null?De.memoizedState:et.next;if(t!==null)et=t,Xe=e;else{if(e===null)throw Error(r(310));Xe=e,e={memoizedState:Xe.memoizedState,baseState:Xe.baseState,baseQueue:Xe.baseQueue,queue:Xe.queue,next:null},et===null?De.memoizedState=et=e:et=et.next=e}return et}function bi(e,t){return typeof t=="function"?t(e):t}function ca(e){var t=Ut(),o=t.queue;if(o===null)throw Error(r(311));o.lastRenderedReducer=e;var a=Xe,c=a.baseQueue,f=o.pending;if(f!==null){if(c!==null){var g=c.next;c.next=f.next,f.next=g}a.baseQueue=c=f,o.pending=null}if(c!==null){f=c.next,a=a.baseState;var w=g=null,E=null,L=f;do{var W=L.lane;if((Xn&W)===W)E!==null&&(E=E.next={lane:0,action:L.action,hasEagerState:L.hasEagerState,eagerState:L.eagerState,next:null}),a=L.hasEagerState?L.eagerState:e(a,L.action);else{var K={lane:W,action:L.action,hasEagerState:L.hasEagerState,eagerState:L.eagerState,next:null};E===null?(w=E=K,g=a):E=E.next=K,De.lanes|=W,_n|=W}L=L.next}while(L!==null&&L!==f);E===null?g=a:E.next=w,Wt(a,t.memoizedState)||(wt=!0),t.memoizedState=a,t.baseState=g,t.baseQueue=E,o.lastRenderedState=a}if(e=o.interleaved,e!==null){c=e;do f=c.lane,De.lanes|=f,_n|=f,c=c.next;while(c!==e)}else c===null&&(o.lanes=0);return[t.memoizedState,o.dispatch]}function da(e){var t=Ut(),o=t.queue;if(o===null)throw Error(r(311));o.lastRenderedReducer=e;var a=o.dispatch,c=o.pending,f=t.memoizedState;if(c!==null){o.pending=null;var g=c=c.next;do f=e(f,g.action),g=g.next;while(g!==c);Wt(f,t.memoizedState)||(wt=!0),t.memoizedState=f,t.baseQueue===null&&(t.baseState=f),o.lastRenderedState=f}return[f,a]}function Qd(){}function Yd(e,t){var o=De,a=Ut(),c=t(),f=!Wt(a.memoizedState,c);if(f&&(a.memoizedState=c,wt=!0),a=a.queue,fa(Jd.bind(null,o,a,e),[e]),a.getSnapshot!==t||f||et!==null&&et.memoizedState.tag&1){if(o.flags|=2048,ki(9,Zd.bind(null,o,a,c,t),void 0,null),tt===null)throw Error(r(349));(Xn&30)!==0||Gd(o,t,c)}return c}function Gd(e,t,o){e.flags|=16384,e={getSnapshot:t,value:o},t=De.updateQueue,t===null?(t={lastEffect:null,stores:null},De.updateQueue=t,t.stores=[e]):(o=t.stores,o===null?t.stores=[e]:o.push(e))}function Zd(e,t,o,a){t.value=o,t.getSnapshot=a,Hd(t)&&Xd(e)}function Jd(e,t,o){return o(function(){Hd(t)&&Xd(e)})}function Hd(e){var t=e.getSnapshot;e=e.value;try{var o=t();return!Wt(e,o)}catch{return!0}}function Xd(e){var t=fn(e,1);t!==null&&Gt(t,e,1,-1)}function _d(e){var t=en();return typeof e=="function"&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:bi,lastRenderedState:e},t.queue=e,e=e.dispatch=B1.bind(null,De,e),[t.memoizedState,e]}function ki(e,t,o,a){return e={tag:e,create:t,destroy:o,deps:a,next:null},t=De.updateQueue,t===null?(t={lastEffect:null,stores:null},De.updateQueue=t,t.lastEffect=e.next=e):(o=t.lastEffect,o===null?t.lastEffect=e.next=e:(a=o.next,o.next=e,e.next=a,t.lastEffect=e)),e}function $d(){return Ut().memoizedState}function Do(e,t,o,a){var c=en();De.flags|=e,c.memoizedState=ki(1|t,o,void 0,a===void 0?null:a)}function Ko(e,t,o,a){var c=Ut();a=a===void 0?null:a;var f=void 0;if(Xe!==null){var g=Xe.memoizedState;if(f=g.destroy,a!==null&&la(a,g.deps)){c.memoizedState=ki(t,o,f,a);return}}De.flags|=e,c.memoizedState=ki(1|t,o,f,a)}function ef(e,t){return Do(8390656,8,e,t)}function fa(e,t){return Ko(2048,8,e,t)}function tf(e,t){return Ko(4,2,e,t)}function nf(e,t){return Ko(4,4,e,t)}function rf(e,t){if(typeof t=="function")return e=e(),t(e),function(){t(null)};if(t!=null)return e=e(),t.current=e,function(){t.current=null}}function of(e,t,o){return o=o!=null?o.concat([e]):null,Ko(4,4,rf.bind(null,t,e),o)}function pa(){}function sf(e,t){var o=Ut();t=t===void 0?null:t;var a=o.memoizedState;return a!==null&&t!==null&&la(t,a[1])?a[0]:(o.memoizedState=[e,t],e)}function lf(e,t){var o=Ut();t=t===void 0?null:t;var a=o.memoizedState;return a!==null&&t!==null&&la(t,a[1])?a[0]:(e=e(),o.memoizedState=[e,t],e)}function af(e,t,o){return(Xn&21)===0?(e.baseState&&(e.baseState=!1,wt=!0),e.memoizedState=o):(Wt(o,t)||(o=Uc(),De.lanes|=o,_n|=o,e.baseState=!0),t)}function q1(e,t){var o=Fe;Fe=o!==0&&4>o?o:4,e(!0);var a=sa.transition;sa.transition={};try{e(!1),t()}finally{Fe=o,sa.transition=a}}function uf(){return Ut().memoizedState}function j1(e,t,o){var a=Tn(e);if(o={lane:a,action:o,hasEagerState:!1,eagerState:null,next:null},cf(e))df(t,o);else if(o=jd(e,t,o,a),o!==null){var c=gt();Gt(o,e,a,c),ff(o,t,a)}}function B1(e,t,o){var a=Tn(e),c={lane:a,action:o,hasEagerState:!1,eagerState:null,next:null};if(cf(e))df(t,c);else{var f=e.alternate;if(e.lanes===0&&(f===null||f.lanes===0)&&(f=t.lastRenderedReducer,f!==null))try{var g=t.lastRenderedState,w=f(g,o);if(c.hasEagerState=!0,c.eagerState=w,Wt(w,g)){var E=t.interleaved;E===null?(c.next=c,ea(t)):(c.next=E.next,E.next=c),t.interleaved=c;return}}catch{}finally{}o=jd(e,t,c,a),o!==null&&(c=gt(),Gt(o,e,a,c),ff(o,t,a))}}function cf(e){var t=e.alternate;return e===De||t!==null&&t===De}function df(e,t){xi=Wo=!0;var o=e.pending;o===null?t.next=t:(t.next=o.next,o.next=t),e.pending=t}function ff(e,t,o){if((o&4194240)!==0){var a=t.lanes;a&=e.pendingLanes,o|=a,t.lanes=o,ml(e,o)}}var Qo={readContext:Pt,useCallback:ct,useContext:ct,useEffect:ct,useImperativeHandle:ct,useInsertionEffect:ct,useLayoutEffect:ct,useMemo:ct,useReducer:ct,useRef:ct,useState:ct,useDebugValue:ct,useDeferredValue:ct,useTransition:ct,useMutableSource:ct,useSyncExternalStore:ct,useId:ct,unstable_isNewReconciler:!1},W1={readContext:Pt,useCallback:function(e,t){return en().memoizedState=[e,t===void 0?null:t],e},useContext:Pt,useEffect:ef,useImperativeHandle:function(e,t,o){return o=o!=null?o.concat([e]):null,Do(4194308,4,rf.bind(null,t,e),o)},useLayoutEffect:function(e,t){return Do(4194308,4,e,t)},useInsertionEffect:function(e,t){return Do(4,2,e,t)},useMemo:function(e,t){var o=en();return t=t===void 0?null:t,e=e(),o.memoizedState=[e,t],e},useReducer:function(e,t,o){var a=en();return t=o!==void 0?o(t):t,a.memoizedState=a.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},a.queue=e,e=e.dispatch=j1.bind(null,De,e),[a.memoizedState,e]},useRef:function(e){var t=en();return e={current:e},t.memoizedState=e},useState:_d,useDebugValue:pa,useDeferredValue:function(e){return en().memoizedState=e},useTransition:function(){var e=_d(!1),t=e[0];return e=q1.bind(null,e[1]),en().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,o){var a=De,c=en();if(je){if(o===void 0)throw Error(r(407));o=o()}else{if(o=t(),tt===null)throw Error(r(349));(Xn&30)!==0||Gd(a,t,o)}c.memoizedState=o;var f={value:o,getSnapshot:t};return c.queue=f,ef(Jd.bind(null,a,f,e),[e]),a.flags|=2048,ki(9,Zd.bind(null,a,f,o,t),void 0,null),o},useId:function(){var e=en(),t=tt.identifierPrefix;if(je){var o=dn,a=cn;o=(a&~(1<<32-Bt(a)-1)).toString(32)+o,t=":"+t+"R"+o,o=Si++,0<o&&(t+="H"+o.toString(32)),t+=":"}else o=z1++,t=":"+t+"r"+o.toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},D1={readContext:Pt,useCallback:sf,useContext:Pt,useEffect:fa,useImperativeHandle:of,useInsertionEffect:tf,useLayoutEffect:nf,useMemo:lf,useReducer:ca,useRef:$d,useState:function(){return ca(bi)},useDebugValue:pa,useDeferredValue:function(e){var t=Ut();return af(t,Xe.memoizedState,e)},useTransition:function(){var e=ca(bi)[0],t=Ut().memoizedState;return[e,t]},useMutableSource:Qd,useSyncExternalStore:Yd,useId:uf,unstable_isNewReconciler:!1},K1={readContext:Pt,useCallback:sf,useContext:Pt,useEffect:fa,useImperativeHandle:of,useInsertionEffect:tf,useLayoutEffect:nf,useMemo:lf,useReducer:da,useRef:$d,useState:function(){return da(bi)},useDebugValue:pa,useDeferredValue:function(e){var t=Ut();return Xe===null?t.memoizedState=e:af(t,Xe.memoizedState,e)},useTransition:function(){var e=da(bi)[0],t=Ut().memoizedState;return[e,t]},useMutableSource:Qd,useSyncExternalStore:Yd,useId:uf,unstable_isNewReconciler:!1};function Kt(e,t){if(e&&e.defaultProps){t=Z({},t),e=e.defaultProps;for(var o in e)t[o]===void 0&&(t[o]=e[o]);return t}return t}function ha(e,t,o,a){t=e.memoizedState,o=o(a,t),o=o==null?t:Z({},t,o),e.memoizedState=o,e.lanes===0&&(e.updateQueue.baseState=o)}var Yo={isMounted:function(e){return(e=e._reactInternals)?Kn(e)===e:!1},enqueueSetState:function(e,t,o){e=e._reactInternals;var a=gt(),c=Tn(e),f=pn(a,c);f.payload=t,o!=null&&(f.callback=o),t=In(e,f,c),t!==null&&(Gt(t,e,c,a),zo(t,e,c))},enqueueReplaceState:function(e,t,o){e=e._reactInternals;var a=gt(),c=Tn(e),f=pn(a,c);f.tag=1,f.payload=t,o!=null&&(f.callback=o),t=In(e,f,c),t!==null&&(Gt(t,e,c,a),zo(t,e,c))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var o=gt(),a=Tn(e),c=pn(o,a);c.tag=2,t!=null&&(c.callback=t),t=In(e,c,a),t!==null&&(Gt(t,e,a,o),zo(t,e,a))}};function pf(e,t,o,a,c,f,g){return e=e.stateNode,typeof e.shouldComponentUpdate=="function"?e.shouldComponentUpdate(a,f,g):t.prototype&&t.prototype.isPureReactComponent?!fi(o,a)||!fi(c,f):!0}function hf(e,t,o){var a=!1,c=bn,f=t.contextType;return typeof f=="object"&&f!==null?f=Pt(f):(c=At(t)?Yn:ut.current,a=t.contextTypes,f=(a=a!=null)?xr(e,c):bn),t=new t(o,f),e.memoizedState=t.state!==null&&t.state!==void 0?t.state:null,t.updater=Yo,e.stateNode=t,t._reactInternals=e,a&&(e=e.stateNode,e.__reactInternalMemoizedUnmaskedChildContext=c,e.__reactInternalMemoizedMaskedChildContext=f),t}function mf(e,t,o,a){e=t.state,typeof t.componentWillReceiveProps=="function"&&t.componentWillReceiveProps(o,a),typeof t.UNSAFE_componentWillReceiveProps=="function"&&t.UNSAFE_componentWillReceiveProps(o,a),t.state!==e&&Yo.enqueueReplaceState(t,t.state,null)}function ma(e,t,o,a){var c=e.stateNode;c.props=o,c.state=e.memoizedState,c.refs={},ta(e);var f=t.contextType;typeof f=="object"&&f!==null?c.context=Pt(f):(f=At(t)?Yn:ut.current,c.context=xr(e,f)),c.state=e.memoizedState,f=t.getDerivedStateFromProps,typeof f=="function"&&(ha(e,t,f,o),c.state=e.memoizedState),typeof t.getDerivedStateFromProps=="function"||typeof c.getSnapshotBeforeUpdate=="function"||typeof c.UNSAFE_componentWillMount!="function"&&typeof c.componentWillMount!="function"||(t=c.state,typeof c.componentWillMount=="function"&&c.componentWillMount(),typeof c.UNSAFE_componentWillMount=="function"&&c.UNSAFE_componentWillMount(),t!==c.state&&Yo.enqueueReplaceState(c,c.state,null),qo(e,o,c,a),c.state=e.memoizedState),typeof c.componentDidMount=="function"&&(e.flags|=4194308)}function Lr(e,t){try{var o="",a=t;do o+=Ae(a),a=a.return;while(a);var c=o}catch(f){c=`
Error generating stack: `+f.message+`
`+f.stack}return{value:e,source:t,stack:c,digest:null}}function ga(e,t,o){return{value:e,source:null,stack:o??null,digest:t??null}}function ya(e,t){try{console.error(t.value)}catch(o){setTimeout(function(){throw o})}}var Q1=typeof WeakMap=="function"?WeakMap:Map;function gf(e,t,o){o=pn(-1,o),o.tag=3,o.payload={element:null};var a=t.value;return o.callback=function(){$o||($o=!0,Ta=a),ya(e,t)},o}function yf(e,t,o){o=pn(-1,o),o.tag=3;var a=e.type.getDerivedStateFromError;if(typeof a=="function"){var c=t.value;o.payload=function(){return a(c)},o.callback=function(){ya(e,t)}}var f=e.stateNode;return f!==null&&typeof f.componentDidCatch=="function"&&(o.callback=function(){ya(e,t),typeof a!="function"&&(Mn===null?Mn=new Set([this]):Mn.add(this));var g=t.stack;this.componentDidCatch(t.value,{componentStack:g!==null?g:""})}),o}function vf(e,t,o){var a=e.pingCache;if(a===null){a=e.pingCache=new Q1;var c=new Set;a.set(t,c)}else c=a.get(t),c===void 0&&(c=new Set,a.set(t,c));c.has(o)||(c.add(o),e=o0.bind(null,e,t,o),t.then(e,e))}function Af(e){do{var t;if((t=e.tag===13)&&(t=e.memoizedState,t=t!==null?t.dehydrated!==null:!0),t)return e;e=e.return}while(e!==null);return null}function wf(e,t,o,a,c){return(e.mode&1)===0?(e===t?e.flags|=65536:(e.flags|=128,o.flags|=131072,o.flags&=-52805,o.tag===1&&(o.alternate===null?o.tag=17:(t=pn(-1,1),t.tag=2,In(o,t,1))),o.lanes|=1),e):(e.flags|=65536,e.lanes=c,e)}var Y1=B.ReactCurrentOwner,wt=!1;function mt(e,t,o,a){t.child=e===null?qd(t,null,o,a):Rr(t,e.child,o,a)}function Cf(e,t,o,a,c){o=o.render;var f=t.ref;return Nr(t,c),a=aa(e,t,o,a,f,c),o=ua(),e!==null&&!wt?(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~c,hn(e,t,c)):(je&&o&&Ql(t),t.flags|=1,mt(e,t,a,c),t.child)}function Ef(e,t,o,a,c){if(e===null){var f=o.type;return typeof f=="function"&&!qa(f)&&f.defaultProps===void 0&&o.compare===null&&o.defaultProps===void 0?(t.tag=15,t.type=f,xf(e,t,f,a,c)):(e=os(o.type,null,a,t,t.mode,c),e.ref=t.ref,e.return=t,t.child=e)}if(f=e.child,(e.lanes&c)===0){var g=f.memoizedProps;if(o=o.compare,o=o!==null?o:fi,o(g,a)&&e.ref===t.ref)return hn(e,t,c)}return t.flags|=1,e=Fn(f,a),e.ref=t.ref,e.return=t,t.child=e}function xf(e,t,o,a,c){if(e!==null){var f=e.memoizedProps;if(fi(f,a)&&e.ref===t.ref)if(wt=!1,t.pendingProps=a=f,(e.lanes&c)!==0)(e.flags&131072)!==0&&(wt=!0);else return t.lanes=e.lanes,hn(e,t,c)}return va(e,t,o,a,c)}function Sf(e,t,o){var a=t.pendingProps,c=a.children,f=e!==null?e.memoizedState:null;if(a.mode==="hidden")if((t.mode&1)===0)t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Pe(Vr,Nt),Nt|=o;else{if((o&1073741824)===0)return e=f!==null?f.baseLanes|o:o,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Pe(Vr,Nt),Nt|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},a=f!==null?f.baseLanes:o,Pe(Vr,Nt),Nt|=a}else f!==null?(a=f.baseLanes|o,t.memoizedState=null):a=o,Pe(Vr,Nt),Nt|=a;return mt(e,t,c,o),t.child}function bf(e,t){var o=t.ref;(e===null&&o!==null||e!==null&&e.ref!==o)&&(t.flags|=512,t.flags|=2097152)}function va(e,t,o,a,c){var f=At(o)?Yn:ut.current;return f=xr(t,f),Nr(t,c),o=aa(e,t,o,a,f,c),a=ua(),e!==null&&!wt?(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~c,hn(e,t,c)):(je&&a&&Ql(t),t.flags|=1,mt(e,t,o,c),t.child)}function kf(e,t,o,a,c){if(At(o)){var f=!0;Mo(t)}else f=!1;if(Nr(t,c),t.stateNode===null)Zo(e,t),hf(t,o,a),ma(t,o,a,c),a=!0;else if(e===null){var g=t.stateNode,w=t.memoizedProps;g.props=w;var E=g.context,L=o.contextType;typeof L=="object"&&L!==null?L=Pt(L):(L=At(o)?Yn:ut.current,L=xr(t,L));var W=o.getDerivedStateFromProps,K=typeof W=="function"||typeof g.getSnapshotBeforeUpdate=="function";K||typeof g.UNSAFE_componentWillReceiveProps!="function"&&typeof g.componentWillReceiveProps!="function"||(w!==a||E!==L)&&mf(t,g,a,L),Rn=!1;var j=t.memoizedState;g.state=j,qo(t,a,g,c),E=t.memoizedState,w!==a||j!==E||vt.current||Rn?(typeof W=="function"&&(ha(t,o,W,a),E=t.memoizedState),(w=Rn||pf(t,o,w,a,j,E,L))?(K||typeof g.UNSAFE_componentWillMount!="function"&&typeof g.componentWillMount!="function"||(typeof g.componentWillMount=="function"&&g.componentWillMount(),typeof g.UNSAFE_componentWillMount=="function"&&g.UNSAFE_componentWillMount()),typeof g.componentDidMount=="function"&&(t.flags|=4194308)):(typeof g.componentDidMount=="function"&&(t.flags|=4194308),t.memoizedProps=a,t.memoizedState=E),g.props=a,g.state=E,g.context=L,a=w):(typeof g.componentDidMount=="function"&&(t.flags|=4194308),a=!1)}else{g=t.stateNode,Bd(e,t),w=t.memoizedProps,L=t.type===t.elementType?w:Kt(t.type,w),g.props=L,K=t.pendingProps,j=g.context,E=o.contextType,typeof E=="object"&&E!==null?E=Pt(E):(E=At(o)?Yn:ut.current,E=xr(t,E));var re=o.getDerivedStateFromProps;(W=typeof re=="function"||typeof g.getSnapshotBeforeUpdate=="function")||typeof g.UNSAFE_componentWillReceiveProps!="function"&&typeof g.componentWillReceiveProps!="function"||(w!==K||j!==E)&&mf(t,g,a,E),Rn=!1,j=t.memoizedState,g.state=j,qo(t,a,g,c);var se=t.memoizedState;w!==K||j!==se||vt.current||Rn?(typeof re=="function"&&(ha(t,o,re,a),se=t.memoizedState),(L=Rn||pf(t,o,L,a,j,se,E)||!1)?(W||typeof g.UNSAFE_componentWillUpdate!="function"&&typeof g.componentWillUpdate!="function"||(typeof g.componentWillUpdate=="function"&&g.componentWillUpdate(a,se,E),typeof g.UNSAFE_componentWillUpdate=="function"&&g.UNSAFE_componentWillUpdate(a,se,E)),typeof g.componentDidUpdate=="function"&&(t.flags|=4),typeof g.getSnapshotBeforeUpdate=="function"&&(t.flags|=1024)):(typeof g.componentDidUpdate!="function"||w===e.memoizedProps&&j===e.memoizedState||(t.flags|=4),typeof g.getSnapshotBeforeUpdate!="function"||w===e.memoizedProps&&j===e.memoizedState||(t.flags|=1024),t.memoizedProps=a,t.memoizedState=se),g.props=a,g.state=se,g.context=E,a=L):(typeof g.componentDidUpdate!="function"||w===e.memoizedProps&&j===e.memoizedState||(t.flags|=4),typeof g.getSnapshotBeforeUpdate!="function"||w===e.memoizedProps&&j===e.memoizedState||(t.flags|=1024),a=!1)}return Aa(e,t,o,a,f,c)}function Aa(e,t,o,a,c,f){bf(e,t);var g=(t.flags&128)!==0;if(!a&&!g)return c&&Md(t,o,!1),hn(e,t,f);a=t.stateNode,Y1.current=t;var w=g&&typeof o.getDerivedStateFromError!="function"?null:a.render();return t.flags|=1,e!==null&&g?(t.child=Rr(t,e.child,null,f),t.child=Rr(t,null,w,f)):mt(e,t,w,f),t.memoizedState=a.state,c&&Md(t,o,!0),t.child}function Rf(e){var t=e.stateNode;t.pendingContext?Id(e,t.pendingContext,t.pendingContext!==t.context):t.context&&Id(e,t.context,!1),na(e,t.containerInfo)}function If(e,t,o,a,c){return kr(),Jl(c),t.flags|=256,mt(e,t,o,a),t.child}var wa={dehydrated:null,treeContext:null,retryLane:0};function Ca(e){return{baseLanes:e,cachePool:null,transitions:null}}function Nf(e,t,o){var a=t.pendingProps,c=We.current,f=!1,g=(t.flags&128)!==0,w;if((w=g)||(w=e!==null&&e.memoizedState===null?!1:(c&2)!==0),w?(f=!0,t.flags&=-129):(e===null||e.memoizedState!==null)&&(c|=1),Pe(We,c&1),e===null)return Zl(t),e=t.memoizedState,e!==null&&(e=e.dehydrated,e!==null)?((t.mode&1)===0?t.lanes=1:e.data==="$!"?t.lanes=8:t.lanes=1073741824,null):(g=a.children,e=a.fallback,f?(a=t.mode,f=t.child,g={mode:"hidden",children:g},(a&1)===0&&f!==null?(f.childLanes=0,f.pendingProps=g):f=ss(g,a,0,null),e=nr(e,a,o,null),f.return=t,e.return=t,f.sibling=e,t.child=f,t.child.memoizedState=Ca(o),t.memoizedState=wa,e):Ea(t,g));if(c=e.memoizedState,c!==null&&(w=c.dehydrated,w!==null))return G1(e,t,g,a,w,c,o);if(f){f=a.fallback,g=t.mode,c=e.child,w=c.sibling;var E={mode:"hidden",children:a.children};return(g&1)===0&&t.child!==c?(a=t.child,a.childLanes=0,a.pendingProps=E,t.deletions=null):(a=Fn(c,E),a.subtreeFlags=c.subtreeFlags&14680064),w!==null?f=Fn(w,f):(f=nr(f,g,o,null),f.flags|=2),f.return=t,a.return=t,a.sibling=f,t.child=a,a=f,f=t.child,g=e.child.memoizedState,g=g===null?Ca(o):{baseLanes:g.baseLanes|o,cachePool:null,transitions:g.transitions},f.memoizedState=g,f.childLanes=e.childLanes&~o,t.memoizedState=wa,a}return f=e.child,e=f.sibling,a=Fn(f,{mode:"visible",children:a.children}),(t.mode&1)===0&&(a.lanes=o),a.return=t,a.sibling=null,e!==null&&(o=t.deletions,o===null?(t.deletions=[e],t.flags|=16):o.push(e)),t.child=a,t.memoizedState=null,a}function Ea(e,t){return t=ss({mode:"visible",children:t},e.mode,0,null),t.return=e,e.child=t}function Go(e,t,o,a){return a!==null&&Jl(a),Rr(t,e.child,null,o),e=Ea(t,t.pendingProps.children),e.flags|=2,t.memoizedState=null,e}function G1(e,t,o,a,c,f,g){if(o)return t.flags&256?(t.flags&=-257,a=ga(Error(r(422))),Go(e,t,g,a)):t.memoizedState!==null?(t.child=e.child,t.flags|=128,null):(f=a.fallback,c=t.mode,a=ss({mode:"visible",children:a.children},c,0,null),f=nr(f,c,g,null),f.flags|=2,a.return=t,f.return=t,a.sibling=f,t.child=a,(t.mode&1)!==0&&Rr(t,e.child,null,g),t.child.memoizedState=Ca(g),t.memoizedState=wa,f);if((t.mode&1)===0)return Go(e,t,g,null);if(c.data==="$!"){if(a=c.nextSibling&&c.nextSibling.dataset,a)var w=a.dgst;return a=w,f=Error(r(419)),a=ga(f,a,void 0),Go(e,t,g,a)}if(w=(g&e.childLanes)!==0,wt||w){if(a=tt,a!==null){switch(g&-g){case 4:c=2;break;case 16:c=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:c=32;break;case 536870912:c=268435456;break;default:c=0}c=(c&(a.suspendedLanes|g))!==0?0:c,c!==0&&c!==f.retryLane&&(f.retryLane=c,fn(e,c),Gt(a,e,c,-1))}return za(),a=ga(Error(r(421))),Go(e,t,g,a)}return c.data==="$?"?(t.flags|=128,t.child=e.child,t=s0.bind(null,e),c._reactRetry=t,null):(e=f.treeContext,It=xn(c.nextSibling),Rt=t,je=!0,Dt=null,e!==null&&(Ft[Ot++]=cn,Ft[Ot++]=dn,Ft[Ot++]=Gn,cn=e.id,dn=e.overflow,Gn=t),t=Ea(t,a.children),t.flags|=4096,t)}function Mf(e,t,o){e.lanes|=t;var a=e.alternate;a!==null&&(a.lanes|=t),$l(e.return,t,o)}function xa(e,t,o,a,c){var f=e.memoizedState;f===null?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:a,tail:o,tailMode:c}:(f.isBackwards=t,f.rendering=null,f.renderingStartTime=0,f.last=a,f.tail=o,f.tailMode=c)}function Lf(e,t,o){var a=t.pendingProps,c=a.revealOrder,f=a.tail;if(mt(e,t,a.children,o),a=We.current,(a&2)!==0)a=a&1|2,t.flags|=128;else{if(e!==null&&(e.flags&128)!==0)e:for(e=t.child;e!==null;){if(e.tag===13)e.memoizedState!==null&&Mf(e,o,t);else if(e.tag===19)Mf(e,o,t);else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;e.sibling===null;){if(e.return===null||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}a&=1}if(Pe(We,a),(t.mode&1)===0)t.memoizedState=null;else switch(c){case"forwards":for(o=t.child,c=null;o!==null;)e=o.alternate,e!==null&&jo(e)===null&&(c=o),o=o.sibling;o=c,o===null?(c=t.child,t.child=null):(c=o.sibling,o.sibling=null),xa(t,!1,c,o,f);break;case"backwards":for(o=null,c=t.child,t.child=null;c!==null;){if(e=c.alternate,e!==null&&jo(e)===null){t.child=c;break}e=c.sibling,c.sibling=o,o=c,c=e}xa(t,!0,o,null,f);break;case"together":xa(t,!1,null,null,void 0);break;default:t.memoizedState=null}return t.child}function Zo(e,t){(t.mode&1)===0&&e!==null&&(e.alternate=null,t.alternate=null,t.flags|=2)}function hn(e,t,o){if(e!==null&&(t.dependencies=e.dependencies),_n|=t.lanes,(o&t.childLanes)===0)return null;if(e!==null&&t.child!==e.child)throw Error(r(153));if(t.child!==null){for(e=t.child,o=Fn(e,e.pendingProps),t.child=o,o.return=t;e.sibling!==null;)e=e.sibling,o=o.sibling=Fn(e,e.pendingProps),o.return=t;o.sibling=null}return t.child}function Z1(e,t,o){switch(t.tag){case 3:Rf(t),kr();break;case 5:Kd(t);break;case 1:At(t.type)&&Mo(t);break;case 4:na(t,t.stateNode.containerInfo);break;case 10:var a=t.type._context,c=t.memoizedProps.value;Pe(Po,a._currentValue),a._currentValue=c;break;case 13:if(a=t.memoizedState,a!==null)return a.dehydrated!==null?(Pe(We,We.current&1),t.flags|=128,null):(o&t.child.childLanes)!==0?Nf(e,t,o):(Pe(We,We.current&1),e=hn(e,t,o),e!==null?e.sibling:null);Pe(We,We.current&1);break;case 19:if(a=(o&t.childLanes)!==0,(e.flags&128)!==0){if(a)return Lf(e,t,o);t.flags|=128}if(c=t.memoizedState,c!==null&&(c.rendering=null,c.tail=null,c.lastEffect=null),Pe(We,We.current),a)break;return null;case 22:case 23:return t.lanes=0,Sf(e,t,o)}return hn(e,t,o)}var Tf,Sa,Vf,Ff;Tf=function(e,t){for(var o=t.child;o!==null;){if(o.tag===5||o.tag===6)e.appendChild(o.stateNode);else if(o.tag!==4&&o.child!==null){o.child.return=o,o=o.child;continue}if(o===t)break;for(;o.sibling===null;){if(o.return===null||o.return===t)return;o=o.return}o.sibling.return=o.return,o=o.sibling}},Sa=function(){},Vf=function(e,t,o,a){var c=e.memoizedProps;if(c!==a){e=t.stateNode,Hn($t.current);var f=null;switch(o){case"input":c=$s(e,c),a=$s(e,a),f=[];break;case"select":c=Z({},c,{value:void 0}),a=Z({},a,{value:void 0}),f=[];break;case"textarea":c=nl(e,c),a=nl(e,a),f=[];break;default:typeof c.onClick!="function"&&typeof a.onClick=="function"&&(e.onclick=Ro)}il(o,a);var g;o=null;for(L in c)if(!a.hasOwnProperty(L)&&c.hasOwnProperty(L)&&c[L]!=null)if(L==="style"){var w=c[L];for(g in w)w.hasOwnProperty(g)&&(o||(o={}),o[g]="")}else L!=="dangerouslySetInnerHTML"&&L!=="children"&&L!=="suppressContentEditableWarning"&&L!=="suppressHydrationWarning"&&L!=="autoFocus"&&(l.hasOwnProperty(L)?f||(f=[]):(f=f||[]).push(L,null));for(L in a){var E=a[L];if(w=c!=null?c[L]:void 0,a.hasOwnProperty(L)&&E!==w&&(E!=null||w!=null))if(L==="style")if(w){for(g in w)!w.hasOwnProperty(g)||E&&E.hasOwnProperty(g)||(o||(o={}),o[g]="");for(g in E)E.hasOwnProperty(g)&&w[g]!==E[g]&&(o||(o={}),o[g]=E[g])}else o||(f||(f=[]),f.push(L,o)),o=E;else L==="dangerouslySetInnerHTML"?(E=E?E.__html:void 0,w=w?w.__html:void 0,E!=null&&w!==E&&(f=f||[]).push(L,E)):L==="children"?typeof E!="string"&&typeof E!="number"||(f=f||[]).push(L,""+E):L!=="suppressContentEditableWarning"&&L!=="suppressHydrationWarning"&&(l.hasOwnProperty(L)?(E!=null&&L==="onScroll"&&Ue("scroll",e),f||w===E||(f=[])):(f=f||[]).push(L,E))}o&&(f=f||[]).push("style",o);var L=f;(t.updateQueue=L)&&(t.flags|=4)}},Ff=function(e,t,o,a){o!==a&&(t.flags|=4)};function Ri(e,t){if(!je)switch(e.tailMode){case"hidden":t=e.tail;for(var o=null;t!==null;)t.alternate!==null&&(o=t),t=t.sibling;o===null?e.tail=null:o.sibling=null;break;case"collapsed":o=e.tail;for(var a=null;o!==null;)o.alternate!==null&&(a=o),o=o.sibling;a===null?t||e.tail===null?e.tail=null:e.tail.sibling=null:a.sibling=null}}function dt(e){var t=e.alternate!==null&&e.alternate.child===e.child,o=0,a=0;if(t)for(var c=e.child;c!==null;)o|=c.lanes|c.childLanes,a|=c.subtreeFlags&14680064,a|=c.flags&14680064,c.return=e,c=c.sibling;else for(c=e.child;c!==null;)o|=c.lanes|c.childLanes,a|=c.subtreeFlags,a|=c.flags,c.return=e,c=c.sibling;return e.subtreeFlags|=a,e.childLanes=o,t}function J1(e,t,o){var a=t.pendingProps;switch(Yl(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return dt(t),null;case 1:return At(t.type)&&No(),dt(t),null;case 3:return a=t.stateNode,Mr(),ze(vt),ze(ut),oa(),a.pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),(e===null||e.child===null)&&(Fo(t)?t.flags|=4:e===null||e.memoizedState.isDehydrated&&(t.flags&256)===0||(t.flags|=1024,Dt!==null&&(Oa(Dt),Dt=null))),Sa(e,t),dt(t),null;case 5:ra(t);var c=Hn(Ei.current);if(o=t.type,e!==null&&t.stateNode!=null)Vf(e,t,o,a,c),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!a){if(t.stateNode===null)throw Error(r(166));return dt(t),null}if(e=Hn($t.current),Fo(t)){a=t.stateNode,o=t.type;var f=t.memoizedProps;switch(a[_t]=t,a[yi]=f,e=(t.mode&1)!==0,o){case"dialog":Ue("cancel",a),Ue("close",a);break;case"iframe":case"object":case"embed":Ue("load",a);break;case"video":case"audio":for(c=0;c<hi.length;c++)Ue(hi[c],a);break;case"source":Ue("error",a);break;case"img":case"image":case"link":Ue("error",a),Ue("load",a);break;case"details":Ue("toggle",a);break;case"input":pc(a,f),Ue("invalid",a);break;case"select":a._wrapperState={wasMultiple:!!f.multiple},Ue("invalid",a);break;case"textarea":gc(a,f),Ue("invalid",a)}il(o,f),c=null;for(var g in f)if(f.hasOwnProperty(g)){var w=f[g];g==="children"?typeof w=="string"?a.textContent!==w&&(f.suppressHydrationWarning!==!0&&ko(a.textContent,w,e),c=["children",w]):typeof w=="number"&&a.textContent!==""+w&&(f.suppressHydrationWarning!==!0&&ko(a.textContent,w,e),c=["children",""+w]):l.hasOwnProperty(g)&&w!=null&&g==="onScroll"&&Ue("scroll",a)}switch(o){case"input":no(a),mc(a,f,!0);break;case"textarea":no(a),vc(a);break;case"select":case"option":break;default:typeof f.onClick=="function"&&(a.onclick=Ro)}a=c,t.updateQueue=a,a!==null&&(t.flags|=4)}else{g=c.nodeType===9?c:c.ownerDocument,e==="http://www.w3.org/1999/xhtml"&&(e=Ac(o)),e==="http://www.w3.org/1999/xhtml"?o==="script"?(e=g.createElement("div"),e.innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):typeof a.is=="string"?e=g.createElement(o,{is:a.is}):(e=g.createElement(o),o==="select"&&(g=e,a.multiple?g.multiple=!0:a.size&&(g.size=a.size))):e=g.createElementNS(e,o),e[_t]=t,e[yi]=a,Tf(e,t,!1,!1),t.stateNode=e;e:{switch(g=ol(o,a),o){case"dialog":Ue("cancel",e),Ue("close",e),c=a;break;case"iframe":case"object":case"embed":Ue("load",e),c=a;break;case"video":case"audio":for(c=0;c<hi.length;c++)Ue(hi[c],e);c=a;break;case"source":Ue("error",e),c=a;break;case"img":case"image":case"link":Ue("error",e),Ue("load",e),c=a;break;case"details":Ue("toggle",e),c=a;break;case"input":pc(e,a),c=$s(e,a),Ue("invalid",e);break;case"option":c=a;break;case"select":e._wrapperState={wasMultiple:!!a.multiple},c=Z({},a,{value:void 0}),Ue("invalid",e);break;case"textarea":gc(e,a),c=nl(e,a),Ue("invalid",e);break;default:c=a}il(o,c),w=c;for(f in w)if(w.hasOwnProperty(f)){var E=w[f];f==="style"?Ec(e,E):f==="dangerouslySetInnerHTML"?(E=E?E.__html:void 0,E!=null&&wc(e,E)):f==="children"?typeof E=="string"?(o!=="textarea"||E!=="")&&Jr(e,E):typeof E=="number"&&Jr(e,""+E):f!=="suppressContentEditableWarning"&&f!=="suppressHydrationWarning"&&f!=="autoFocus"&&(l.hasOwnProperty(f)?E!=null&&f==="onScroll"&&Ue("scroll",e):E!=null&&U(e,f,E,g))}switch(o){case"input":no(e),mc(e,a,!1);break;case"textarea":no(e),vc(e);break;case"option":a.value!=null&&e.setAttribute("value",""+xe(a.value));break;case"select":e.multiple=!!a.multiple,f=a.value,f!=null?dr(e,!!a.multiple,f,!1):a.defaultValue!=null&&dr(e,!!a.multiple,a.defaultValue,!0);break;default:typeof c.onClick=="function"&&(e.onclick=Ro)}switch(o){case"button":case"input":case"select":case"textarea":a=!!a.autoFocus;break e;case"img":a=!0;break e;default:a=!1}}a&&(t.flags|=4)}t.ref!==null&&(t.flags|=512,t.flags|=2097152)}return dt(t),null;case 6:if(e&&t.stateNode!=null)Ff(e,t,e.memoizedProps,a);else{if(typeof a!="string"&&t.stateNode===null)throw Error(r(166));if(o=Hn(Ei.current),Hn($t.current),Fo(t)){if(a=t.stateNode,o=t.memoizedProps,a[_t]=t,(f=a.nodeValue!==o)&&(e=Rt,e!==null))switch(e.tag){case 3:ko(a.nodeValue,o,(e.mode&1)!==0);break;case 5:e.memoizedProps.suppressHydrationWarning!==!0&&ko(a.nodeValue,o,(e.mode&1)!==0)}f&&(t.flags|=4)}else a=(o.nodeType===9?o:o.ownerDocument).createTextNode(a),a[_t]=t,t.stateNode=a}return dt(t),null;case 13:if(ze(We),a=t.memoizedState,e===null||e.memoizedState!==null&&e.memoizedState.dehydrated!==null){if(je&&It!==null&&(t.mode&1)!==0&&(t.flags&128)===0)Pd(),kr(),t.flags|=98560,f=!1;else if(f=Fo(t),a!==null&&a.dehydrated!==null){if(e===null){if(!f)throw Error(r(318));if(f=t.memoizedState,f=f!==null?f.dehydrated:null,!f)throw Error(r(317));f[_t]=t}else kr(),(t.flags&128)===0&&(t.memoizedState=null),t.flags|=4;dt(t),f=!1}else Dt!==null&&(Oa(Dt),Dt=null),f=!0;if(!f)return t.flags&65536?t:null}return(t.flags&128)!==0?(t.lanes=o,t):(a=a!==null,a!==(e!==null&&e.memoizedState!==null)&&a&&(t.child.flags|=8192,(t.mode&1)!==0&&(e===null||(We.current&1)!==0?_e===0&&(_e=3):za())),t.updateQueue!==null&&(t.flags|=4),dt(t),null);case 4:return Mr(),Sa(e,t),e===null&&mi(t.stateNode.containerInfo),dt(t),null;case 10:return _l(t.type._context),dt(t),null;case 17:return At(t.type)&&No(),dt(t),null;case 19:if(ze(We),f=t.memoizedState,f===null)return dt(t),null;if(a=(t.flags&128)!==0,g=f.rendering,g===null)if(a)Ri(f,!1);else{if(_e!==0||e!==null&&(e.flags&128)!==0)for(e=t.child;e!==null;){if(g=jo(e),g!==null){for(t.flags|=128,Ri(f,!1),a=g.updateQueue,a!==null&&(t.updateQueue=a,t.flags|=4),t.subtreeFlags=0,a=o,o=t.child;o!==null;)f=o,e=a,f.flags&=14680066,g=f.alternate,g===null?(f.childLanes=0,f.lanes=e,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,e=g.dependencies,f.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext}),o=o.sibling;return Pe(We,We.current&1|2),t.child}e=e.sibling}f.tail!==null&&Qe()>Fr&&(t.flags|=128,a=!0,Ri(f,!1),t.lanes=4194304)}else{if(!a)if(e=jo(g),e!==null){if(t.flags|=128,a=!0,o=e.updateQueue,o!==null&&(t.updateQueue=o,t.flags|=4),Ri(f,!0),f.tail===null&&f.tailMode==="hidden"&&!g.alternate&&!je)return dt(t),null}else 2*Qe()-f.renderingStartTime>Fr&&o!==1073741824&&(t.flags|=128,a=!0,Ri(f,!1),t.lanes=4194304);f.isBackwards?(g.sibling=t.child,t.child=g):(o=f.last,o!==null?o.sibling=g:t.child=g,f.last=g)}return f.tail!==null?(t=f.tail,f.rendering=t,f.tail=t.sibling,f.renderingStartTime=Qe(),t.sibling=null,o=We.current,Pe(We,a?o&1|2:o&1),t):(dt(t),null);case 22:case 23:return Ua(),a=t.memoizedState!==null,e!==null&&e.memoizedState!==null!==a&&(t.flags|=8192),a&&(t.mode&1)!==0?(Nt&1073741824)!==0&&(dt(t),t.subtreeFlags&6&&(t.flags|=8192)):dt(t),null;case 24:return null;case 25:return null}throw Error(r(156,t.tag))}function H1(e,t){switch(Yl(t),t.tag){case 1:return At(t.type)&&No(),e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 3:return Mr(),ze(vt),ze(ut),oa(),e=t.flags,(e&65536)!==0&&(e&128)===0?(t.flags=e&-65537|128,t):null;case 5:return ra(t),null;case 13:if(ze(We),e=t.memoizedState,e!==null&&e.dehydrated!==null){if(t.alternate===null)throw Error(r(340));kr()}return e=t.flags,e&65536?(t.flags=e&-65537|128,t):null;case 19:return ze(We),null;case 4:return Mr(),null;case 10:return _l(t.type._context),null;case 22:case 23:return Ua(),null;case 24:return null;default:return null}}var Jo=!1,ft=!1,X1=typeof WeakSet=="function"?WeakSet:Set,oe=null;function Tr(e,t){var o=e.ref;if(o!==null)if(typeof o=="function")try{o(null)}catch(a){Ke(e,t,a)}else o.current=null}function ba(e,t,o){try{o()}catch(a){Ke(e,t,a)}}var Of=!1;function _1(e,t){if(Ul=mo,e=fd(),Nl(e)){if("selectionStart"in e)var o={start:e.selectionStart,end:e.selectionEnd};else e:{o=(o=e.ownerDocument)&&o.defaultView||window;var a=o.getSelection&&o.getSelection();if(a&&a.rangeCount!==0){o=a.anchorNode;var c=a.anchorOffset,f=a.focusNode;a=a.focusOffset;try{o.nodeType,f.nodeType}catch{o=null;break e}var g=0,w=-1,E=-1,L=0,W=0,K=e,j=null;t:for(;;){for(var re;K!==o||c!==0&&K.nodeType!==3||(w=g+c),K!==f||a!==0&&K.nodeType!==3||(E=g+a),K.nodeType===3&&(g+=K.nodeValue.length),(re=K.firstChild)!==null;)j=K,K=re;for(;;){if(K===e)break t;if(j===o&&++L===c&&(w=g),j===f&&++W===a&&(E=g),(re=K.nextSibling)!==null)break;K=j,j=K.parentNode}K=re}o=w===-1||E===-1?null:{start:w,end:E}}else o=null}o=o||{start:0,end:0}}else o=null;for(zl={focusedElem:e,selectionRange:o},mo=!1,oe=t;oe!==null;)if(t=oe,e=t.child,(t.subtreeFlags&1028)!==0&&e!==null)e.return=t,oe=e;else for(;oe!==null;){t=oe;try{var se=t.alternate;if((t.flags&1024)!==0)switch(t.tag){case 0:case 11:case 15:break;case 1:if(se!==null){var ue=se.memoizedProps,Ye=se.memoizedState,I=t.stateNode,S=I.getSnapshotBeforeUpdate(t.elementType===t.type?ue:Kt(t.type,ue),Ye);I.__reactInternalSnapshotBeforeUpdate=S}break;case 3:var N=t.stateNode.containerInfo;N.nodeType===1?N.textContent="":N.nodeType===9&&N.documentElement&&N.removeChild(N.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(r(163))}}catch(Y){Ke(t,t.return,Y)}if(e=t.sibling,e!==null){e.return=t.return,oe=e;break}oe=t.return}return se=Of,Of=!1,se}function Ii(e,t,o){var a=t.updateQueue;if(a=a!==null?a.lastEffect:null,a!==null){var c=a=a.next;do{if((c.tag&e)===e){var f=c.destroy;c.destroy=void 0,f!==void 0&&ba(t,o,f)}c=c.next}while(c!==a)}}function Ho(e,t){if(t=t.updateQueue,t=t!==null?t.lastEffect:null,t!==null){var o=t=t.next;do{if((o.tag&e)===e){var a=o.create;o.destroy=a()}o=o.next}while(o!==t)}}function ka(e){var t=e.ref;if(t!==null){var o=e.stateNode;switch(e.tag){case 5:e=o;break;default:e=o}typeof t=="function"?t(e):t.current=e}}function Pf(e){var t=e.alternate;t!==null&&(e.alternate=null,Pf(t)),e.child=null,e.deletions=null,e.sibling=null,e.tag===5&&(t=e.stateNode,t!==null&&(delete t[_t],delete t[yi],delete t[Wl],delete t[F1],delete t[O1])),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function Uf(e){return e.tag===5||e.tag===3||e.tag===4}function zf(e){e:for(;;){for(;e.sibling===null;){if(e.return===null||Uf(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;e.tag!==5&&e.tag!==6&&e.tag!==18;){if(e.flags&2||e.child===null||e.tag===4)continue e;e.child.return=e,e=e.child}if(!(e.flags&2))return e.stateNode}}function Ra(e,t,o){var a=e.tag;if(a===5||a===6)e=e.stateNode,t?o.nodeType===8?o.parentNode.insertBefore(e,t):o.insertBefore(e,t):(o.nodeType===8?(t=o.parentNode,t.insertBefore(e,o)):(t=o,t.appendChild(e)),o=o._reactRootContainer,o!=null||t.onclick!==null||(t.onclick=Ro));else if(a!==4&&(e=e.child,e!==null))for(Ra(e,t,o),e=e.sibling;e!==null;)Ra(e,t,o),e=e.sibling}function Ia(e,t,o){var a=e.tag;if(a===5||a===6)e=e.stateNode,t?o.insertBefore(e,t):o.appendChild(e);else if(a!==4&&(e=e.child,e!==null))for(Ia(e,t,o),e=e.sibling;e!==null;)Ia(e,t,o),e=e.sibling}var st=null,Qt=!1;function Nn(e,t,o){for(o=o.child;o!==null;)qf(e,t,o),o=o.sibling}function qf(e,t,o){if(Xt&&typeof Xt.onCommitFiberUnmount=="function")try{Xt.onCommitFiberUnmount(ao,o)}catch{}switch(o.tag){case 5:ft||Tr(o,t);case 6:var a=st,c=Qt;st=null,Nn(e,t,o),st=a,Qt=c,st!==null&&(Qt?(e=st,o=o.stateNode,e.nodeType===8?e.parentNode.removeChild(o):e.removeChild(o)):st.removeChild(o.stateNode));break;case 18:st!==null&&(Qt?(e=st,o=o.stateNode,e.nodeType===8?Bl(e.parentNode,o):e.nodeType===1&&Bl(e,o),si(e)):Bl(st,o.stateNode));break;case 4:a=st,c=Qt,st=o.stateNode.containerInfo,Qt=!0,Nn(e,t,o),st=a,Qt=c;break;case 0:case 11:case 14:case 15:if(!ft&&(a=o.updateQueue,a!==null&&(a=a.lastEffect,a!==null))){c=a=a.next;do{var f=c,g=f.destroy;f=f.tag,g!==void 0&&((f&2)!==0||(f&4)!==0)&&ba(o,t,g),c=c.next}while(c!==a)}Nn(e,t,o);break;case 1:if(!ft&&(Tr(o,t),a=o.stateNode,typeof a.componentWillUnmount=="function"))try{a.props=o.memoizedProps,a.state=o.memoizedState,a.componentWillUnmount()}catch(w){Ke(o,t,w)}Nn(e,t,o);break;case 21:Nn(e,t,o);break;case 22:o.mode&1?(ft=(a=ft)||o.memoizedState!==null,Nn(e,t,o),ft=a):Nn(e,t,o);break;default:Nn(e,t,o)}}function jf(e){var t=e.updateQueue;if(t!==null){e.updateQueue=null;var o=e.stateNode;o===null&&(o=e.stateNode=new X1),t.forEach(function(a){var c=l0.bind(null,e,a);o.has(a)||(o.add(a),a.then(c,c))})}}function Yt(e,t){var o=t.deletions;if(o!==null)for(var a=0;a<o.length;a++){var c=o[a];try{var f=e,g=t,w=g;e:for(;w!==null;){switch(w.tag){case 5:st=w.stateNode,Qt=!1;break e;case 3:st=w.stateNode.containerInfo,Qt=!0;break e;case 4:st=w.stateNode.containerInfo,Qt=!0;break e}w=w.return}if(st===null)throw Error(r(160));qf(f,g,c),st=null,Qt=!1;var E=c.alternate;E!==null&&(E.return=null),c.return=null}catch(L){Ke(c,t,L)}}if(t.subtreeFlags&12854)for(t=t.child;t!==null;)Bf(t,e),t=t.sibling}function Bf(e,t){var o=e.alternate,a=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(Yt(t,e),tn(e),a&4){try{Ii(3,e,e.return),Ho(3,e)}catch(ue){Ke(e,e.return,ue)}try{Ii(5,e,e.return)}catch(ue){Ke(e,e.return,ue)}}break;case 1:Yt(t,e),tn(e),a&512&&o!==null&&Tr(o,o.return);break;case 5:if(Yt(t,e),tn(e),a&512&&o!==null&&Tr(o,o.return),e.flags&32){var c=e.stateNode;try{Jr(c,"")}catch(ue){Ke(e,e.return,ue)}}if(a&4&&(c=e.stateNode,c!=null)){var f=e.memoizedProps,g=o!==null?o.memoizedProps:f,w=e.type,E=e.updateQueue;if(e.updateQueue=null,E!==null)try{w==="input"&&f.type==="radio"&&f.name!=null&&hc(c,f),ol(w,g);var L=ol(w,f);for(g=0;g<E.length;g+=2){var W=E[g],K=E[g+1];W==="style"?Ec(c,K):W==="dangerouslySetInnerHTML"?wc(c,K):W==="children"?Jr(c,K):U(c,W,K,L)}switch(w){case"input":el(c,f);break;case"textarea":yc(c,f);break;case"select":var j=c._wrapperState.wasMultiple;c._wrapperState.wasMultiple=!!f.multiple;var re=f.value;re!=null?dr(c,!!f.multiple,re,!1):j!==!!f.multiple&&(f.defaultValue!=null?dr(c,!!f.multiple,f.defaultValue,!0):dr(c,!!f.multiple,f.multiple?[]:"",!1))}c[yi]=f}catch(ue){Ke(e,e.return,ue)}}break;case 6:if(Yt(t,e),tn(e),a&4){if(e.stateNode===null)throw Error(r(162));c=e.stateNode,f=e.memoizedProps;try{c.nodeValue=f}catch(ue){Ke(e,e.return,ue)}}break;case 3:if(Yt(t,e),tn(e),a&4&&o!==null&&o.memoizedState.isDehydrated)try{si(t.containerInfo)}catch(ue){Ke(e,e.return,ue)}break;case 4:Yt(t,e),tn(e);break;case 13:Yt(t,e),tn(e),c=e.child,c.flags&8192&&(f=c.memoizedState!==null,c.stateNode.isHidden=f,!f||c.alternate!==null&&c.alternate.memoizedState!==null||(La=Qe())),a&4&&jf(e);break;case 22:if(W=o!==null&&o.memoizedState!==null,e.mode&1?(ft=(L=ft)||W,Yt(t,e),ft=L):Yt(t,e),tn(e),a&8192){if(L=e.memoizedState!==null,(e.stateNode.isHidden=L)&&!W&&(e.mode&1)!==0)for(oe=e,W=e.child;W!==null;){for(K=oe=W;oe!==null;){switch(j=oe,re=j.child,j.tag){case 0:case 11:case 14:case 15:Ii(4,j,j.return);break;case 1:Tr(j,j.return);var se=j.stateNode;if(typeof se.componentWillUnmount=="function"){a=j,o=j.return;try{t=a,se.props=t.memoizedProps,se.state=t.memoizedState,se.componentWillUnmount()}catch(ue){Ke(a,o,ue)}}break;case 5:Tr(j,j.return);break;case 22:if(j.memoizedState!==null){Kf(K);continue}}re!==null?(re.return=j,oe=re):Kf(K)}W=W.sibling}e:for(W=null,K=e;;){if(K.tag===5){if(W===null){W=K;try{c=K.stateNode,L?(f=c.style,typeof f.setProperty=="function"?f.setProperty("display","none","important"):f.display="none"):(w=K.stateNode,E=K.memoizedProps.style,g=E!=null&&E.hasOwnProperty("display")?E.display:null,w.style.display=Cc("display",g))}catch(ue){Ke(e,e.return,ue)}}}else if(K.tag===6){if(W===null)try{K.stateNode.nodeValue=L?"":K.memoizedProps}catch(ue){Ke(e,e.return,ue)}}else if((K.tag!==22&&K.tag!==23||K.memoizedState===null||K===e)&&K.child!==null){K.child.return=K,K=K.child;continue}if(K===e)break e;for(;K.sibling===null;){if(K.return===null||K.return===e)break e;W===K&&(W=null),K=K.return}W===K&&(W=null),K.sibling.return=K.return,K=K.sibling}}break;case 19:Yt(t,e),tn(e),a&4&&jf(e);break;case 21:break;default:Yt(t,e),tn(e)}}function tn(e){var t=e.flags;if(t&2){try{e:{for(var o=e.return;o!==null;){if(Uf(o)){var a=o;break e}o=o.return}throw Error(r(160))}switch(a.tag){case 5:var c=a.stateNode;a.flags&32&&(Jr(c,""),a.flags&=-33);var f=zf(e);Ia(e,f,c);break;case 3:case 4:var g=a.stateNode.containerInfo,w=zf(e);Ra(e,w,g);break;default:throw Error(r(161))}}catch(E){Ke(e,e.return,E)}e.flags&=-3}t&4096&&(e.flags&=-4097)}function $1(e,t,o){oe=e,Wf(e)}function Wf(e,t,o){for(var a=(e.mode&1)!==0;oe!==null;){var c=oe,f=c.child;if(c.tag===22&&a){var g=c.memoizedState!==null||Jo;if(!g){var w=c.alternate,E=w!==null&&w.memoizedState!==null||ft;w=Jo;var L=ft;if(Jo=g,(ft=E)&&!L)for(oe=c;oe!==null;)g=oe,E=g.child,g.tag===22&&g.memoizedState!==null?Qf(c):E!==null?(E.return=g,oe=E):Qf(c);for(;f!==null;)oe=f,Wf(f),f=f.sibling;oe=c,Jo=w,ft=L}Df(e)}else(c.subtreeFlags&8772)!==0&&f!==null?(f.return=c,oe=f):Df(e)}}function Df(e){for(;oe!==null;){var t=oe;if((t.flags&8772)!==0){var o=t.alternate;try{if((t.flags&8772)!==0)switch(t.tag){case 0:case 11:case 15:ft||Ho(5,t);break;case 1:var a=t.stateNode;if(t.flags&4&&!ft)if(o===null)a.componentDidMount();else{var c=t.elementType===t.type?o.memoizedProps:Kt(t.type,o.memoizedProps);a.componentDidUpdate(c,o.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}var f=t.updateQueue;f!==null&&Dd(t,f,a);break;case 3:var g=t.updateQueue;if(g!==null){if(o=null,t.child!==null)switch(t.child.tag){case 5:o=t.child.stateNode;break;case 1:o=t.child.stateNode}Dd(t,g,o)}break;case 5:var w=t.stateNode;if(o===null&&t.flags&4){o=w;var E=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":E.autoFocus&&o.focus();break;case"img":E.src&&(o.src=E.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(t.memoizedState===null){var L=t.alternate;if(L!==null){var W=L.memoizedState;if(W!==null){var K=W.dehydrated;K!==null&&si(K)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;default:throw Error(r(163))}ft||t.flags&512&&ka(t)}catch(j){Ke(t,t.return,j)}}if(t===e){oe=null;break}if(o=t.sibling,o!==null){o.return=t.return,oe=o;break}oe=t.return}}function Kf(e){for(;oe!==null;){var t=oe;if(t===e){oe=null;break}var o=t.sibling;if(o!==null){o.return=t.return,oe=o;break}oe=t.return}}function Qf(e){for(;oe!==null;){var t=oe;try{switch(t.tag){case 0:case 11:case 15:var o=t.return;try{Ho(4,t)}catch(E){Ke(t,o,E)}break;case 1:var a=t.stateNode;if(typeof a.componentDidMount=="function"){var c=t.return;try{a.componentDidMount()}catch(E){Ke(t,c,E)}}var f=t.return;try{ka(t)}catch(E){Ke(t,f,E)}break;case 5:var g=t.return;try{ka(t)}catch(E){Ke(t,g,E)}}}catch(E){Ke(t,t.return,E)}if(t===e){oe=null;break}var w=t.sibling;if(w!==null){w.return=t.return,oe=w;break}oe=t.return}}var e0=Math.ceil,Xo=B.ReactCurrentDispatcher,Na=B.ReactCurrentOwner,zt=B.ReactCurrentBatchConfig,Ne=0,tt=null,Je=null,lt=0,Nt=0,Vr=Sn(0),_e=0,Ni=null,_n=0,_o=0,Ma=0,Mi=null,Ct=null,La=0,Fr=1/0,mn=null,$o=!1,Ta=null,Mn=null,es=!1,Ln=null,ts=0,Li=0,Va=null,ns=-1,rs=0;function gt(){return(Ne&6)!==0?Qe():ns!==-1?ns:ns=Qe()}function Tn(e){return(e.mode&1)===0?1:(Ne&2)!==0&&lt!==0?lt&-lt:U1.transition!==null?(rs===0&&(rs=Uc()),rs):(e=Fe,e!==0||(e=window.event,e=e===void 0?16:Yc(e.type)),e)}function Gt(e,t,o,a){if(50<Li)throw Li=0,Va=null,Error(r(185));ti(e,o,a),((Ne&2)===0||e!==tt)&&(e===tt&&((Ne&2)===0&&(_o|=o),_e===4&&Vn(e,lt)),Et(e,a),o===1&&Ne===0&&(t.mode&1)===0&&(Fr=Qe()+500,Lo&&kn()))}function Et(e,t){var o=e.callbackNode;Ug(e,t);var a=fo(e,e===tt?lt:0);if(a===0)o!==null&&Fc(o),e.callbackNode=null,e.callbackPriority=0;else if(t=a&-a,e.callbackPriority!==t){if(o!=null&&Fc(o),t===1)e.tag===0?P1(Gf.bind(null,e)):Ld(Gf.bind(null,e)),T1(function(){(Ne&6)===0&&kn()}),o=null;else{switch(zc(a)){case 1:o=fl;break;case 4:o=Oc;break;case 16:o=lo;break;case 536870912:o=Pc;break;default:o=lo}o=tp(o,Yf.bind(null,e))}e.callbackPriority=t,e.callbackNode=o}}function Yf(e,t){if(ns=-1,rs=0,(Ne&6)!==0)throw Error(r(327));var o=e.callbackNode;if(Or()&&e.callbackNode!==o)return null;var a=fo(e,e===tt?lt:0);if(a===0)return null;if((a&30)!==0||(a&e.expiredLanes)!==0||t)t=is(e,a);else{t=a;var c=Ne;Ne|=2;var f=Jf();(tt!==e||lt!==t)&&(mn=null,Fr=Qe()+500,er(e,t));do try{r0();break}catch(w){Zf(e,w)}while(!0);Xl(),Xo.current=f,Ne=c,Je!==null?t=0:(tt=null,lt=0,t=_e)}if(t!==0){if(t===2&&(c=pl(e),c!==0&&(a=c,t=Fa(e,c))),t===1)throw o=Ni,er(e,0),Vn(e,a),Et(e,Qe()),o;if(t===6)Vn(e,a);else{if(c=e.current.alternate,(a&30)===0&&!t0(c)&&(t=is(e,a),t===2&&(f=pl(e),f!==0&&(a=f,t=Fa(e,f))),t===1))throw o=Ni,er(e,0),Vn(e,a),Et(e,Qe()),o;switch(e.finishedWork=c,e.finishedLanes=a,t){case 0:case 1:throw Error(r(345));case 2:tr(e,Ct,mn);break;case 3:if(Vn(e,a),(a&130023424)===a&&(t=La+500-Qe(),10<t)){if(fo(e,0)!==0)break;if(c=e.suspendedLanes,(c&a)!==a){gt(),e.pingedLanes|=e.suspendedLanes&c;break}e.timeoutHandle=jl(tr.bind(null,e,Ct,mn),t);break}tr(e,Ct,mn);break;case 4:if(Vn(e,a),(a&4194240)===a)break;for(t=e.eventTimes,c=-1;0<a;){var g=31-Bt(a);f=1<<g,g=t[g],g>c&&(c=g),a&=~f}if(a=c,a=Qe()-a,a=(120>a?120:480>a?480:1080>a?1080:1920>a?1920:3e3>a?3e3:4320>a?4320:1960*e0(a/1960))-a,10<a){e.timeoutHandle=jl(tr.bind(null,e,Ct,mn),a);break}tr(e,Ct,mn);break;case 5:tr(e,Ct,mn);break;default:throw Error(r(329))}}}return Et(e,Qe()),e.callbackNode===o?Yf.bind(null,e):null}function Fa(e,t){var o=Mi;return e.current.memoizedState.isDehydrated&&(er(e,t).flags|=256),e=is(e,t),e!==2&&(t=Ct,Ct=o,t!==null&&Oa(t)),e}function Oa(e){Ct===null?Ct=e:Ct.push.apply(Ct,e)}function t0(e){for(var t=e;;){if(t.flags&16384){var o=t.updateQueue;if(o!==null&&(o=o.stores,o!==null))for(var a=0;a<o.length;a++){var c=o[a],f=c.getSnapshot;c=c.value;try{if(!Wt(f(),c))return!1}catch{return!1}}}if(o=t.child,t.subtreeFlags&16384&&o!==null)o.return=t,t=o;else{if(t===e)break;for(;t.sibling===null;){if(t.return===null||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}function Vn(e,t){for(t&=~Ma,t&=~_o,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var o=31-Bt(t),a=1<<o;e[o]=-1,t&=~a}}function Gf(e){if((Ne&6)!==0)throw Error(r(327));Or();var t=fo(e,0);if((t&1)===0)return Et(e,Qe()),null;var o=is(e,t);if(e.tag!==0&&o===2){var a=pl(e);a!==0&&(t=a,o=Fa(e,a))}if(o===1)throw o=Ni,er(e,0),Vn(e,t),Et(e,Qe()),o;if(o===6)throw Error(r(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,tr(e,Ct,mn),Et(e,Qe()),null}function Pa(e,t){var o=Ne;Ne|=1;try{return e(t)}finally{Ne=o,Ne===0&&(Fr=Qe()+500,Lo&&kn())}}function $n(e){Ln!==null&&Ln.tag===0&&(Ne&6)===0&&Or();var t=Ne;Ne|=1;var o=zt.transition,a=Fe;try{if(zt.transition=null,Fe=1,e)return e()}finally{Fe=a,zt.transition=o,Ne=t,(Ne&6)===0&&kn()}}function Ua(){Nt=Vr.current,ze(Vr)}function er(e,t){e.finishedWork=null,e.finishedLanes=0;var o=e.timeoutHandle;if(o!==-1&&(e.timeoutHandle=-1,L1(o)),Je!==null)for(o=Je.return;o!==null;){var a=o;switch(Yl(a),a.tag){case 1:a=a.type.childContextTypes,a!=null&&No();break;case 3:Mr(),ze(vt),ze(ut),oa();break;case 5:ra(a);break;case 4:Mr();break;case 13:ze(We);break;case 19:ze(We);break;case 10:_l(a.type._context);break;case 22:case 23:Ua()}o=o.return}if(tt=e,Je=e=Fn(e.current,null),lt=Nt=t,_e=0,Ni=null,Ma=_o=_n=0,Ct=Mi=null,Jn!==null){for(t=0;t<Jn.length;t++)if(o=Jn[t],a=o.interleaved,a!==null){o.interleaved=null;var c=a.next,f=o.pending;if(f!==null){var g=f.next;f.next=c,a.next=g}o.pending=a}Jn=null}return e}function Zf(e,t){do{var o=Je;try{if(Xl(),Bo.current=Qo,Wo){for(var a=De.memoizedState;a!==null;){var c=a.queue;c!==null&&(c.pending=null),a=a.next}Wo=!1}if(Xn=0,et=Xe=De=null,xi=!1,Si=0,Na.current=null,o===null||o.return===null){_e=1,Ni=t,Je=null;break}e:{var f=e,g=o.return,w=o,E=t;if(t=lt,w.flags|=32768,E!==null&&typeof E=="object"&&typeof E.then=="function"){var L=E,W=w,K=W.tag;if((W.mode&1)===0&&(K===0||K===11||K===15)){var j=W.alternate;j?(W.updateQueue=j.updateQueue,W.memoizedState=j.memoizedState,W.lanes=j.lanes):(W.updateQueue=null,W.memoizedState=null)}var re=Af(g);if(re!==null){re.flags&=-257,wf(re,g,w,f,t),re.mode&1&&vf(f,L,t),t=re,E=L;var se=t.updateQueue;if(se===null){var ue=new Set;ue.add(E),t.updateQueue=ue}else se.add(E);break e}else{if((t&1)===0){vf(f,L,t),za();break e}E=Error(r(426))}}else if(je&&w.mode&1){var Ye=Af(g);if(Ye!==null){(Ye.flags&65536)===0&&(Ye.flags|=256),wf(Ye,g,w,f,t),Jl(Lr(E,w));break e}}f=E=Lr(E,w),_e!==4&&(_e=2),Mi===null?Mi=[f]:Mi.push(f),f=g;do{switch(f.tag){case 3:f.flags|=65536,t&=-t,f.lanes|=t;var I=gf(f,E,t);Wd(f,I);break e;case 1:w=E;var S=f.type,N=f.stateNode;if((f.flags&128)===0&&(typeof S.getDerivedStateFromError=="function"||N!==null&&typeof N.componentDidCatch=="function"&&(Mn===null||!Mn.has(N)))){f.flags|=65536,t&=-t,f.lanes|=t;var Y=yf(f,w,t);Wd(f,Y);break e}}f=f.return}while(f!==null)}Xf(o)}catch(de){t=de,Je===o&&o!==null&&(Je=o=o.return);continue}break}while(!0)}function Jf(){var e=Xo.current;return Xo.current=Qo,e===null?Qo:e}function za(){(_e===0||_e===3||_e===2)&&(_e=4),tt===null||(_n&268435455)===0&&(_o&268435455)===0||Vn(tt,lt)}function is(e,t){var o=Ne;Ne|=2;var a=Jf();(tt!==e||lt!==t)&&(mn=null,er(e,t));do try{n0();break}catch(c){Zf(e,c)}while(!0);if(Xl(),Ne=o,Xo.current=a,Je!==null)throw Error(r(261));return tt=null,lt=0,_e}function n0(){for(;Je!==null;)Hf(Je)}function r0(){for(;Je!==null&&!Ig();)Hf(Je)}function Hf(e){var t=ep(e.alternate,e,Nt);e.memoizedProps=e.pendingProps,t===null?Xf(e):Je=t,Na.current=null}function Xf(e){var t=e;do{var o=t.alternate;if(e=t.return,(t.flags&32768)===0){if(o=J1(o,t,Nt),o!==null){Je=o;return}}else{if(o=H1(o,t),o!==null){o.flags&=32767,Je=o;return}if(e!==null)e.flags|=32768,e.subtreeFlags=0,e.deletions=null;else{_e=6,Je=null;return}}if(t=t.sibling,t!==null){Je=t;return}Je=t=e}while(t!==null);_e===0&&(_e=5)}function tr(e,t,o){var a=Fe,c=zt.transition;try{zt.transition=null,Fe=1,i0(e,t,o,a)}finally{zt.transition=c,Fe=a}return null}function i0(e,t,o,a){do Or();while(Ln!==null);if((Ne&6)!==0)throw Error(r(327));o=e.finishedWork;var c=e.finishedLanes;if(o===null)return null;if(e.finishedWork=null,e.finishedLanes=0,o===e.current)throw Error(r(177));e.callbackNode=null,e.callbackPriority=0;var f=o.lanes|o.childLanes;if(zg(e,f),e===tt&&(Je=tt=null,lt=0),(o.subtreeFlags&2064)===0&&(o.flags&2064)===0||es||(es=!0,tp(lo,function(){return Or(),null})),f=(o.flags&15990)!==0,(o.subtreeFlags&15990)!==0||f){f=zt.transition,zt.transition=null;var g=Fe;Fe=1;var w=Ne;Ne|=4,Na.current=null,_1(e,o),Bf(o,e),S1(zl),mo=!!Ul,zl=Ul=null,e.current=o,$1(o),Ng(),Ne=w,Fe=g,zt.transition=f}else e.current=o;if(es&&(es=!1,Ln=e,ts=c),f=e.pendingLanes,f===0&&(Mn=null),Tg(o.stateNode),Et(e,Qe()),t!==null)for(a=e.onRecoverableError,o=0;o<t.length;o++)c=t[o],a(c.value,{componentStack:c.stack,digest:c.digest});if($o)throw $o=!1,e=Ta,Ta=null,e;return(ts&1)!==0&&e.tag!==0&&Or(),f=e.pendingLanes,(f&1)!==0?e===Va?Li++:(Li=0,Va=e):Li=0,kn(),null}function Or(){if(Ln!==null){var e=zc(ts),t=zt.transition,o=Fe;try{if(zt.transition=null,Fe=16>e?16:e,Ln===null)var a=!1;else{if(e=Ln,Ln=null,ts=0,(Ne&6)!==0)throw Error(r(331));var c=Ne;for(Ne|=4,oe=e.current;oe!==null;){var f=oe,g=f.child;if((oe.flags&16)!==0){var w=f.deletions;if(w!==null){for(var E=0;E<w.length;E++){var L=w[E];for(oe=L;oe!==null;){var W=oe;switch(W.tag){case 0:case 11:case 15:Ii(8,W,f)}var K=W.child;if(K!==null)K.return=W,oe=K;else for(;oe!==null;){W=oe;var j=W.sibling,re=W.return;if(Pf(W),W===L){oe=null;break}if(j!==null){j.return=re,oe=j;break}oe=re}}}var se=f.alternate;if(se!==null){var ue=se.child;if(ue!==null){se.child=null;do{var Ye=ue.sibling;ue.sibling=null,ue=Ye}while(ue!==null)}}oe=f}}if((f.subtreeFlags&2064)!==0&&g!==null)g.return=f,oe=g;else e:for(;oe!==null;){if(f=oe,(f.flags&2048)!==0)switch(f.tag){case 0:case 11:case 15:Ii(9,f,f.return)}var I=f.sibling;if(I!==null){I.return=f.return,oe=I;break e}oe=f.return}}var S=e.current;for(oe=S;oe!==null;){g=oe;var N=g.child;if((g.subtreeFlags&2064)!==0&&N!==null)N.return=g,oe=N;else e:for(g=S;oe!==null;){if(w=oe,(w.flags&2048)!==0)try{switch(w.tag){case 0:case 11:case 15:Ho(9,w)}}catch(de){Ke(w,w.return,de)}if(w===g){oe=null;break e}var Y=w.sibling;if(Y!==null){Y.return=w.return,oe=Y;break e}oe=w.return}}if(Ne=c,kn(),Xt&&typeof Xt.onPostCommitFiberRoot=="function")try{Xt.onPostCommitFiberRoot(ao,e)}catch{}a=!0}return a}finally{Fe=o,zt.transition=t}}return!1}function _f(e,t,o){t=Lr(o,t),t=gf(e,t,1),e=In(e,t,1),t=gt(),e!==null&&(ti(e,1,t),Et(e,t))}function Ke(e,t,o){if(e.tag===3)_f(e,e,o);else for(;t!==null;){if(t.tag===3){_f(t,e,o);break}else if(t.tag===1){var a=t.stateNode;if(typeof t.type.getDerivedStateFromError=="function"||typeof a.componentDidCatch=="function"&&(Mn===null||!Mn.has(a))){e=Lr(o,e),e=yf(t,e,1),t=In(t,e,1),e=gt(),t!==null&&(ti(t,1,e),Et(t,e));break}}t=t.return}}function o0(e,t,o){var a=e.pingCache;a!==null&&a.delete(t),t=gt(),e.pingedLanes|=e.suspendedLanes&o,tt===e&&(lt&o)===o&&(_e===4||_e===3&&(lt&130023424)===lt&&500>Qe()-La?er(e,0):Ma|=o),Et(e,t)}function $f(e,t){t===0&&((e.mode&1)===0?t=1:(t=co,co<<=1,(co&130023424)===0&&(co=4194304)));var o=gt();e=fn(e,t),e!==null&&(ti(e,t,o),Et(e,o))}function s0(e){var t=e.memoizedState,o=0;t!==null&&(o=t.retryLane),$f(e,o)}function l0(e,t){var o=0;switch(e.tag){case 13:var a=e.stateNode,c=e.memoizedState;c!==null&&(o=c.retryLane);break;case 19:a=e.stateNode;break;default:throw Error(r(314))}a!==null&&a.delete(t),$f(e,o)}var ep;ep=function(e,t,o){if(e!==null)if(e.memoizedProps!==t.pendingProps||vt.current)wt=!0;else{if((e.lanes&o)===0&&(t.flags&128)===0)return wt=!1,Z1(e,t,o);wt=(e.flags&131072)!==0}else wt=!1,je&&(t.flags&1048576)!==0&&Td(t,Vo,t.index);switch(t.lanes=0,t.tag){case 2:var a=t.type;Zo(e,t),e=t.pendingProps;var c=xr(t,ut.current);Nr(t,o),c=aa(null,t,a,e,c,o);var f=ua();return t.flags|=1,typeof c=="object"&&c!==null&&typeof c.render=="function"&&c.$$typeof===void 0?(t.tag=1,t.memoizedState=null,t.updateQueue=null,At(a)?(f=!0,Mo(t)):f=!1,t.memoizedState=c.state!==null&&c.state!==void 0?c.state:null,ta(t),c.updater=Yo,t.stateNode=c,c._reactInternals=t,ma(t,a,e,o),t=Aa(null,t,a,!0,f,o)):(t.tag=0,je&&f&&Ql(t),mt(null,t,c,o),t=t.child),t;case 16:a=t.elementType;e:{switch(Zo(e,t),e=t.pendingProps,c=a._init,a=c(a._payload),t.type=a,c=t.tag=u0(a),e=Kt(a,e),c){case 0:t=va(null,t,a,e,o);break e;case 1:t=kf(null,t,a,e,o);break e;case 11:t=Cf(null,t,a,e,o);break e;case 14:t=Ef(null,t,a,Kt(a.type,e),o);break e}throw Error(r(306,a,""))}return t;case 0:return a=t.type,c=t.pendingProps,c=t.elementType===a?c:Kt(a,c),va(e,t,a,c,o);case 1:return a=t.type,c=t.pendingProps,c=t.elementType===a?c:Kt(a,c),kf(e,t,a,c,o);case 3:e:{if(Rf(t),e===null)throw Error(r(387));a=t.pendingProps,f=t.memoizedState,c=f.element,Bd(e,t),qo(t,a,null,o);var g=t.memoizedState;if(a=g.element,f.isDehydrated)if(f={element:a,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},t.updateQueue.baseState=f,t.memoizedState=f,t.flags&256){c=Lr(Error(r(423)),t),t=If(e,t,a,o,c);break e}else if(a!==c){c=Lr(Error(r(424)),t),t=If(e,t,a,o,c);break e}else for(It=xn(t.stateNode.containerInfo.firstChild),Rt=t,je=!0,Dt=null,o=qd(t,null,a,o),t.child=o;o;)o.flags=o.flags&-3|4096,o=o.sibling;else{if(kr(),a===c){t=hn(e,t,o);break e}mt(e,t,a,o)}t=t.child}return t;case 5:return Kd(t),e===null&&Zl(t),a=t.type,c=t.pendingProps,f=e!==null?e.memoizedProps:null,g=c.children,ql(a,c)?g=null:f!==null&&ql(a,f)&&(t.flags|=32),bf(e,t),mt(e,t,g,o),t.child;case 6:return e===null&&Zl(t),null;case 13:return Nf(e,t,o);case 4:return na(t,t.stateNode.containerInfo),a=t.pendingProps,e===null?t.child=Rr(t,null,a,o):mt(e,t,a,o),t.child;case 11:return a=t.type,c=t.pendingProps,c=t.elementType===a?c:Kt(a,c),Cf(e,t,a,c,o);case 7:return mt(e,t,t.pendingProps,o),t.child;case 8:return mt(e,t,t.pendingProps.children,o),t.child;case 12:return mt(e,t,t.pendingProps.children,o),t.child;case 10:e:{if(a=t.type._context,c=t.pendingProps,f=t.memoizedProps,g=c.value,Pe(Po,a._currentValue),a._currentValue=g,f!==null)if(Wt(f.value,g)){if(f.children===c.children&&!vt.current){t=hn(e,t,o);break e}}else for(f=t.child,f!==null&&(f.return=t);f!==null;){var w=f.dependencies;if(w!==null){g=f.child;for(var E=w.firstContext;E!==null;){if(E.context===a){if(f.tag===1){E=pn(-1,o&-o),E.tag=2;var L=f.updateQueue;if(L!==null){L=L.shared;var W=L.pending;W===null?E.next=E:(E.next=W.next,W.next=E),L.pending=E}}f.lanes|=o,E=f.alternate,E!==null&&(E.lanes|=o),$l(f.return,o,t),w.lanes|=o;break}E=E.next}}else if(f.tag===10)g=f.type===t.type?null:f.child;else if(f.tag===18){if(g=f.return,g===null)throw Error(r(341));g.lanes|=o,w=g.alternate,w!==null&&(w.lanes|=o),$l(g,o,t),g=f.sibling}else g=f.child;if(g!==null)g.return=f;else for(g=f;g!==null;){if(g===t){g=null;break}if(f=g.sibling,f!==null){f.return=g.return,g=f;break}g=g.return}f=g}mt(e,t,c.children,o),t=t.child}return t;case 9:return c=t.type,a=t.pendingProps.children,Nr(t,o),c=Pt(c),a=a(c),t.flags|=1,mt(e,t,a,o),t.child;case 14:return a=t.type,c=Kt(a,t.pendingProps),c=Kt(a.type,c),Ef(e,t,a,c,o);case 15:return xf(e,t,t.type,t.pendingProps,o);case 17:return a=t.type,c=t.pendingProps,c=t.elementType===a?c:Kt(a,c),Zo(e,t),t.tag=1,At(a)?(e=!0,Mo(t)):e=!1,Nr(t,o),hf(t,a,c),ma(t,a,c,o),Aa(null,t,a,!0,e,o);case 19:return Lf(e,t,o);case 22:return Sf(e,t,o)}throw Error(r(156,t.tag))};function tp(e,t){return Vc(e,t)}function a0(e,t,o,a){this.tag=e,this.key=o,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=a,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function qt(e,t,o,a){return new a0(e,t,o,a)}function qa(e){return e=e.prototype,!(!e||!e.isReactComponent)}function u0(e){if(typeof e=="function")return qa(e)?1:0;if(e!=null){if(e=e.$$typeof,e===_)return 11;if(e===Ce)return 14}return 2}function Fn(e,t){var o=e.alternate;return o===null?(o=qt(e.tag,t,e.key,e.mode),o.elementType=e.elementType,o.type=e.type,o.stateNode=e.stateNode,o.alternate=e,e.alternate=o):(o.pendingProps=t,o.type=e.type,o.flags=0,o.subtreeFlags=0,o.deletions=null),o.flags=e.flags&14680064,o.childLanes=e.childLanes,o.lanes=e.lanes,o.child=e.child,o.memoizedProps=e.memoizedProps,o.memoizedState=e.memoizedState,o.updateQueue=e.updateQueue,t=e.dependencies,o.dependencies=t===null?null:{lanes:t.lanes,firstContext:t.firstContext},o.sibling=e.sibling,o.index=e.index,o.ref=e.ref,o}function os(e,t,o,a,c,f){var g=2;if(a=e,typeof e=="function")qa(e)&&(g=1);else if(typeof e=="string")g=5;else e:switch(e){case O:return nr(o.children,c,f,t);case D:g=8,c|=8;break;case J:return e=qt(12,o,t,c|2),e.elementType=J,e.lanes=f,e;case $:return e=qt(13,o,t,c),e.elementType=$,e.lanes=f,e;case ee:return e=qt(19,o,t,c),e.elementType=ee,e.lanes=f,e;case Ie:return ss(o,c,f,t);default:if(typeof e=="object"&&e!==null)switch(e.$$typeof){case ie:g=10;break e;case X:g=9;break e;case _:g=11;break e;case Ce:g=14;break e;case ce:g=16,a=null;break e}throw Error(r(130,e==null?e:typeof e,""))}return t=qt(g,o,t,c),t.elementType=e,t.type=a,t.lanes=f,t}function nr(e,t,o,a){return e=qt(7,e,a,t),e.lanes=o,e}function ss(e,t,o,a){return e=qt(22,e,a,t),e.elementType=Ie,e.lanes=o,e.stateNode={isHidden:!1},e}function ja(e,t,o){return e=qt(6,e,null,t),e.lanes=o,e}function Ba(e,t,o){return t=qt(4,e.children!==null?e.children:[],e.key,t),t.lanes=o,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function c0(e,t,o,a,c){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=hl(0),this.expirationTimes=hl(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=hl(0),this.identifierPrefix=a,this.onRecoverableError=c,this.mutableSourceEagerHydrationData=null}function Wa(e,t,o,a,c,f,g,w,E){return e=new c0(e,t,o,w,E),t===1?(t=1,f===!0&&(t|=8)):t=0,f=qt(3,null,null,t),e.current=f,f.stateNode=e,f.memoizedState={element:a,isDehydrated:o,cache:null,transitions:null,pendingSuspenseBoundaries:null},ta(f),e}function d0(e,t,o){var a=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:T,key:a==null?null:""+a,children:e,containerInfo:t,implementation:o}}function np(e){if(!e)return bn;e=e._reactInternals;e:{if(Kn(e)!==e||e.tag!==1)throw Error(r(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(At(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(t!==null);throw Error(r(171))}if(e.tag===1){var o=e.type;if(At(o))return Nd(e,o,t)}return t}function rp(e,t,o,a,c,f,g,w,E){return e=Wa(o,a,!0,e,c,f,g,w,E),e.context=np(null),o=e.current,a=gt(),c=Tn(o),f=pn(a,c),f.callback=t??null,In(o,f,c),e.current.lanes=c,ti(e,c,a),Et(e,a),e}function ls(e,t,o,a){var c=t.current,f=gt(),g=Tn(c);return o=np(o),t.context===null?t.context=o:t.pendingContext=o,t=pn(f,g),t.payload={element:e},a=a===void 0?null:a,a!==null&&(t.callback=a),e=In(c,t,g),e!==null&&(Gt(e,c,g,f),zo(e,c,g)),g}function as(e){if(e=e.current,!e.child)return null;switch(e.child.tag){case 5:return e.child.stateNode;default:return e.child.stateNode}}function ip(e,t){if(e=e.memoizedState,e!==null&&e.dehydrated!==null){var o=e.retryLane;e.retryLane=o!==0&&o<t?o:t}}function Da(e,t){ip(e,t),(e=e.alternate)&&ip(e,t)}function f0(){return null}var op=typeof reportError=="function"?reportError:function(e){console.error(e)};function Ka(e){this._internalRoot=e}us.prototype.render=Ka.prototype.render=function(e){var t=this._internalRoot;if(t===null)throw Error(r(409));ls(e,t,null,null)},us.prototype.unmount=Ka.prototype.unmount=function(){var e=this._internalRoot;if(e!==null){this._internalRoot=null;var t=e.containerInfo;$n(function(){ls(null,e,null,null)}),t[an]=null}};function us(e){this._internalRoot=e}us.prototype.unstable_scheduleHydration=function(e){if(e){var t=Bc();e={blockedOn:null,target:e,priority:t};for(var o=0;o<wn.length&&t!==0&&t<wn[o].priority;o++);wn.splice(o,0,e),o===0&&Kc(e)}};function Qa(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11)}function cs(e){return!(!e||e.nodeType!==1&&e.nodeType!==9&&e.nodeType!==11&&(e.nodeType!==8||e.nodeValue!==" react-mount-point-unstable "))}function sp(){}function p0(e,t,o,a,c){if(c){if(typeof a=="function"){var f=a;a=function(){var L=as(g);f.call(L)}}var g=rp(t,a,e,0,null,!1,!1,"",sp);return e._reactRootContainer=g,e[an]=g.current,mi(e.nodeType===8?e.parentNode:e),$n(),g}for(;c=e.lastChild;)e.removeChild(c);if(typeof a=="function"){var w=a;a=function(){var L=as(E);w.call(L)}}var E=Wa(e,0,!1,null,null,!1,!1,"",sp);return e._reactRootContainer=E,e[an]=E.current,mi(e.nodeType===8?e.parentNode:e),$n(function(){ls(t,E,o,a)}),E}function ds(e,t,o,a,c){var f=o._reactRootContainer;if(f){var g=f;if(typeof c=="function"){var w=c;c=function(){var E=as(g);w.call(E)}}ls(t,g,e,c)}else g=p0(o,t,e,c,a);return as(g)}qc=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var o=ei(t.pendingLanes);o!==0&&(ml(t,o|1),Et(t,Qe()),(Ne&6)===0&&(Fr=Qe()+500,kn()))}break;case 13:$n(function(){var a=fn(e,1);if(a!==null){var c=gt();Gt(a,e,1,c)}}),Da(e,1)}},gl=function(e){if(e.tag===13){var t=fn(e,134217728);if(t!==null){var o=gt();Gt(t,e,134217728,o)}Da(e,134217728)}},jc=function(e){if(e.tag===13){var t=Tn(e),o=fn(e,t);if(o!==null){var a=gt();Gt(o,e,t,a)}Da(e,t)}},Bc=function(){return Fe},Wc=function(e,t){var o=Fe;try{return Fe=e,t()}finally{Fe=o}},al=function(e,t,o){switch(t){case"input":if(el(e,o),t=o.name,o.type==="radio"&&t!=null){for(o=e;o.parentNode;)o=o.parentNode;for(o=o.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<o.length;t++){var a=o[t];if(a!==e&&a.form===e.form){var c=Io(a);if(!c)throw Error(r(90));fc(a),el(a,c)}}}break;case"textarea":yc(e,o);break;case"select":t=o.value,t!=null&&dr(e,!!o.multiple,t,!1)}},kc=Pa,Rc=$n;var h0={usingClientEntryPoint:!1,Events:[vi,Cr,Io,Sc,bc,Pa]},Ti={findFiberByHostInstance:Qn,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},m0={bundleType:Ti.bundleType,version:Ti.version,rendererPackageName:Ti.rendererPackageName,rendererConfig:Ti.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:B.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return e=Lc(e),e===null?null:e.stateNode},findFiberByHostInstance:Ti.findFiberByHostInstance||f0,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var fs=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!fs.isDisabled&&fs.supportsFiber)try{ao=fs.inject(m0),Xt=fs}catch{}}return xt.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=h0,xt.createPortal=function(e,t){var o=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!Qa(t))throw Error(r(200));return d0(e,t,null,o)},xt.createRoot=function(e,t){if(!Qa(e))throw Error(r(299));var o=!1,a="",c=op;return t!=null&&(t.unstable_strictMode===!0&&(o=!0),t.identifierPrefix!==void 0&&(a=t.identifierPrefix),t.onRecoverableError!==void 0&&(c=t.onRecoverableError)),t=Wa(e,1,!1,null,null,o,!1,a,c),e[an]=t.current,mi(e.nodeType===8?e.parentNode:e),new Ka(t)},xt.findDOMNode=function(e){if(e==null)return null;if(e.nodeType===1)return e;var t=e._reactInternals;if(t===void 0)throw typeof e.render=="function"?Error(r(188)):(e=Object.keys(e).join(","),Error(r(268,e)));return e=Lc(t),e=e===null?null:e.stateNode,e},xt.flushSync=function(e){return $n(e)},xt.hydrate=function(e,t,o){if(!cs(t))throw Error(r(200));return ds(null,e,t,!0,o)},xt.hydrateRoot=function(e,t,o){if(!Qa(e))throw Error(r(405));var a=o!=null&&o.hydratedSources||null,c=!1,f="",g=op;if(o!=null&&(o.unstable_strictMode===!0&&(c=!0),o.identifierPrefix!==void 0&&(f=o.identifierPrefix),o.onRecoverableError!==void 0&&(g=o.onRecoverableError)),t=rp(t,null,e,1,o??null,c,!1,f,g),e[an]=t.current,mi(e),a)for(e=0;e<a.length;e++)o=a[e],c=o._getVersion,c=c(o._source),t.mutableSourceEagerHydrationData==null?t.mutableSourceEagerHydrationData=[o,c]:t.mutableSourceEagerHydrationData.push(o,c);return new us(t)},xt.render=function(e,t,o){if(!cs(t))throw Error(r(200));return ds(null,e,t,!1,o)},xt.unmountComponentAtNode=function(e){if(!cs(e))throw Error(r(40));return e._reactRootContainer?($n(function(){ds(null,null,e,!1,function(){e._reactRootContainer=null,e[an]=null})}),!0):!1},xt.unstable_batchedUpdates=Pa,xt.unstable_renderSubtreeIntoContainer=function(e,t,o,a){if(!cs(o))throw Error(r(200));if(e==null||e._reactInternals===void 0)throw Error(r(38));return ds(e,t,o,!1,a)},xt.version="18.3.1-next-f1338f8080-20240426",xt}var hp;function Ph(){if(hp)return Za.exports;hp=1;function i(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(i)}catch(n){console.error(n)}}return i(),Za.exports=S0(),Za.exports}var mp;function b0(){if(mp)return ps;mp=1;var i=Ph();return ps.createRoot=i.createRoot,ps.hydrateRoot=i.hydrateRoot,ps}var k0=b0();const R0="data:image/svg+xml,%3c?xml%20version='1.0'%20encoding='UTF-8'?%3e%3csvg%20id='Capa_1'%20xmlns='http://www.w3.org/2000/svg'%20width='992.1'%20height='992.1'%20version='1.1'%20viewBox='0%200%20992.1%20992.1'%3e%3c!--%20Generator:%20Adobe%20Illustrator%2029.1.0,%20SVG%20Export%20Plug-In%20.%20SVG%20Version:%202.1.0%20Build%20142)%20--%3e%3cdefs%3e%3cstyle%3e%20.st0%20{%20fill:%20%23fff;%20}%20.st0,%20.st1%20{%20fill-rule:%20evenodd;%20}%20.st1%20{%20fill:%20%2300d5b9;%20}%20%3c/style%3e%3c/defs%3e%3cpath%20d='M496,4.5C224.6,4.5,4.5,224.6,4.5,496.1s220.1,491.5,491.5,491.5,491.5-220.1,491.5-491.5S767.5,4.5,496,4.5ZM440.1,195.5h130.2s102.9,262.7,102.9,262.7c-17.2-1.9-34.7-2.9-52.5-2.9-25.9,0-51.3,2.1-76.1,6.2l-39.2-100.2-48.3,123.4c-66,24.6-125.4,63.6-174.5,113.4l157.4-402.6ZM620.8,621.5c-101.6,0-192.2,48.7-251.2,124.7h-143c73.3-148,222.3-249.4,394.2-249.4s47,1.9,69.7,5.6l57,145.8c-38.9-17.2-81.7-26.8-126.7-26.8Z'/%3e%3cpath%20class='st0'%20d='M570.4,195.5l102.9,262.7c-17.2-1.9-34.7-2.9-52.5-2.9-25.9,0-51.3,2.1-76.1,6.2l-39.2-100.2-48.3,123.4c-66,24.6-125.4,63.6-174.5,113.4l157.4-402.6h130.2Z'/%3e%3cpath%20class='st1'%20d='M620.8,496.8c23.7,0,47,1.9,69.7,5.6l57,145.8c-38.9-17.2-81.7-26.8-126.7-26.8-101.6,0-192.2,48.7-251.2,124.7h-143c73.3-148,222.3-249.4,394.2-249.4Z'/%3e%3c/svg%3e",I0=()=>M.jsx("header",{className:"bg-white shadow-sm",children:M.jsxs("div",{className:"container mx-auto py-4 px-4 flex justify-between items-center",children:[M.jsxs("div",{className:"flex items-center",children:[M.jsx("div",{className:"h-10 w-10 rounded-full flex items-center justify-center",children:M.jsx("img",{src:R0,alt:"Logo",className:"h-10 w-10"})}),M.jsx("h1",{className:"ml-2 text-xl font-semibold text-ap-neutral_darkest",children:"Live demo"})]}),M.jsx("nav",{children:M.jsxs("ul",{className:"flex space-x-4",children:[M.jsx("li",{children:M.jsx("a",{href:"https://business-support.astropay.com/hc/en-us",target:"_blank",rel:"noopener noreferrer",className:"text-sm text-gray-600 hover:text-ap-primary_base transition-colors",children:"Help center"})}),M.jsx("li",{children:M.jsx("a",{href:"https://developers.astropay.com",target:"_blank",rel:"noopener noreferrer",className:"text-sm text-gray-600 hover:text-ap-primary_base transition-colors",children:"Documentation"})})]})})]})});function Uh(i,n){return function(){return i.apply(n,arguments)}}const{toString:N0}=Object.prototype,{getPrototypeOf:Ju}=Object,js=(i=>n=>{const r=N0.call(n);return i[r]||(i[r]=r.slice(8,-1).toLowerCase())})(Object.create(null)),Ht=i=>(i=i.toLowerCase(),n=>js(n)===i),Bs=i=>n=>typeof n===i,{isArray:Dr}=Array,Di=Bs("undefined");function M0(i){return i!==null&&!Di(i)&&i.constructor!==null&&!Di(i.constructor)&&Tt(i.constructor.isBuffer)&&i.constructor.isBuffer(i)}const zh=Ht("ArrayBuffer");function L0(i){let n;return typeof ArrayBuffer<"u"&&ArrayBuffer.isView?n=ArrayBuffer.isView(i):n=i&&i.buffer&&zh(i.buffer),n}const T0=Bs("string"),Tt=Bs("function"),qh=Bs("number"),Ws=i=>i!==null&&typeof i=="object",V0=i=>i===!0||i===!1,vs=i=>{if(js(i)!=="object")return!1;const n=Ju(i);return(n===null||n===Object.prototype||Object.getPrototypeOf(n)===null)&&!(Symbol.toStringTag in i)&&!(Symbol.iterator in i)},F0=Ht("Date"),O0=Ht("File"),P0=Ht("Blob"),U0=Ht("FileList"),z0=i=>Ws(i)&&Tt(i.pipe),q0=i=>{let n;return i&&(typeof FormData=="function"&&i instanceof FormData||Tt(i.append)&&((n=js(i))==="formdata"||n==="object"&&Tt(i.toString)&&i.toString()==="[object FormData]"))},j0=Ht("URLSearchParams"),[B0,W0,D0,K0]=["ReadableStream","Request","Response","Headers"].map(Ht),Q0=i=>i.trim?i.trim():i.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,"");function _i(i,n,{allOwnKeys:r=!1}={}){if(i===null||typeof i>"u")return;let s,l;if(typeof i!="object"&&(i=[i]),Dr(i))for(s=0,l=i.length;s<l;s++)n.call(null,i[s],s,i);else{const u=r?Object.getOwnPropertyNames(i):Object.keys(i),d=u.length;let p;for(s=0;s<d;s++)p=u[s],n.call(null,i[p],p,i)}}function jh(i,n){n=n.toLowerCase();const r=Object.keys(i);let s=r.length,l;for(;s-- >0;)if(l=r[s],n===l.toLowerCase())return l;return null}const or=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:global,Bh=i=>!Di(i)&&i!==or;function Mu(){const{caseless:i}=Bh(this)&&this||{},n={},r=(s,l)=>{const u=i&&jh(n,l)||l;vs(n[u])&&vs(s)?n[u]=Mu(n[u],s):vs(s)?n[u]=Mu({},s):Dr(s)?n[u]=s.slice():n[u]=s};for(let s=0,l=arguments.length;s<l;s++)arguments[s]&&_i(arguments[s],r);return n}const Y0=(i,n,r,{allOwnKeys:s}={})=>(_i(n,(l,u)=>{r&&Tt(l)?i[u]=Uh(l,r):i[u]=l},{allOwnKeys:s}),i),G0=i=>(i.charCodeAt(0)===65279&&(i=i.slice(1)),i),Z0=(i,n,r,s)=>{i.prototype=Object.create(n.prototype,s),i.prototype.constructor=i,Object.defineProperty(i,"super",{value:n.prototype}),r&&Object.assign(i.prototype,r)},J0=(i,n,r,s)=>{let l,u,d;const p={};if(n=n||{},i==null)return n;do{for(l=Object.getOwnPropertyNames(i),u=l.length;u-- >0;)d=l[u],(!s||s(d,i,n))&&!p[d]&&(n[d]=i[d],p[d]=!0);i=r!==!1&&Ju(i)}while(i&&(!r||r(i,n))&&i!==Object.prototype);return n},H0=(i,n,r)=>{i=String(i),(r===void 0||r>i.length)&&(r=i.length),r-=n.length;const s=i.indexOf(n,r);return s!==-1&&s===r},X0=i=>{if(!i)return null;if(Dr(i))return i;let n=i.length;if(!qh(n))return null;const r=new Array(n);for(;n-- >0;)r[n]=i[n];return r},_0=(i=>n=>i&&n instanceof i)(typeof Uint8Array<"u"&&Ju(Uint8Array)),$0=(i,n)=>{const s=(i&&i[Symbol.iterator]).call(i);let l;for(;(l=s.next())&&!l.done;){const u=l.value;n.call(i,u[0],u[1])}},ey=(i,n)=>{let r;const s=[];for(;(r=i.exec(n))!==null;)s.push(r);return s},ty=Ht("HTMLFormElement"),ny=i=>i.toLowerCase().replace(/[-_\s]([a-z\d])(\w*)/g,function(r,s,l){return s.toUpperCase()+l}),gp=(({hasOwnProperty:i})=>(n,r)=>i.call(n,r))(Object.prototype),ry=Ht("RegExp"),Wh=(i,n)=>{const r=Object.getOwnPropertyDescriptors(i),s={};_i(r,(l,u)=>{let d;(d=n(l,u,i))!==!1&&(s[u]=d||l)}),Object.defineProperties(i,s)},iy=i=>{Wh(i,(n,r)=>{if(Tt(i)&&["arguments","caller","callee"].indexOf(r)!==-1)return!1;const s=i[r];if(Tt(s)){if(n.enumerable=!1,"writable"in n){n.writable=!1;return}n.set||(n.set=()=>{throw Error("Can not rewrite read-only method '"+r+"'")})}})},oy=(i,n)=>{const r={},s=l=>{l.forEach(u=>{r[u]=!0})};return Dr(i)?s(i):s(String(i).split(n)),r},sy=()=>{},ly=(i,n)=>i!=null&&Number.isFinite(i=+i)?i:n;function ay(i){return!!(i&&Tt(i.append)&&i[Symbol.toStringTag]==="FormData"&&i[Symbol.iterator])}const uy=i=>{const n=new Array(10),r=(s,l)=>{if(Ws(s)){if(n.indexOf(s)>=0)return;if(!("toJSON"in s)){n[l]=s;const u=Dr(s)?[]:{};return _i(s,(d,p)=>{const h=r(d,l+1);!Di(h)&&(u[p]=h)}),n[l]=void 0,u}}return s};return r(i,0)},cy=Ht("AsyncFunction"),dy=i=>i&&(Ws(i)||Tt(i))&&Tt(i.then)&&Tt(i.catch),Dh=((i,n)=>i?setImmediate:n?((r,s)=>(or.addEventListener("message",({source:l,data:u})=>{l===or&&u===r&&s.length&&s.shift()()},!1),l=>{s.push(l),or.postMessage(r,"*")}))(`axios@${Math.random()}`,[]):r=>setTimeout(r))(typeof setImmediate=="function",Tt(or.postMessage)),fy=typeof queueMicrotask<"u"?queueMicrotask.bind(or):typeof process<"u"&&process.nextTick||Dh,F={isArray:Dr,isArrayBuffer:zh,isBuffer:M0,isFormData:q0,isArrayBufferView:L0,isString:T0,isNumber:qh,isBoolean:V0,isObject:Ws,isPlainObject:vs,isReadableStream:B0,isRequest:W0,isResponse:D0,isHeaders:K0,isUndefined:Di,isDate:F0,isFile:O0,isBlob:P0,isRegExp:ry,isFunction:Tt,isStream:z0,isURLSearchParams:j0,isTypedArray:_0,isFileList:U0,forEach:_i,merge:Mu,extend:Y0,trim:Q0,stripBOM:G0,inherits:Z0,toFlatObject:J0,kindOf:js,kindOfTest:Ht,endsWith:H0,toArray:X0,forEachEntry:$0,matchAll:ey,isHTMLForm:ty,hasOwnProperty:gp,hasOwnProp:gp,reduceDescriptors:Wh,freezeMethods:iy,toObjectSet:oy,toCamelCase:ny,noop:sy,toFiniteNumber:ly,findKey:jh,global:or,isContextDefined:Bh,isSpecCompliantForm:ay,toJSONObject:uy,isAsyncFn:cy,isThenable:dy,setImmediate:Dh,asap:fy};function ve(i,n,r,s,l){Error.call(this),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=new Error().stack,this.message=i,this.name="AxiosError",n&&(this.code=n),r&&(this.config=r),s&&(this.request=s),l&&(this.response=l,this.status=l.status?l.status:null)}F.inherits(ve,Error,{toJSON:function(){return{message:this.message,name:this.name,description:this.description,number:this.number,fileName:this.fileName,lineNumber:this.lineNumber,columnNumber:this.columnNumber,stack:this.stack,config:F.toJSONObject(this.config),code:this.code,status:this.status}}});const Kh=ve.prototype,Qh={};["ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","ECONNABORTED","ETIMEDOUT","ERR_NETWORK","ERR_FR_TOO_MANY_REDIRECTS","ERR_DEPRECATED","ERR_BAD_RESPONSE","ERR_BAD_REQUEST","ERR_CANCELED","ERR_NOT_SUPPORT","ERR_INVALID_URL"].forEach(i=>{Qh[i]={value:i}});Object.defineProperties(ve,Qh);Object.defineProperty(Kh,"isAxiosError",{value:!0});ve.from=(i,n,r,s,l,u)=>{const d=Object.create(Kh);return F.toFlatObject(i,d,function(h){return h!==Error.prototype},p=>p!=="isAxiosError"),ve.call(d,i.message,n,r,s,l),d.cause=i,d.name=i.name,u&&Object.assign(d,u),d};const py=null;function Lu(i){return F.isPlainObject(i)||F.isArray(i)}function Yh(i){return F.endsWith(i,"[]")?i.slice(0,-2):i}function yp(i,n,r){return i?i.concat(n).map(function(l,u){return l=Yh(l),!r&&u?"["+l+"]":l}).join(r?".":""):n}function hy(i){return F.isArray(i)&&!i.some(Lu)}const my=F.toFlatObject(F,{},null,function(n){return/^is[A-Z]/.test(n)});function Ds(i,n,r){if(!F.isObject(i))throw new TypeError("target must be an object");n=n||new FormData,r=F.toFlatObject(r,{metaTokens:!0,dots:!1,indexes:!1},!1,function(x,k){return!F.isUndefined(k[x])});const s=r.metaTokens,l=r.visitor||y,u=r.dots,d=r.indexes,h=(r.Blob||typeof Blob<"u"&&Blob)&&F.isSpecCompliantForm(n);if(!F.isFunction(l))throw new TypeError("visitor must be a function");function m(C){if(C===null)return"";if(F.isDate(C))return C.toISOString();if(!h&&F.isBlob(C))throw new ve("Blob is not supported. Use a Buffer instead.");return F.isArrayBuffer(C)||F.isTypedArray(C)?h&&typeof Blob=="function"?new Blob([C]):Buffer.from(C):C}function y(C,x,k){let V=C;if(C&&!k&&typeof C=="object"){if(F.endsWith(x,"{}"))x=s?x:x.slice(0,-2),C=JSON.stringify(C);else if(F.isArray(C)&&hy(C)||(F.isFileList(C)||F.endsWith(x,"[]"))&&(V=F.toArray(C)))return x=Yh(x),V.forEach(function(U,B){!(F.isUndefined(U)||U===null)&&n.append(d===!0?yp([x],B,u):d===null?x:x+"[]",m(U))}),!1}return Lu(C)?!0:(n.append(yp(k,x,u),m(C)),!1)}const v=[],A=Object.assign(my,{defaultVisitor:y,convertValue:m,isVisitable:Lu});function R(C,x){if(!F.isUndefined(C)){if(v.indexOf(C)!==-1)throw Error("Circular reference detected in "+x.join("."));v.push(C),F.forEach(C,function(V,P){(!(F.isUndefined(V)||V===null)&&l.call(n,V,F.isString(P)?P.trim():P,x,A))===!0&&R(V,x?x.concat(P):[P])}),v.pop()}}if(!F.isObject(i))throw new TypeError("data must be an object");return R(i),n}function vp(i){const n={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+","%00":"\0"};return encodeURIComponent(i).replace(/[!'()~]|%20|%00/g,function(s){return n[s]})}function Hu(i,n){this._pairs=[],i&&Ds(i,this,n)}const Gh=Hu.prototype;Gh.append=function(n,r){this._pairs.push([n,r])};Gh.toString=function(n){const r=n?function(s){return n.call(this,s,vp)}:vp;return this._pairs.map(function(l){return r(l[0])+"="+r(l[1])},"").join("&")};function gy(i){return encodeURIComponent(i).replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",").replace(/%20/g,"+").replace(/%5B/gi,"[").replace(/%5D/gi,"]")}function Zh(i,n,r){if(!n)return i;const s=r&&r.encode||gy;F.isFunction(r)&&(r={serialize:r});const l=r&&r.serialize;let u;if(l?u=l(n,r):u=F.isURLSearchParams(n)?n.toString():new Hu(n,r).toString(s),u){const d=i.indexOf("#");d!==-1&&(i=i.slice(0,d)),i+=(i.indexOf("?")===-1?"?":"&")+u}return i}class Ap{constructor(){this.handlers=[]}use(n,r,s){return this.handlers.push({fulfilled:n,rejected:r,synchronous:s?s.synchronous:!1,runWhen:s?s.runWhen:null}),this.handlers.length-1}eject(n){this.handlers[n]&&(this.handlers[n]=null)}clear(){this.handlers&&(this.handlers=[])}forEach(n){F.forEach(this.handlers,function(s){s!==null&&n(s)})}}const Jh={silentJSONParsing:!0,forcedJSONParsing:!0,clarifyTimeoutError:!1},yy=typeof URLSearchParams<"u"?URLSearchParams:Hu,vy=typeof FormData<"u"?FormData:null,Ay=typeof Blob<"u"?Blob:null,wy={isBrowser:!0,classes:{URLSearchParams:yy,FormData:vy,Blob:Ay},protocols:["http","https","file","blob","url","data"]},Xu=typeof window<"u"&&typeof document<"u",Tu=typeof navigator=="object"&&navigator||void 0,Cy=Xu&&(!Tu||["ReactNative","NativeScript","NS"].indexOf(Tu.product)<0),Ey=typeof WorkerGlobalScope<"u"&&self instanceof WorkerGlobalScope&&typeof self.importScripts=="function",xy=Xu&&window.location.href||"http://localhost",Sy=Object.freeze(Object.defineProperty({__proto__:null,hasBrowserEnv:Xu,hasStandardBrowserEnv:Cy,hasStandardBrowserWebWorkerEnv:Ey,navigator:Tu,origin:xy},Symbol.toStringTag,{value:"Module"})),ht={...Sy,...wy};function by(i,n){return Ds(i,new ht.classes.URLSearchParams,Object.assign({visitor:function(r,s,l,u){return ht.isNode&&F.isBuffer(r)?(this.append(s,r.toString("base64")),!1):u.defaultVisitor.apply(this,arguments)}},n))}function ky(i){return F.matchAll(/\w+|\[(\w*)]/g,i).map(n=>n[0]==="[]"?"":n[1]||n[0])}function Ry(i){const n={},r=Object.keys(i);let s;const l=r.length;let u;for(s=0;s<l;s++)u=r[s],n[u]=i[u];return n}function Hh(i){function n(r,s,l,u){let d=r[u++];if(d==="__proto__")return!0;const p=Number.isFinite(+d),h=u>=r.length;return d=!d&&F.isArray(l)?l.length:d,h?(F.hasOwnProp(l,d)?l[d]=[l[d],s]:l[d]=s,!p):((!l[d]||!F.isObject(l[d]))&&(l[d]=[]),n(r,s,l[d],u)&&F.isArray(l[d])&&(l[d]=Ry(l[d])),!p)}if(F.isFormData(i)&&F.isFunction(i.entries)){const r={};return F.forEachEntry(i,(s,l)=>{n(ky(s),l,r,0)}),r}return null}function Iy(i,n,r){if(F.isString(i))try{return(n||JSON.parse)(i),F.trim(i)}catch(s){if(s.name!=="SyntaxError")throw s}return(r||JSON.stringify)(i)}const $i={transitional:Jh,adapter:["xhr","http","fetch"],transformRequest:[function(n,r){const s=r.getContentType()||"",l=s.indexOf("application/json")>-1,u=F.isObject(n);if(u&&F.isHTMLForm(n)&&(n=new FormData(n)),F.isFormData(n))return l?JSON.stringify(Hh(n)):n;if(F.isArrayBuffer(n)||F.isBuffer(n)||F.isStream(n)||F.isFile(n)||F.isBlob(n)||F.isReadableStream(n))return n;if(F.isArrayBufferView(n))return n.buffer;if(F.isURLSearchParams(n))return r.setContentType("application/x-www-form-urlencoded;charset=utf-8",!1),n.toString();let p;if(u){if(s.indexOf("application/x-www-form-urlencoded")>-1)return by(n,this.formSerializer).toString();if((p=F.isFileList(n))||s.indexOf("multipart/form-data")>-1){const h=this.env&&this.env.FormData;return Ds(p?{"files[]":n}:n,h&&new h,this.formSerializer)}}return u||l?(r.setContentType("application/json",!1),Iy(n)):n}],transformResponse:[function(n){const r=this.transitional||$i.transitional,s=r&&r.forcedJSONParsing,l=this.responseType==="json";if(F.isResponse(n)||F.isReadableStream(n))return n;if(n&&F.isString(n)&&(s&&!this.responseType||l)){const d=!(r&&r.silentJSONParsing)&&l;try{return JSON.parse(n)}catch(p){if(d)throw p.name==="SyntaxError"?ve.from(p,ve.ERR_BAD_RESPONSE,this,null,this.response):p}}return n}],timeout:0,xsrfCookieName:"XSRF-TOKEN",xsrfHeaderName:"X-XSRF-TOKEN",maxContentLength:-1,maxBodyLength:-1,env:{FormData:ht.classes.FormData,Blob:ht.classes.Blob},validateStatus:function(n){return n>=200&&n<300},headers:{common:{Accept:"application/json, text/plain, */*","Content-Type":void 0}}};F.forEach(["delete","get","head","post","put","patch"],i=>{$i.headers[i]={}});const Ny=F.toObjectSet(["age","authorization","content-length","content-type","etag","expires","from","host","if-modified-since","if-unmodified-since","last-modified","location","max-forwards","proxy-authorization","referer","retry-after","user-agent"]),My=i=>{const n={};let r,s,l;return i&&i.split(`
`).forEach(function(d){l=d.indexOf(":"),r=d.substring(0,l).trim().toLowerCase(),s=d.substring(l+1).trim(),!(!r||n[r]&&Ny[r])&&(r==="set-cookie"?n[r]?n[r].push(s):n[r]=[s]:n[r]=n[r]?n[r]+", "+s:s)}),n},wp=Symbol("internals");function Fi(i){return i&&String(i).trim().toLowerCase()}function As(i){return i===!1||i==null?i:F.isArray(i)?i.map(As):String(i)}function Ly(i){const n=Object.create(null),r=/([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;let s;for(;s=r.exec(i);)n[s[1]]=s[2];return n}const Ty=i=>/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(i.trim());function Xa(i,n,r,s,l){if(F.isFunction(s))return s.call(this,n,r);if(l&&(n=r),!!F.isString(n)){if(F.isString(s))return n.indexOf(s)!==-1;if(F.isRegExp(s))return s.test(n)}}function Vy(i){return i.trim().toLowerCase().replace(/([a-z\d])(\w*)/g,(n,r,s)=>r.toUpperCase()+s)}function Fy(i,n){const r=F.toCamelCase(" "+n);["get","set","has"].forEach(s=>{Object.defineProperty(i,s+r,{value:function(l,u,d){return this[s].call(this,n,l,u,d)},configurable:!0})})}let St=class{constructor(n){n&&this.set(n)}set(n,r,s){const l=this;function u(p,h,m){const y=Fi(h);if(!y)throw new Error("header name must be a non-empty string");const v=F.findKey(l,y);(!v||l[v]===void 0||m===!0||m===void 0&&l[v]!==!1)&&(l[v||h]=As(p))}const d=(p,h)=>F.forEach(p,(m,y)=>u(m,y,h));if(F.isPlainObject(n)||n instanceof this.constructor)d(n,r);else if(F.isString(n)&&(n=n.trim())&&!Ty(n))d(My(n),r);else if(F.isHeaders(n))for(const[p,h]of n.entries())u(h,p,s);else n!=null&&u(r,n,s);return this}get(n,r){if(n=Fi(n),n){const s=F.findKey(this,n);if(s){const l=this[s];if(!r)return l;if(r===!0)return Ly(l);if(F.isFunction(r))return r.call(this,l,s);if(F.isRegExp(r))return r.exec(l);throw new TypeError("parser must be boolean|regexp|function")}}}has(n,r){if(n=Fi(n),n){const s=F.findKey(this,n);return!!(s&&this[s]!==void 0&&(!r||Xa(this,this[s],s,r)))}return!1}delete(n,r){const s=this;let l=!1;function u(d){if(d=Fi(d),d){const p=F.findKey(s,d);p&&(!r||Xa(s,s[p],p,r))&&(delete s[p],l=!0)}}return F.isArray(n)?n.forEach(u):u(n),l}clear(n){const r=Object.keys(this);let s=r.length,l=!1;for(;s--;){const u=r[s];(!n||Xa(this,this[u],u,n,!0))&&(delete this[u],l=!0)}return l}normalize(n){const r=this,s={};return F.forEach(this,(l,u)=>{const d=F.findKey(s,u);if(d){r[d]=As(l),delete r[u];return}const p=n?Vy(u):String(u).trim();p!==u&&delete r[u],r[p]=As(l),s[p]=!0}),this}concat(...n){return this.constructor.concat(this,...n)}toJSON(n){const r=Object.create(null);return F.forEach(this,(s,l)=>{s!=null&&s!==!1&&(r[l]=n&&F.isArray(s)?s.join(", "):s)}),r}[Symbol.iterator](){return Object.entries(this.toJSON())[Symbol.iterator]()}toString(){return Object.entries(this.toJSON()).map(([n,r])=>n+": "+r).join(`
`)}get[Symbol.toStringTag](){return"AxiosHeaders"}static from(n){return n instanceof this?n:new this(n)}static concat(n,...r){const s=new this(n);return r.forEach(l=>s.set(l)),s}static accessor(n){const s=(this[wp]=this[wp]={accessors:{}}).accessors,l=this.prototype;function u(d){const p=Fi(d);s[p]||(Fy(l,d),s[p]=!0)}return F.isArray(n)?n.forEach(u):u(n),this}};St.accessor(["Content-Type","Content-Length","Accept","Accept-Encoding","User-Agent","Authorization"]);F.reduceDescriptors(St.prototype,({value:i},n)=>{let r=n[0].toUpperCase()+n.slice(1);return{get:()=>i,set(s){this[r]=s}}});F.freezeMethods(St);function _a(i,n){const r=this||$i,s=n||r,l=St.from(s.headers);let u=s.data;return F.forEach(i,function(p){u=p.call(r,u,l.normalize(),n?n.status:void 0)}),l.normalize(),u}function Xh(i){return!!(i&&i.__CANCEL__)}function Kr(i,n,r){ve.call(this,i??"canceled",ve.ERR_CANCELED,n,r),this.name="CanceledError"}F.inherits(Kr,ve,{__CANCEL__:!0});function _h(i,n,r){const s=r.config.validateStatus;!r.status||!s||s(r.status)?i(r):n(new ve("Request failed with status code "+r.status,[ve.ERR_BAD_REQUEST,ve.ERR_BAD_RESPONSE][Math.floor(r.status/100)-4],r.config,r.request,r))}function Oy(i){const n=/^([-+\w]{1,25})(:?\/\/|:)/.exec(i);return n&&n[1]||""}function Py(i,n){i=i||10;const r=new Array(i),s=new Array(i);let l=0,u=0,d;return n=n!==void 0?n:1e3,function(h){const m=Date.now(),y=s[u];d||(d=m),r[l]=h,s[l]=m;let v=u,A=0;for(;v!==l;)A+=r[v++],v=v%i;if(l=(l+1)%i,l===u&&(u=(u+1)%i),m-d<n)return;const R=y&&m-y;return R?Math.round(A*1e3/R):void 0}}function Uy(i,n){let r=0,s=1e3/n,l,u;const d=(m,y=Date.now())=>{r=y,l=null,u&&(clearTimeout(u),u=null),i.apply(null,m)};return[(...m)=>{const y=Date.now(),v=y-r;v>=s?d(m,y):(l=m,u||(u=setTimeout(()=>{u=null,d(l)},s-v)))},()=>l&&d(l)]}const bs=(i,n,r=3)=>{let s=0;const l=Py(50,250);return Uy(u=>{const d=u.loaded,p=u.lengthComputable?u.total:void 0,h=d-s,m=l(h),y=d<=p;s=d;const v={loaded:d,total:p,progress:p?d/p:void 0,bytes:h,rate:m||void 0,estimated:m&&p&&y?(p-d)/m:void 0,event:u,lengthComputable:p!=null,[n?"download":"upload"]:!0};i(v)},r)},Cp=(i,n)=>{const r=i!=null;return[s=>n[0]({lengthComputable:r,total:i,loaded:s}),n[1]]},Ep=i=>(...n)=>F.asap(()=>i(...n)),zy=ht.hasStandardBrowserEnv?((i,n)=>r=>(r=new URL(r,ht.origin),i.protocol===r.protocol&&i.host===r.host&&(n||i.port===r.port)))(new URL(ht.origin),ht.navigator&&/(msie|trident)/i.test(ht.navigator.userAgent)):()=>!0,qy=ht.hasStandardBrowserEnv?{write(i,n,r,s,l,u){const d=[i+"="+encodeURIComponent(n)];F.isNumber(r)&&d.push("expires="+new Date(r).toGMTString()),F.isString(s)&&d.push("path="+s),F.isString(l)&&d.push("domain="+l),u===!0&&d.push("secure"),document.cookie=d.join("; ")},read(i){const n=document.cookie.match(new RegExp("(^|;\\s*)("+i+")=([^;]*)"));return n?decodeURIComponent(n[3]):null},remove(i){this.write(i,"",Date.now()-864e5)}}:{write(){},read(){return null},remove(){}};function jy(i){return/^([a-z][a-z\d+\-.]*:)?\/\//i.test(i)}function By(i,n){return n?i.replace(/\/?\/$/,"")+"/"+n.replace(/^\/+/,""):i}function $h(i,n,r){let s=!jy(n);return i&&(s||r==!1)?By(i,n):n}const xp=i=>i instanceof St?{...i}:i;function lr(i,n){n=n||{};const r={};function s(m,y,v,A){return F.isPlainObject(m)&&F.isPlainObject(y)?F.merge.call({caseless:A},m,y):F.isPlainObject(y)?F.merge({},y):F.isArray(y)?y.slice():y}function l(m,y,v,A){if(F.isUndefined(y)){if(!F.isUndefined(m))return s(void 0,m,v,A)}else return s(m,y,v,A)}function u(m,y){if(!F.isUndefined(y))return s(void 0,y)}function d(m,y){if(F.isUndefined(y)){if(!F.isUndefined(m))return s(void 0,m)}else return s(void 0,y)}function p(m,y,v){if(v in n)return s(m,y);if(v in i)return s(void 0,m)}const h={url:u,method:u,data:u,baseURL:d,transformRequest:d,transformResponse:d,paramsSerializer:d,timeout:d,timeoutMessage:d,withCredentials:d,withXSRFToken:d,adapter:d,responseType:d,xsrfCookieName:d,xsrfHeaderName:d,onUploadProgress:d,onDownloadProgress:d,decompress:d,maxContentLength:d,maxBodyLength:d,beforeRedirect:d,transport:d,httpAgent:d,httpsAgent:d,cancelToken:d,socketPath:d,responseEncoding:d,validateStatus:p,headers:(m,y,v)=>l(xp(m),xp(y),v,!0)};return F.forEach(Object.keys(Object.assign({},i,n)),function(y){const v=h[y]||l,A=v(i[y],n[y],y);F.isUndefined(A)&&v!==p||(r[y]=A)}),r}const em=i=>{const n=lr({},i);let{data:r,withXSRFToken:s,xsrfHeaderName:l,xsrfCookieName:u,headers:d,auth:p}=n;n.headers=d=St.from(d),n.url=Zh($h(n.baseURL,n.url,n.allowAbsoluteUrls),i.params,i.paramsSerializer),p&&d.set("Authorization","Basic "+btoa((p.username||"")+":"+(p.password?unescape(encodeURIComponent(p.password)):"")));let h;if(F.isFormData(r)){if(ht.hasStandardBrowserEnv||ht.hasStandardBrowserWebWorkerEnv)d.setContentType(void 0);else if((h=d.getContentType())!==!1){const[m,...y]=h?h.split(";").map(v=>v.trim()).filter(Boolean):[];d.setContentType([m||"multipart/form-data",...y].join("; "))}}if(ht.hasStandardBrowserEnv&&(s&&F.isFunction(s)&&(s=s(n)),s||s!==!1&&zy(n.url))){const m=l&&u&&qy.read(u);m&&d.set(l,m)}return n},Wy=typeof XMLHttpRequest<"u",Dy=Wy&&function(i){return new Promise(function(r,s){const l=em(i);let u=l.data;const d=St.from(l.headers).normalize();let{responseType:p,onUploadProgress:h,onDownloadProgress:m}=l,y,v,A,R,C;function x(){R&&R(),C&&C(),l.cancelToken&&l.cancelToken.unsubscribe(y),l.signal&&l.signal.removeEventListener("abort",y)}let k=new XMLHttpRequest;k.open(l.method.toUpperCase(),l.url,!0),k.timeout=l.timeout;function V(){if(!k)return;const U=St.from("getAllResponseHeaders"in k&&k.getAllResponseHeaders()),ne={data:!p||p==="text"||p==="json"?k.responseText:k.response,status:k.status,statusText:k.statusText,headers:U,config:i,request:k};_h(function(O){r(O),x()},function(O){s(O),x()},ne),k=null}"onloadend"in k?k.onloadend=V:k.onreadystatechange=function(){!k||k.readyState!==4||k.status===0&&!(k.responseURL&&k.responseURL.indexOf("file:")===0)||setTimeout(V)},k.onabort=function(){k&&(s(new ve("Request aborted",ve.ECONNABORTED,i,k)),k=null)},k.onerror=function(){s(new ve("Network Error",ve.ERR_NETWORK,i,k)),k=null},k.ontimeout=function(){let B=l.timeout?"timeout of "+l.timeout+"ms exceeded":"timeout exceeded";const ne=l.transitional||Jh;l.timeoutErrorMessage&&(B=l.timeoutErrorMessage),s(new ve(B,ne.clarifyTimeoutError?ve.ETIMEDOUT:ve.ECONNABORTED,i,k)),k=null},u===void 0&&d.setContentType(null),"setRequestHeader"in k&&F.forEach(d.toJSON(),function(B,ne){k.setRequestHeader(ne,B)}),F.isUndefined(l.withCredentials)||(k.withCredentials=!!l.withCredentials),p&&p!=="json"&&(k.responseType=l.responseType),m&&([A,C]=bs(m,!0),k.addEventListener("progress",A)),h&&k.upload&&([v,R]=bs(h),k.upload.addEventListener("progress",v),k.upload.addEventListener("loadend",R)),(l.cancelToken||l.signal)&&(y=U=>{k&&(s(!U||U.type?new Kr(null,i,k):U),k.abort(),k=null)},l.cancelToken&&l.cancelToken.subscribe(y),l.signal&&(l.signal.aborted?y():l.signal.addEventListener("abort",y)));const P=Oy(l.url);if(P&&ht.protocols.indexOf(P)===-1){s(new ve("Unsupported protocol "+P+":",ve.ERR_BAD_REQUEST,i));return}k.send(u||null)})},Ky=(i,n)=>{const{length:r}=i=i?i.filter(Boolean):[];if(n||r){let s=new AbortController,l;const u=function(m){if(!l){l=!0,p();const y=m instanceof Error?m:this.reason;s.abort(y instanceof ve?y:new Kr(y instanceof Error?y.message:y))}};let d=n&&setTimeout(()=>{d=null,u(new ve(`timeout ${n} of ms exceeded`,ve.ETIMEDOUT))},n);const p=()=>{i&&(d&&clearTimeout(d),d=null,i.forEach(m=>{m.unsubscribe?m.unsubscribe(u):m.removeEventListener("abort",u)}),i=null)};i.forEach(m=>m.addEventListener("abort",u));const{signal:h}=s;return h.unsubscribe=()=>F.asap(p),h}},Qy=function*(i,n){let r=i.byteLength;if(r<n){yield i;return}let s=0,l;for(;s<r;)l=s+n,yield i.slice(s,l),s=l},Yy=async function*(i,n){for await(const r of Gy(i))yield*Qy(r,n)},Gy=async function*(i){if(i[Symbol.asyncIterator]){yield*i;return}const n=i.getReader();try{for(;;){const{done:r,value:s}=await n.read();if(r)break;yield s}}finally{await n.cancel()}},Sp=(i,n,r,s)=>{const l=Yy(i,n);let u=0,d,p=h=>{d||(d=!0,s&&s(h))};return new ReadableStream({async pull(h){try{const{done:m,value:y}=await l.next();if(m){p(),h.close();return}let v=y.byteLength;if(r){let A=u+=v;r(A)}h.enqueue(new Uint8Array(y))}catch(m){throw p(m),m}},cancel(h){return p(h),l.return()}},{highWaterMark:2})},Ks=typeof fetch=="function"&&typeof Request=="function"&&typeof Response=="function",tm=Ks&&typeof ReadableStream=="function",Zy=Ks&&(typeof TextEncoder=="function"?(i=>n=>i.encode(n))(new TextEncoder):async i=>new Uint8Array(await new Response(i).arrayBuffer())),nm=(i,...n)=>{try{return!!i(...n)}catch{return!1}},Jy=tm&&nm(()=>{let i=!1;const n=new Request(ht.origin,{body:new ReadableStream,method:"POST",get duplex(){return i=!0,"half"}}).headers.has("Content-Type");return i&&!n}),bp=64*1024,Vu=tm&&nm(()=>F.isReadableStream(new Response("").body)),ks={stream:Vu&&(i=>i.body)};Ks&&(i=>{["text","arrayBuffer","blob","formData","stream"].forEach(n=>{!ks[n]&&(ks[n]=F.isFunction(i[n])?r=>r[n]():(r,s)=>{throw new ve(`Response type '${n}' is not supported`,ve.ERR_NOT_SUPPORT,s)})})})(new Response);const Hy=async i=>{if(i==null)return 0;if(F.isBlob(i))return i.size;if(F.isSpecCompliantForm(i))return(await new Request(ht.origin,{method:"POST",body:i}).arrayBuffer()).byteLength;if(F.isArrayBufferView(i)||F.isArrayBuffer(i))return i.byteLength;if(F.isURLSearchParams(i)&&(i=i+""),F.isString(i))return(await Zy(i)).byteLength},Xy=async(i,n)=>{const r=F.toFiniteNumber(i.getContentLength());return r??Hy(n)},_y=Ks&&(async i=>{let{url:n,method:r,data:s,signal:l,cancelToken:u,timeout:d,onDownloadProgress:p,onUploadProgress:h,responseType:m,headers:y,withCredentials:v="same-origin",fetchOptions:A}=em(i);m=m?(m+"").toLowerCase():"text";let R=Ky([l,u&&u.toAbortSignal()],d),C;const x=R&&R.unsubscribe&&(()=>{R.unsubscribe()});let k;try{if(h&&Jy&&r!=="get"&&r!=="head"&&(k=await Xy(y,s))!==0){let ne=new Request(n,{method:"POST",body:s,duplex:"half"}),T;if(F.isFormData(s)&&(T=ne.headers.get("content-type"))&&y.setContentType(T),ne.body){const[O,D]=Cp(k,bs(Ep(h)));s=Sp(ne.body,bp,O,D)}}F.isString(v)||(v=v?"include":"omit");const V="credentials"in Request.prototype;C=new Request(n,{...A,signal:R,method:r.toUpperCase(),headers:y.normalize().toJSON(),body:s,duplex:"half",credentials:V?v:void 0});let P=await fetch(C);const U=Vu&&(m==="stream"||m==="response");if(Vu&&(p||U&&x)){const ne={};["status","statusText","headers"].forEach(J=>{ne[J]=P[J]});const T=F.toFiniteNumber(P.headers.get("content-length")),[O,D]=p&&Cp(T,bs(Ep(p),!0))||[];P=new Response(Sp(P.body,bp,O,()=>{D&&D(),x&&x()}),ne)}m=m||"text";let B=await ks[F.findKey(ks,m)||"text"](P,i);return!U&&x&&x(),await new Promise((ne,T)=>{_h(ne,T,{data:B,headers:St.from(P.headers),status:P.status,statusText:P.statusText,config:i,request:C})})}catch(V){throw x&&x(),V&&V.name==="TypeError"&&/fetch/i.test(V.message)?Object.assign(new ve("Network Error",ve.ERR_NETWORK,i,C),{cause:V.cause||V}):ve.from(V,V&&V.code,i,C)}}),Fu={http:py,xhr:Dy,fetch:_y};F.forEach(Fu,(i,n)=>{if(i){try{Object.defineProperty(i,"name",{value:n})}catch{}Object.defineProperty(i,"adapterName",{value:n})}});const kp=i=>`- ${i}`,$y=i=>F.isFunction(i)||i===null||i===!1,rm={getAdapter:i=>{i=F.isArray(i)?i:[i];const{length:n}=i;let r,s;const l={};for(let u=0;u<n;u++){r=i[u];let d;if(s=r,!$y(r)&&(s=Fu[(d=String(r)).toLowerCase()],s===void 0))throw new ve(`Unknown adapter '${d}'`);if(s)break;l[d||"#"+u]=s}if(!s){const u=Object.entries(l).map(([p,h])=>`adapter ${p} `+(h===!1?"is not supported by the environment":"is not available in the build"));let d=n?u.length>1?`since :
`+u.map(kp).join(`
`):" "+kp(u[0]):"as no adapter specified";throw new ve("There is no suitable adapter to dispatch the request "+d,"ERR_NOT_SUPPORT")}return s},adapters:Fu};function $a(i){if(i.cancelToken&&i.cancelToken.throwIfRequested(),i.signal&&i.signal.aborted)throw new Kr(null,i)}function Rp(i){return $a(i),i.headers=St.from(i.headers),i.data=_a.call(i,i.transformRequest),["post","put","patch"].indexOf(i.method)!==-1&&i.headers.setContentType("application/x-www-form-urlencoded",!1),rm.getAdapter(i.adapter||$i.adapter)(i).then(function(s){return $a(i),s.data=_a.call(i,i.transformResponse,s),s.headers=St.from(s.headers),s},function(s){return Xh(s)||($a(i),s&&s.response&&(s.response.data=_a.call(i,i.transformResponse,s.response),s.response.headers=St.from(s.response.headers))),Promise.reject(s)})}const im="1.8.4",Qs={};["object","boolean","number","function","string","symbol"].forEach((i,n)=>{Qs[i]=function(s){return typeof s===i||"a"+(n<1?"n ":" ")+i}});const Ip={};Qs.transitional=function(n,r,s){function l(u,d){return"[Axios v"+im+"] Transitional option '"+u+"'"+d+(s?". "+s:"")}return(u,d,p)=>{if(n===!1)throw new ve(l(d," has been removed"+(r?" in "+r:"")),ve.ERR_DEPRECATED);return r&&!Ip[d]&&(Ip[d]=!0,console.warn(l(d," has been deprecated since v"+r+" and will be removed in the near future"))),n?n(u,d,p):!0}};Qs.spelling=function(n){return(r,s)=>(console.warn(`${s} is likely a misspelling of ${n}`),!0)};function ev(i,n,r){if(typeof i!="object")throw new ve("options must be an object",ve.ERR_BAD_OPTION_VALUE);const s=Object.keys(i);let l=s.length;for(;l-- >0;){const u=s[l],d=n[u];if(d){const p=i[u],h=p===void 0||d(p,u,i);if(h!==!0)throw new ve("option "+u+" must be "+h,ve.ERR_BAD_OPTION_VALUE);continue}if(r!==!0)throw new ve("Unknown option "+u,ve.ERR_BAD_OPTION)}}const ws={assertOptions:ev,validators:Qs},nn=ws.validators;let sr=class{constructor(n){this.defaults=n,this.interceptors={request:new Ap,response:new Ap}}async request(n,r){try{return await this._request(n,r)}catch(s){if(s instanceof Error){let l={};Error.captureStackTrace?Error.captureStackTrace(l):l=new Error;const u=l.stack?l.stack.replace(/^.+\n/,""):"";try{s.stack?u&&!String(s.stack).endsWith(u.replace(/^.+\n.+\n/,""))&&(s.stack+=`
`+u):s.stack=u}catch{}}throw s}}_request(n,r){typeof n=="string"?(r=r||{},r.url=n):r=n||{},r=lr(this.defaults,r);const{transitional:s,paramsSerializer:l,headers:u}=r;s!==void 0&&ws.assertOptions(s,{silentJSONParsing:nn.transitional(nn.boolean),forcedJSONParsing:nn.transitional(nn.boolean),clarifyTimeoutError:nn.transitional(nn.boolean)},!1),l!=null&&(F.isFunction(l)?r.paramsSerializer={serialize:l}:ws.assertOptions(l,{encode:nn.function,serialize:nn.function},!0)),r.allowAbsoluteUrls!==void 0||(this.defaults.allowAbsoluteUrls!==void 0?r.allowAbsoluteUrls=this.defaults.allowAbsoluteUrls:r.allowAbsoluteUrls=!0),ws.assertOptions(r,{baseUrl:nn.spelling("baseURL"),withXsrfToken:nn.spelling("withXSRFToken")},!0),r.method=(r.method||this.defaults.method||"get").toLowerCase();let d=u&&F.merge(u.common,u[r.method]);u&&F.forEach(["delete","get","head","post","put","patch","common"],C=>{delete u[C]}),r.headers=St.concat(d,u);const p=[];let h=!0;this.interceptors.request.forEach(function(x){typeof x.runWhen=="function"&&x.runWhen(r)===!1||(h=h&&x.synchronous,p.unshift(x.fulfilled,x.rejected))});const m=[];this.interceptors.response.forEach(function(x){m.push(x.fulfilled,x.rejected)});let y,v=0,A;if(!h){const C=[Rp.bind(this),void 0];for(C.unshift.apply(C,p),C.push.apply(C,m),A=C.length,y=Promise.resolve(r);v<A;)y=y.then(C[v++],C[v++]);return y}A=p.length;let R=r;for(v=0;v<A;){const C=p[v++],x=p[v++];try{R=C(R)}catch(k){x.call(this,k);break}}try{y=Rp.call(this,R)}catch(C){return Promise.reject(C)}for(v=0,A=m.length;v<A;)y=y.then(m[v++],m[v++]);return y}getUri(n){n=lr(this.defaults,n);const r=$h(n.baseURL,n.url,n.allowAbsoluteUrls);return Zh(r,n.params,n.paramsSerializer)}};F.forEach(["delete","get","head","options"],function(n){sr.prototype[n]=function(r,s){return this.request(lr(s||{},{method:n,url:r,data:(s||{}).data}))}});F.forEach(["post","put","patch"],function(n){function r(s){return function(u,d,p){return this.request(lr(p||{},{method:n,headers:s?{"Content-Type":"multipart/form-data"}:{},url:u,data:d}))}}sr.prototype[n]=r(),sr.prototype[n+"Form"]=r(!0)});let tv=class om{constructor(n){if(typeof n!="function")throw new TypeError("executor must be a function.");let r;this.promise=new Promise(function(u){r=u});const s=this;this.promise.then(l=>{if(!s._listeners)return;let u=s._listeners.length;for(;u-- >0;)s._listeners[u](l);s._listeners=null}),this.promise.then=l=>{let u;const d=new Promise(p=>{s.subscribe(p),u=p}).then(l);return d.cancel=function(){s.unsubscribe(u)},d},n(function(u,d,p){s.reason||(s.reason=new Kr(u,d,p),r(s.reason))})}throwIfRequested(){if(this.reason)throw this.reason}subscribe(n){if(this.reason){n(this.reason);return}this._listeners?this._listeners.push(n):this._listeners=[n]}unsubscribe(n){if(!this._listeners)return;const r=this._listeners.indexOf(n);r!==-1&&this._listeners.splice(r,1)}toAbortSignal(){const n=new AbortController,r=s=>{n.abort(s)};return this.subscribe(r),n.signal.unsubscribe=()=>this.unsubscribe(r),n.signal}static source(){let n;return{token:new om(function(l){n=l}),cancel:n}}};function nv(i){return function(r){return i.apply(null,r)}}function rv(i){return F.isObject(i)&&i.isAxiosError===!0}const Ou={Continue:100,SwitchingProtocols:101,Processing:102,EarlyHints:103,Ok:200,Created:201,Accepted:202,NonAuthoritativeInformation:203,NoContent:204,ResetContent:205,PartialContent:206,MultiStatus:207,AlreadyReported:208,ImUsed:226,MultipleChoices:300,MovedPermanently:301,Found:302,SeeOther:303,NotModified:304,UseProxy:305,Unused:306,TemporaryRedirect:307,PermanentRedirect:308,BadRequest:400,Unauthorized:401,PaymentRequired:402,Forbidden:403,NotFound:404,MethodNotAllowed:405,NotAcceptable:406,ProxyAuthenticationRequired:407,RequestTimeout:408,Conflict:409,Gone:410,LengthRequired:411,PreconditionFailed:412,PayloadTooLarge:413,UriTooLong:414,UnsupportedMediaType:415,RangeNotSatisfiable:416,ExpectationFailed:417,ImATeapot:418,MisdirectedRequest:421,UnprocessableEntity:422,Locked:423,FailedDependency:424,TooEarly:425,UpgradeRequired:426,PreconditionRequired:428,TooManyRequests:429,RequestHeaderFieldsTooLarge:431,UnavailableForLegalReasons:451,InternalServerError:500,NotImplemented:501,BadGateway:502,ServiceUnavailable:503,GatewayTimeout:504,HttpVersionNotSupported:505,VariantAlsoNegotiates:506,InsufficientStorage:507,LoopDetected:508,NotExtended:510,NetworkAuthenticationRequired:511};Object.entries(Ou).forEach(([i,n])=>{Ou[n]=i});function sm(i){const n=new sr(i),r=Uh(sr.prototype.request,n);return F.extend(r,sr.prototype,n,{allOwnKeys:!0}),F.extend(r,n,null,{allOwnKeys:!0}),r.create=function(l){return sm(lr(i,l))},r}const Ze=sm($i);Ze.Axios=sr;Ze.CanceledError=Kr;Ze.CancelToken=tv;Ze.isCancel=Xh;Ze.VERSION=im;Ze.toFormData=Ds;Ze.AxiosError=ve;Ze.Cancel=Ze.CanceledError;Ze.all=function(n){return Promise.all(n)};Ze.spread=nv;Ze.isAxiosError=rv;Ze.mergeConfig=lr;Ze.AxiosHeaders=St;Ze.formToJSON=i=>Hh(F.isHTMLForm(i)?new FormData(i):i);Ze.getAdapter=rm.getAdapter;Ze.HttpStatusCode=Ou;Ze.default=Ze;const{Axios:MC,AxiosError:LC,CanceledError:TC,isCancel:VC,CancelToken:FC,VERSION:OC,all:PC,Cancel:UC,isAxiosError:zC,spread:qC,toFormData:jC,AxiosHeaders:Np,HttpStatusCode:BC,formToJSON:WC,getAdapter:DC,mergeConfig:KC}=Ze,ge=i=>typeof i=="string",Oi=()=>{let i,n;const r=new Promise((s,l)=>{i=s,n=l});return r.resolve=i,r.reject=n,r},Mp=i=>i==null?"":""+i,iv=(i,n,r)=>{i.forEach(s=>{n[s]&&(r[s]=n[s])})},ov=/###/g,Lp=i=>i&&i.indexOf("###")>-1?i.replace(ov,"."):i,Tp=i=>!i||ge(i),ji=(i,n,r)=>{const s=ge(n)?n.split("."):n;let l=0;for(;l<s.length-1;){if(Tp(i))return{};const u=Lp(s[l]);!i[u]&&r&&(i[u]=new r),Object.prototype.hasOwnProperty.call(i,u)?i=i[u]:i={},++l}return Tp(i)?{}:{obj:i,k:Lp(s[l])}},Vp=(i,n,r)=>{const{obj:s,k:l}=ji(i,n,Object);if(s!==void 0||n.length===1){s[l]=r;return}let u=n[n.length-1],d=n.slice(0,n.length-1),p=ji(i,d,Object);for(;p.obj===void 0&&d.length;)u=`${d[d.length-1]}.${u}`,d=d.slice(0,d.length-1),p=ji(i,d,Object),p!=null&&p.obj&&typeof p.obj[`${p.k}.${u}`]<"u"&&(p.obj=void 0);p.obj[`${p.k}.${u}`]=r},sv=(i,n,r,s)=>{const{obj:l,k:u}=ji(i,n,Object);l[u]=l[u]||[],l[u].push(r)},Rs=(i,n)=>{const{obj:r,k:s}=ji(i,n);if(r&&Object.prototype.hasOwnProperty.call(r,s))return r[s]},lv=(i,n,r)=>{const s=Rs(i,r);return s!==void 0?s:Rs(n,r)},lm=(i,n,r)=>{for(const s in n)s!=="__proto__"&&s!=="constructor"&&(s in i?ge(i[s])||i[s]instanceof String||ge(n[s])||n[s]instanceof String?r&&(i[s]=n[s]):lm(i[s],n[s],r):i[s]=n[s]);return i},Pr=i=>i.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&");var av={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"};const uv=i=>ge(i)?i.replace(/[&<>"'\/]/g,n=>av[n]):i;class cv{constructor(n){this.capacity=n,this.regExpMap=new Map,this.regExpQueue=[]}getRegExp(n){const r=this.regExpMap.get(n);if(r!==void 0)return r;const s=new RegExp(n);return this.regExpQueue.length===this.capacity&&this.regExpMap.delete(this.regExpQueue.shift()),this.regExpMap.set(n,s),this.regExpQueue.push(n),s}}const dv=[" ",",","?","!",";"],fv=new cv(20),pv=(i,n,r)=>{n=n||"",r=r||"";const s=dv.filter(d=>n.indexOf(d)<0&&r.indexOf(d)<0);if(s.length===0)return!0;const l=fv.getRegExp(`(${s.map(d=>d==="?"?"\\?":d).join("|")})`);let u=!l.test(i);if(!u){const d=i.indexOf(r);d>0&&!l.test(i.substring(0,d))&&(u=!0)}return u},Pu=function(i,n){let r=arguments.length>2&&arguments[2]!==void 0?arguments[2]:".";if(!i)return;if(i[n])return Object.prototype.hasOwnProperty.call(i,n)?i[n]:void 0;const s=n.split(r);let l=i;for(let u=0;u<s.length;){if(!l||typeof l!="object")return;let d,p="";for(let h=u;h<s.length;++h)if(h!==u&&(p+=r),p+=s[h],d=l[p],d!==void 0){if(["string","number","boolean"].indexOf(typeof d)>-1&&h<s.length-1)continue;u+=h-u+1;break}l=d}return l},Is=i=>i==null?void 0:i.replace("_","-"),hv={type:"logger",log(i){this.output("log",i)},warn(i){this.output("warn",i)},error(i){this.output("error",i)},output(i,n){var r,s;(s=(r=console==null?void 0:console[i])==null?void 0:r.apply)==null||s.call(r,console,n)}};class Ns{constructor(n){let r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};this.init(n,r)}init(n){let r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};this.prefix=r.prefix||"i18next:",this.logger=n||hv,this.options=r,this.debug=r.debug}log(){for(var n=arguments.length,r=new Array(n),s=0;s<n;s++)r[s]=arguments[s];return this.forward(r,"log","",!0)}warn(){for(var n=arguments.length,r=new Array(n),s=0;s<n;s++)r[s]=arguments[s];return this.forward(r,"warn","",!0)}error(){for(var n=arguments.length,r=new Array(n),s=0;s<n;s++)r[s]=arguments[s];return this.forward(r,"error","")}deprecate(){for(var n=arguments.length,r=new Array(n),s=0;s<n;s++)r[s]=arguments[s];return this.forward(r,"warn","WARNING DEPRECATED: ",!0)}forward(n,r,s,l){return l&&!this.debug?null:(ge(n[0])&&(n[0]=`${s}${this.prefix} ${n[0]}`),this.logger[r](n))}create(n){return new Ns(this.logger,{prefix:`${this.prefix}:${n}:`,...this.options})}clone(n){return n=n||this.options,n.prefix=n.prefix||this.prefix,new Ns(this.logger,n)}}var sn=new Ns;class Ys{constructor(){this.observers={}}on(n,r){return n.split(" ").forEach(s=>{this.observers[s]||(this.observers[s]=new Map);const l=this.observers[s].get(r)||0;this.observers[s].set(r,l+1)}),this}off(n,r){if(this.observers[n]){if(!r){delete this.observers[n];return}this.observers[n].delete(r)}}emit(n){for(var r=arguments.length,s=new Array(r>1?r-1:0),l=1;l<r;l++)s[l-1]=arguments[l];this.observers[n]&&Array.from(this.observers[n].entries()).forEach(d=>{let[p,h]=d;for(let m=0;m<h;m++)p(...s)}),this.observers["*"]&&Array.from(this.observers["*"].entries()).forEach(d=>{let[p,h]=d;for(let m=0;m<h;m++)p.apply(p,[n,...s])})}}class Fp extends Ys{constructor(n){let r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{ns:["translation"],defaultNS:"translation"};super(),this.data=n||{},this.options=r,this.options.keySeparator===void 0&&(this.options.keySeparator="."),this.options.ignoreJSONStructure===void 0&&(this.options.ignoreJSONStructure=!0)}addNamespaces(n){this.options.ns.indexOf(n)<0&&this.options.ns.push(n)}removeNamespaces(n){const r=this.options.ns.indexOf(n);r>-1&&this.options.ns.splice(r,1)}getResource(n,r,s){var m,y;let l=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{};const u=l.keySeparator!==void 0?l.keySeparator:this.options.keySeparator,d=l.ignoreJSONStructure!==void 0?l.ignoreJSONStructure:this.options.ignoreJSONStructure;let p;n.indexOf(".")>-1?p=n.split("."):(p=[n,r],s&&(Array.isArray(s)?p.push(...s):ge(s)&&u?p.push(...s.split(u)):p.push(s)));const h=Rs(this.data,p);return!h&&!r&&!s&&n.indexOf(".")>-1&&(n=p[0],r=p[1],s=p.slice(2).join(".")),h||!d||!ge(s)?h:Pu((y=(m=this.data)==null?void 0:m[n])==null?void 0:y[r],s,u)}addResource(n,r,s,l){let u=arguments.length>4&&arguments[4]!==void 0?arguments[4]:{silent:!1};const d=u.keySeparator!==void 0?u.keySeparator:this.options.keySeparator;let p=[n,r];s&&(p=p.concat(d?s.split(d):s)),n.indexOf(".")>-1&&(p=n.split("."),l=r,r=p[1]),this.addNamespaces(r),Vp(this.data,p,l),u.silent||this.emit("added",n,r,s,l)}addResources(n,r,s){let l=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{silent:!1};for(const u in s)(ge(s[u])||Array.isArray(s[u]))&&this.addResource(n,r,u,s[u],{silent:!0});l.silent||this.emit("added",n,r,s)}addResourceBundle(n,r,s,l,u){let d=arguments.length>5&&arguments[5]!==void 0?arguments[5]:{silent:!1,skipCopy:!1},p=[n,r];n.indexOf(".")>-1&&(p=n.split("."),l=s,s=r,r=p[1]),this.addNamespaces(r);let h=Rs(this.data,p)||{};d.skipCopy||(s=JSON.parse(JSON.stringify(s))),l?lm(h,s,u):h={...h,...s},Vp(this.data,p,h),d.silent||this.emit("added",n,r,s)}removeResourceBundle(n,r){this.hasResourceBundle(n,r)&&delete this.data[n][r],this.removeNamespaces(r),this.emit("removed",n,r)}hasResourceBundle(n,r){return this.getResource(n,r)!==void 0}getResourceBundle(n,r){return r||(r=this.options.defaultNS),this.getResource(n,r)}getDataByLanguage(n){return this.data[n]}hasLanguageSomeTranslations(n){const r=this.getDataByLanguage(n);return!!(r&&Object.keys(r)||[]).find(l=>r[l]&&Object.keys(r[l]).length>0)}toJSON(){return this.data}}var am={processors:{},addPostProcessor(i){this.processors[i.name]=i},handle(i,n,r,s,l){return i.forEach(u=>{var d;n=((d=this.processors[u])==null?void 0:d.process(n,r,s,l))??n}),n}};const Op={},Pp=i=>!ge(i)&&typeof i!="boolean"&&typeof i!="number";class Ms extends Ys{constructor(n){let r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};super(),iv(["resourceStore","languageUtils","pluralResolver","interpolator","backendConnector","i18nFormat","utils"],n,this),this.options=r,this.options.keySeparator===void 0&&(this.options.keySeparator="."),this.logger=sn.create("translator")}changeLanguage(n){n&&(this.language=n)}exists(n){let r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{interpolation:{}};if(n==null)return!1;const s=this.resolve(n,r);return(s==null?void 0:s.res)!==void 0}extractFromKey(n,r){let s=r.nsSeparator!==void 0?r.nsSeparator:this.options.nsSeparator;s===void 0&&(s=":");const l=r.keySeparator!==void 0?r.keySeparator:this.options.keySeparator;let u=r.ns||this.options.defaultNS||[];const d=s&&n.indexOf(s)>-1,p=!this.options.userDefinedKeySeparator&&!r.keySeparator&&!this.options.userDefinedNsSeparator&&!r.nsSeparator&&!pv(n,s,l);if(d&&!p){const h=n.match(this.interpolator.nestingRegexp);if(h&&h.length>0)return{key:n,namespaces:ge(u)?[u]:u};const m=n.split(s);(s!==l||s===l&&this.options.ns.indexOf(m[0])>-1)&&(u=m.shift()),n=m.join(l)}return{key:n,namespaces:ge(u)?[u]:u}}translate(n,r,s){if(typeof r!="object"&&this.options.overloadTranslationOptionHandler&&(r=this.options.overloadTranslationOptionHandler(arguments)),typeof r=="object"&&(r={...r}),r||(r={}),n==null)return"";Array.isArray(n)||(n=[String(n)]);const l=r.returnDetails!==void 0?r.returnDetails:this.options.returnDetails,u=r.keySeparator!==void 0?r.keySeparator:this.options.keySeparator,{key:d,namespaces:p}=this.extractFromKey(n[n.length-1],r),h=p[p.length-1],m=r.lng||this.language,y=r.appendNamespaceToCIMode||this.options.appendNamespaceToCIMode;if((m==null?void 0:m.toLowerCase())==="cimode"){if(y){const X=r.nsSeparator||this.options.nsSeparator;return l?{res:`${h}${X}${d}`,usedKey:d,exactUsedKey:d,usedLng:m,usedNS:h,usedParams:this.getUsedParamsDetails(r)}:`${h}${X}${d}`}return l?{res:d,usedKey:d,exactUsedKey:d,usedLng:m,usedNS:h,usedParams:this.getUsedParamsDetails(r)}:d}const v=this.resolve(n,r);let A=v==null?void 0:v.res;const R=(v==null?void 0:v.usedKey)||d,C=(v==null?void 0:v.exactUsedKey)||d,x=["[object Number]","[object Function]","[object RegExp]"],k=r.joinArrays!==void 0?r.joinArrays:this.options.joinArrays,V=!this.i18nFormat||this.i18nFormat.handleAsObject,P=r.count!==void 0&&!ge(r.count),U=Ms.hasDefaultValue(r),B=P?this.pluralResolver.getSuffix(m,r.count,r):"",ne=r.ordinal&&P?this.pluralResolver.getSuffix(m,r.count,{ordinal:!1}):"",T=P&&!r.ordinal&&r.count===0,O=T&&r[`defaultValue${this.options.pluralSeparator}zero`]||r[`defaultValue${B}`]||r[`defaultValue${ne}`]||r.defaultValue;let D=A;V&&!A&&U&&(D=O);const J=Pp(D),ie=Object.prototype.toString.apply(D);if(V&&D&&J&&x.indexOf(ie)<0&&!(ge(k)&&Array.isArray(D))){if(!r.returnObjects&&!this.options.returnObjects){this.options.returnedObjectHandler||this.logger.warn("accessing an object - but returnObjects options is not enabled!");const X=this.options.returnedObjectHandler?this.options.returnedObjectHandler(R,D,{...r,ns:p}):`key '${d} (${this.language})' returned an object instead of string.`;return l?(v.res=X,v.usedParams=this.getUsedParamsDetails(r),v):X}if(u){const X=Array.isArray(D),_=X?[]:{},$=X?C:R;for(const ee in D)if(Object.prototype.hasOwnProperty.call(D,ee)){const Ce=`${$}${u}${ee}`;U&&!A?_[ee]=this.translate(Ce,{...r,defaultValue:Pp(O)?O[ee]:void 0,joinArrays:!1,ns:p}):_[ee]=this.translate(Ce,{...r,joinArrays:!1,ns:p}),_[ee]===Ce&&(_[ee]=D[ee])}A=_}}else if(V&&ge(k)&&Array.isArray(A))A=A.join(k),A&&(A=this.extendTranslation(A,n,r,s));else{let X=!1,_=!1;!this.isValidLookup(A)&&U&&(X=!0,A=O),this.isValidLookup(A)||(_=!0,A=d);const ee=(r.missingKeyNoValueFallbackToKey||this.options.missingKeyNoValueFallbackToKey)&&_?void 0:A,Ce=U&&O!==A&&this.options.updateMissing;if(_||X||Ce){if(this.logger.log(Ce?"updateKey":"missingKey",m,h,d,Ce?O:A),u){const H=this.resolve(d,{...r,keySeparator:!1});H&&H.res&&this.logger.warn("Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.")}let ce=[];const Ie=this.languageUtils.getFallbackCodes(this.options.fallbackLng,r.lng||this.language);if(this.options.saveMissingTo==="fallback"&&Ie&&Ie[0])for(let H=0;H<Ie.length;H++)ce.push(Ie[H]);else this.options.saveMissingTo==="all"?ce=this.languageUtils.toResolveHierarchy(r.lng||this.language):ce.push(r.lng||this.language);const Q=(H,Z,b)=>{var he;const z=U&&b!==A?b:ee;this.options.missingKeyHandler?this.options.missingKeyHandler(H,h,Z,z,Ce,r):(he=this.backendConnector)!=null&&he.saveMissing&&this.backendConnector.saveMissing(H,h,Z,z,Ce,r),this.emit("missingKey",H,h,Z,A)};this.options.saveMissing&&(this.options.saveMissingPlurals&&P?ce.forEach(H=>{const Z=this.pluralResolver.getSuffixes(H,r);T&&r[`defaultValue${this.options.pluralSeparator}zero`]&&Z.indexOf(`${this.options.pluralSeparator}zero`)<0&&Z.push(`${this.options.pluralSeparator}zero`),Z.forEach(b=>{Q([H],d+b,r[`defaultValue${b}`]||O)})}):Q(ce,d,O))}A=this.extendTranslation(A,n,r,v,s),_&&A===d&&this.options.appendNamespaceToMissingKey&&(A=`${h}:${d}`),(_||X)&&this.options.parseMissingKeyHandler&&(A=this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey?`${h}:${d}`:d,X?A:void 0))}return l?(v.res=A,v.usedParams=this.getUsedParamsDetails(r),v):A}extendTranslation(n,r,s,l,u){var m,y;var d=this;if((m=this.i18nFormat)!=null&&m.parse)n=this.i18nFormat.parse(n,{...this.options.interpolation.defaultVariables,...s},s.lng||this.language||l.usedLng,l.usedNS,l.usedKey,{resolved:l});else if(!s.skipInterpolation){s.interpolation&&this.interpolator.init({...s,interpolation:{...this.options.interpolation,...s.interpolation}});const v=ge(n)&&(((y=s==null?void 0:s.interpolation)==null?void 0:y.skipOnVariables)!==void 0?s.interpolation.skipOnVariables:this.options.interpolation.skipOnVariables);let A;if(v){const C=n.match(this.interpolator.nestingRegexp);A=C&&C.length}let R=s.replace&&!ge(s.replace)?s.replace:s;if(this.options.interpolation.defaultVariables&&(R={...this.options.interpolation.defaultVariables,...R}),n=this.interpolator.interpolate(n,R,s.lng||this.language||l.usedLng,s),v){const C=n.match(this.interpolator.nestingRegexp),x=C&&C.length;A<x&&(s.nest=!1)}!s.lng&&l&&l.res&&(s.lng=this.language||l.usedLng),s.nest!==!1&&(n=this.interpolator.nest(n,function(){for(var C=arguments.length,x=new Array(C),k=0;k<C;k++)x[k]=arguments[k];return(u==null?void 0:u[0])===x[0]&&!s.context?(d.logger.warn(`It seems you are nesting recursively key: ${x[0]} in key: ${r[0]}`),null):d.translate(...x,r)},s)),s.interpolation&&this.interpolator.reset()}const p=s.postProcess||this.options.postProcess,h=ge(p)?[p]:p;return n!=null&&(h!=null&&h.length)&&s.applyPostProcessor!==!1&&(n=am.handle(h,n,r,this.options&&this.options.postProcessPassResolved?{i18nResolved:{...l,usedParams:this.getUsedParamsDetails(s)},...s}:s,this)),n}resolve(n){let r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},s,l,u,d,p;return ge(n)&&(n=[n]),n.forEach(h=>{if(this.isValidLookup(s))return;const m=this.extractFromKey(h,r),y=m.key;l=y;let v=m.namespaces;this.options.fallbackNS&&(v=v.concat(this.options.fallbackNS));const A=r.count!==void 0&&!ge(r.count),R=A&&!r.ordinal&&r.count===0,C=r.context!==void 0&&(ge(r.context)||typeof r.context=="number")&&r.context!=="",x=r.lngs?r.lngs:this.languageUtils.toResolveHierarchy(r.lng||this.language,r.fallbackLng);v.forEach(k=>{var V,P;this.isValidLookup(s)||(p=k,!Op[`${x[0]}-${k}`]&&((V=this.utils)!=null&&V.hasLoadedNamespace)&&!((P=this.utils)!=null&&P.hasLoadedNamespace(p))&&(Op[`${x[0]}-${k}`]=!0,this.logger.warn(`key "${l}" for languages "${x.join(", ")}" won't get resolved as namespace "${p}" was not yet loaded`,"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!")),x.forEach(U=>{var T;if(this.isValidLookup(s))return;d=U;const B=[y];if((T=this.i18nFormat)!=null&&T.addLookupKeys)this.i18nFormat.addLookupKeys(B,y,U,k,r);else{let O;A&&(O=this.pluralResolver.getSuffix(U,r.count,r));const D=`${this.options.pluralSeparator}zero`,J=`${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;if(A&&(B.push(y+O),r.ordinal&&O.indexOf(J)===0&&B.push(y+O.replace(J,this.options.pluralSeparator)),R&&B.push(y+D)),C){const ie=`${y}${this.options.contextSeparator}${r.context}`;B.push(ie),A&&(B.push(ie+O),r.ordinal&&O.indexOf(J)===0&&B.push(ie+O.replace(J,this.options.pluralSeparator)),R&&B.push(ie+D))}}let ne;for(;ne=B.pop();)this.isValidLookup(s)||(u=ne,s=this.getResource(U,k,ne,r))}))})}),{res:s,usedKey:l,exactUsedKey:u,usedLng:d,usedNS:p}}isValidLookup(n){return n!==void 0&&!(!this.options.returnNull&&n===null)&&!(!this.options.returnEmptyString&&n==="")}getResource(n,r,s){var u;let l=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{};return(u=this.i18nFormat)!=null&&u.getResource?this.i18nFormat.getResource(n,r,s,l):this.resourceStore.getResource(n,r,s,l)}getUsedParamsDetails(){let n=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};const r=["defaultValue","ordinal","context","replace","lng","lngs","fallbackLng","ns","keySeparator","nsSeparator","returnObjects","returnDetails","joinArrays","postProcess","interpolation"],s=n.replace&&!ge(n.replace);let l=s?n.replace:n;if(s&&typeof n.count<"u"&&(l.count=n.count),this.options.interpolation.defaultVariables&&(l={...this.options.interpolation.defaultVariables,...l}),!s){l={...l};for(const u of r)delete l[u]}return l}static hasDefaultValue(n){const r="defaultValue";for(const s in n)if(Object.prototype.hasOwnProperty.call(n,s)&&r===s.substring(0,r.length)&&n[s]!==void 0)return!0;return!1}}class Up{constructor(n){this.options=n,this.supportedLngs=this.options.supportedLngs||!1,this.logger=sn.create("languageUtils")}getScriptPartFromCode(n){if(n=Is(n),!n||n.indexOf("-")<0)return null;const r=n.split("-");return r.length===2||(r.pop(),r[r.length-1].toLowerCase()==="x")?null:this.formatLanguageCode(r.join("-"))}getLanguagePartFromCode(n){if(n=Is(n),!n||n.indexOf("-")<0)return n;const r=n.split("-");return this.formatLanguageCode(r[0])}formatLanguageCode(n){if(ge(n)&&n.indexOf("-")>-1){let r;try{r=Intl.getCanonicalLocales(n)[0]}catch{}return r&&this.options.lowerCaseLng&&(r=r.toLowerCase()),r||(this.options.lowerCaseLng?n.toLowerCase():n)}return this.options.cleanCode||this.options.lowerCaseLng?n.toLowerCase():n}isSupportedCode(n){return(this.options.load==="languageOnly"||this.options.nonExplicitSupportedLngs)&&(n=this.getLanguagePartFromCode(n)),!this.supportedLngs||!this.supportedLngs.length||this.supportedLngs.indexOf(n)>-1}getBestMatchFromCodes(n){if(!n)return null;let r;return n.forEach(s=>{if(r)return;const l=this.formatLanguageCode(s);(!this.options.supportedLngs||this.isSupportedCode(l))&&(r=l)}),!r&&this.options.supportedLngs&&n.forEach(s=>{if(r)return;const l=this.getLanguagePartFromCode(s);if(this.isSupportedCode(l))return r=l;r=this.options.supportedLngs.find(u=>{if(u===l)return u;if(!(u.indexOf("-")<0&&l.indexOf("-")<0)&&(u.indexOf("-")>0&&l.indexOf("-")<0&&u.substring(0,u.indexOf("-"))===l||u.indexOf(l)===0&&l.length>1))return u})}),r||(r=this.getFallbackCodes(this.options.fallbackLng)[0]),r}getFallbackCodes(n,r){if(!n)return[];if(typeof n=="function"&&(n=n(r)),ge(n)&&(n=[n]),Array.isArray(n))return n;if(!r)return n.default||[];let s=n[r];return s||(s=n[this.getScriptPartFromCode(r)]),s||(s=n[this.formatLanguageCode(r)]),s||(s=n[this.getLanguagePartFromCode(r)]),s||(s=n.default),s||[]}toResolveHierarchy(n,r){const s=this.getFallbackCodes(r||this.options.fallbackLng||[],n),l=[],u=d=>{d&&(this.isSupportedCode(d)?l.push(d):this.logger.warn(`rejecting language code not found in supportedLngs: ${d}`))};return ge(n)&&(n.indexOf("-")>-1||n.indexOf("_")>-1)?(this.options.load!=="languageOnly"&&u(this.formatLanguageCode(n)),this.options.load!=="languageOnly"&&this.options.load!=="currentOnly"&&u(this.getScriptPartFromCode(n)),this.options.load!=="currentOnly"&&u(this.getLanguagePartFromCode(n))):ge(n)&&u(this.formatLanguageCode(n)),s.forEach(d=>{l.indexOf(d)<0&&u(this.formatLanguageCode(d))}),l}}const zp={zero:0,one:1,two:2,few:3,many:4,other:5},qp={select:i=>i===1?"one":"other",resolvedOptions:()=>({pluralCategories:["one","other"]})};class mv{constructor(n){let r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};this.languageUtils=n,this.options=r,this.logger=sn.create("pluralResolver"),this.pluralRulesCache={}}addRule(n,r){this.rules[n]=r}clearCache(){this.pluralRulesCache={}}getRule(n){let r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};const s=Is(n==="dev"?"en":n),l=r.ordinal?"ordinal":"cardinal",u=JSON.stringify({cleanedCode:s,type:l});if(u in this.pluralRulesCache)return this.pluralRulesCache[u];let d;try{d=new Intl.PluralRules(s,{type:l})}catch{if(!Intl)return this.logger.error("No Intl support, please use an Intl polyfill!"),qp;if(!n.match(/-|_/))return qp;const h=this.languageUtils.getLanguagePartFromCode(n);d=this.getRule(h,r)}return this.pluralRulesCache[u]=d,d}needsPlural(n){let r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},s=this.getRule(n,r);return s||(s=this.getRule("dev",r)),(s==null?void 0:s.resolvedOptions().pluralCategories.length)>1}getPluralFormsOfKey(n,r){let s=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};return this.getSuffixes(n,s).map(l=>`${r}${l}`)}getSuffixes(n){let r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{},s=this.getRule(n,r);return s||(s=this.getRule("dev",r)),s?s.resolvedOptions().pluralCategories.sort((l,u)=>zp[l]-zp[u]).map(l=>`${this.options.prepend}${r.ordinal?`ordinal${this.options.prepend}`:""}${l}`):[]}getSuffix(n,r){let s=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{};const l=this.getRule(n,s);return l?`${this.options.prepend}${s.ordinal?`ordinal${this.options.prepend}`:""}${l.select(r)}`:(this.logger.warn(`no plural rule found for: ${n}`),this.getSuffix("dev",r,s))}}const jp=function(i,n,r){let s=arguments.length>3&&arguments[3]!==void 0?arguments[3]:".",l=arguments.length>4&&arguments[4]!==void 0?arguments[4]:!0,u=lv(i,n,r);return!u&&l&&ge(r)&&(u=Pu(i,r,s),u===void 0&&(u=Pu(n,r,s))),u},eu=i=>i.replace(/\$/g,"$$$$");class gv{constructor(){var r;let n=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};this.logger=sn.create("interpolator"),this.options=n,this.format=((r=n==null?void 0:n.interpolation)==null?void 0:r.format)||(s=>s),this.init(n)}init(){let n=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};n.interpolation||(n.interpolation={escapeValue:!0});const{escape:r,escapeValue:s,useRawValueToEscape:l,prefix:u,prefixEscaped:d,suffix:p,suffixEscaped:h,formatSeparator:m,unescapeSuffix:y,unescapePrefix:v,nestingPrefix:A,nestingPrefixEscaped:R,nestingSuffix:C,nestingSuffixEscaped:x,nestingOptionsSeparator:k,maxReplaces:V,alwaysFormat:P}=n.interpolation;this.escape=r!==void 0?r:uv,this.escapeValue=s!==void 0?s:!0,this.useRawValueToEscape=l!==void 0?l:!1,this.prefix=u?Pr(u):d||"{{",this.suffix=p?Pr(p):h||"}}",this.formatSeparator=m||",",this.unescapePrefix=y?"":v||"-",this.unescapeSuffix=this.unescapePrefix?"":y||"",this.nestingPrefix=A?Pr(A):R||Pr("$t("),this.nestingSuffix=C?Pr(C):x||Pr(")"),this.nestingOptionsSeparator=k||",",this.maxReplaces=V||1e3,this.alwaysFormat=P!==void 0?P:!1,this.resetRegExp()}reset(){this.options&&this.init(this.options)}resetRegExp(){const n=(r,s)=>(r==null?void 0:r.source)===s?(r.lastIndex=0,r):new RegExp(s,"g");this.regexp=n(this.regexp,`${this.prefix}(.+?)${this.suffix}`),this.regexpUnescape=n(this.regexpUnescape,`${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`),this.nestingRegexp=n(this.nestingRegexp,`${this.nestingPrefix}(.+?)${this.nestingSuffix}`)}interpolate(n,r,s,l){var R;let u,d,p;const h=this.options&&this.options.interpolation&&this.options.interpolation.defaultVariables||{},m=C=>{if(C.indexOf(this.formatSeparator)<0){const P=jp(r,h,C,this.options.keySeparator,this.options.ignoreJSONStructure);return this.alwaysFormat?this.format(P,void 0,s,{...l,...r,interpolationkey:C}):P}const x=C.split(this.formatSeparator),k=x.shift().trim(),V=x.join(this.formatSeparator).trim();return this.format(jp(r,h,k,this.options.keySeparator,this.options.ignoreJSONStructure),V,s,{...l,...r,interpolationkey:k})};this.resetRegExp();const y=(l==null?void 0:l.missingInterpolationHandler)||this.options.missingInterpolationHandler,v=((R=l==null?void 0:l.interpolation)==null?void 0:R.skipOnVariables)!==void 0?l.interpolation.skipOnVariables:this.options.interpolation.skipOnVariables;return[{regex:this.regexpUnescape,safeValue:C=>eu(C)},{regex:this.regexp,safeValue:C=>this.escapeValue?eu(this.escape(C)):eu(C)}].forEach(C=>{for(p=0;u=C.regex.exec(n);){const x=u[1].trim();if(d=m(x),d===void 0)if(typeof y=="function"){const V=y(n,u,l);d=ge(V)?V:""}else if(l&&Object.prototype.hasOwnProperty.call(l,x))d="";else if(v){d=u[0];continue}else this.logger.warn(`missed to pass in variable ${x} for interpolating ${n}`),d="";else!ge(d)&&!this.useRawValueToEscape&&(d=Mp(d));const k=C.safeValue(d);if(n=n.replace(u[0],k),v?(C.regex.lastIndex+=d.length,C.regex.lastIndex-=u[0].length):C.regex.lastIndex=0,p++,p>=this.maxReplaces)break}}),n}nest(n,r){let s=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},l,u,d;const p=(h,m)=>{const y=this.nestingOptionsSeparator;if(h.indexOf(y)<0)return h;const v=h.split(new RegExp(`${y}[ ]*{`));let A=`{${v[1]}`;h=v[0],A=this.interpolate(A,d);const R=A.match(/'/g),C=A.match(/"/g);(((R==null?void 0:R.length)??0)%2===0&&!C||C.length%2!==0)&&(A=A.replace(/'/g,'"'));try{d=JSON.parse(A),m&&(d={...m,...d})}catch(x){return this.logger.warn(`failed parsing options string in nesting for key ${h}`,x),`${h}${y}${A}`}return d.defaultValue&&d.defaultValue.indexOf(this.prefix)>-1&&delete d.defaultValue,h};for(;l=this.nestingRegexp.exec(n);){let h=[];d={...s},d=d.replace&&!ge(d.replace)?d.replace:d,d.applyPostProcessor=!1,delete d.defaultValue;let m=!1;if(l[0].indexOf(this.formatSeparator)!==-1&&!/{.*}/.test(l[1])){const y=l[1].split(this.formatSeparator).map(v=>v.trim());l[1]=y.shift(),h=y,m=!0}if(u=r(p.call(this,l[1].trim(),d),d),u&&l[0]===n&&!ge(u))return u;ge(u)||(u=Mp(u)),u||(this.logger.warn(`missed to resolve ${l[1]} for nesting ${n}`),u=""),m&&(u=h.reduce((y,v)=>this.format(y,v,s.lng,{...s,interpolationkey:l[1].trim()}),u.trim())),n=n.replace(l[0],u),this.regexp.lastIndex=0}return n}}const yv=i=>{let n=i.toLowerCase().trim();const r={};if(i.indexOf("(")>-1){const s=i.split("(");n=s[0].toLowerCase().trim();const l=s[1].substring(0,s[1].length-1);n==="currency"&&l.indexOf(":")<0?r.currency||(r.currency=l.trim()):n==="relativetime"&&l.indexOf(":")<0?r.range||(r.range=l.trim()):l.split(";").forEach(d=>{if(d){const[p,...h]=d.split(":"),m=h.join(":").trim().replace(/^'+|'+$/g,""),y=p.trim();r[y]||(r[y]=m),m==="false"&&(r[y]=!1),m==="true"&&(r[y]=!0),isNaN(m)||(r[y]=parseInt(m,10))}})}return{formatName:n,formatOptions:r}},Ur=i=>{const n={};return(r,s,l)=>{let u=l;l&&l.interpolationkey&&l.formatParams&&l.formatParams[l.interpolationkey]&&l[l.interpolationkey]&&(u={...u,[l.interpolationkey]:void 0});const d=s+JSON.stringify(u);let p=n[d];return p||(p=i(Is(s),l),n[d]=p),p(r)}};class vv{constructor(){let n=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{};this.logger=sn.create("formatter"),this.options=n,this.formats={number:Ur((r,s)=>{const l=new Intl.NumberFormat(r,{...s});return u=>l.format(u)}),currency:Ur((r,s)=>{const l=new Intl.NumberFormat(r,{...s,style:"currency"});return u=>l.format(u)}),datetime:Ur((r,s)=>{const l=new Intl.DateTimeFormat(r,{...s});return u=>l.format(u)}),relativetime:Ur((r,s)=>{const l=new Intl.RelativeTimeFormat(r,{...s});return u=>l.format(u,s.range||"day")}),list:Ur((r,s)=>{const l=new Intl.ListFormat(r,{...s});return u=>l.format(u)})},this.init(n)}init(n){let r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{interpolation:{}};this.formatSeparator=r.interpolation.formatSeparator||","}add(n,r){this.formats[n.toLowerCase().trim()]=r}addCached(n,r){this.formats[n.toLowerCase().trim()]=Ur(r)}format(n,r,s){let l=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{};const u=r.split(this.formatSeparator);if(u.length>1&&u[0].indexOf("(")>1&&u[0].indexOf(")")<0&&u.find(p=>p.indexOf(")")>-1)){const p=u.findIndex(h=>h.indexOf(")")>-1);u[0]=[u[0],...u.splice(1,p)].join(this.formatSeparator)}return u.reduce((p,h)=>{var v;const{formatName:m,formatOptions:y}=yv(h);if(this.formats[m]){let A=p;try{const R=((v=l==null?void 0:l.formatParams)==null?void 0:v[l.interpolationkey])||{},C=R.locale||R.lng||l.locale||l.lng||s;A=this.formats[m](p,C,{...y,...l,...R})}catch(R){this.logger.warn(R)}return A}else this.logger.warn(`there was no format function for ${m}`);return p},n)}}const Av=(i,n)=>{i.pending[n]!==void 0&&(delete i.pending[n],i.pendingCount--)};class wv extends Ys{constructor(n,r,s){var u,d;let l=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{};super(),this.backend=n,this.store=r,this.services=s,this.languageUtils=s.languageUtils,this.options=l,this.logger=sn.create("backendConnector"),this.waitingReads=[],this.maxParallelReads=l.maxParallelReads||10,this.readingCalls=0,this.maxRetries=l.maxRetries>=0?l.maxRetries:5,this.retryTimeout=l.retryTimeout>=1?l.retryTimeout:350,this.state={},this.queue=[],(d=(u=this.backend)==null?void 0:u.init)==null||d.call(u,s,l.backend,l)}queueLoad(n,r,s,l){const u={},d={},p={},h={};return n.forEach(m=>{let y=!0;r.forEach(v=>{const A=`${m}|${v}`;!s.reload&&this.store.hasResourceBundle(m,v)?this.state[A]=2:this.state[A]<0||(this.state[A]===1?d[A]===void 0&&(d[A]=!0):(this.state[A]=1,y=!1,d[A]===void 0&&(d[A]=!0),u[A]===void 0&&(u[A]=!0),h[v]===void 0&&(h[v]=!0)))}),y||(p[m]=!0)}),(Object.keys(u).length||Object.keys(d).length)&&this.queue.push({pending:d,pendingCount:Object.keys(d).length,loaded:{},errors:[],callback:l}),{toLoad:Object.keys(u),pending:Object.keys(d),toLoadLanguages:Object.keys(p),toLoadNamespaces:Object.keys(h)}}loaded(n,r,s){const l=n.split("|"),u=l[0],d=l[1];r&&this.emit("failedLoading",u,d,r),!r&&s&&this.store.addResourceBundle(u,d,s,void 0,void 0,{skipCopy:!0}),this.state[n]=r?-1:2,r&&s&&(this.state[n]=0);const p={};this.queue.forEach(h=>{sv(h.loaded,[u],d),Av(h,n),r&&h.errors.push(r),h.pendingCount===0&&!h.done&&(Object.keys(h.loaded).forEach(m=>{p[m]||(p[m]={});const y=h.loaded[m];y.length&&y.forEach(v=>{p[m][v]===void 0&&(p[m][v]=!0)})}),h.done=!0,h.errors.length?h.callback(h.errors):h.callback())}),this.emit("loaded",p),this.queue=this.queue.filter(h=>!h.done)}read(n,r,s){let l=arguments.length>3&&arguments[3]!==void 0?arguments[3]:0,u=arguments.length>4&&arguments[4]!==void 0?arguments[4]:this.retryTimeout,d=arguments.length>5?arguments[5]:void 0;if(!n.length)return d(null,{});if(this.readingCalls>=this.maxParallelReads){this.waitingReads.push({lng:n,ns:r,fcName:s,tried:l,wait:u,callback:d});return}this.readingCalls++;const p=(m,y)=>{if(this.readingCalls--,this.waitingReads.length>0){const v=this.waitingReads.shift();this.read(v.lng,v.ns,v.fcName,v.tried,v.wait,v.callback)}if(m&&y&&l<this.maxRetries){setTimeout(()=>{this.read.call(this,n,r,s,l+1,u*2,d)},u);return}d(m,y)},h=this.backend[s].bind(this.backend);if(h.length===2){try{const m=h(n,r);m&&typeof m.then=="function"?m.then(y=>p(null,y)).catch(p):p(null,m)}catch(m){p(m)}return}return h(n,r,p)}prepareLoading(n,r){let s=arguments.length>2&&arguments[2]!==void 0?arguments[2]:{},l=arguments.length>3?arguments[3]:void 0;if(!this.backend)return this.logger.warn("No backend was added via i18next.use. Will not load resources."),l&&l();ge(n)&&(n=this.languageUtils.toResolveHierarchy(n)),ge(r)&&(r=[r]);const u=this.queueLoad(n,r,s,l);if(!u.toLoad.length)return u.pending.length||l(),null;u.toLoad.forEach(d=>{this.loadOne(d)})}load(n,r,s){this.prepareLoading(n,r,{},s)}reload(n,r,s){this.prepareLoading(n,r,{reload:!0},s)}loadOne(n){let r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:"";const s=n.split("|"),l=s[0],u=s[1];this.read(l,u,"read",void 0,void 0,(d,p)=>{d&&this.logger.warn(`${r}loading namespace ${u} for language ${l} failed`,d),!d&&p&&this.logger.log(`${r}loaded namespace ${u} for language ${l}`,p),this.loaded(n,d,p)})}saveMissing(n,r,s,l,u){var h,m,y,v,A;let d=arguments.length>5&&arguments[5]!==void 0?arguments[5]:{},p=arguments.length>6&&arguments[6]!==void 0?arguments[6]:()=>{};if((m=(h=this.services)==null?void 0:h.utils)!=null&&m.hasLoadedNamespace&&!((v=(y=this.services)==null?void 0:y.utils)!=null&&v.hasLoadedNamespace(r))){this.logger.warn(`did not save key "${s}" as the namespace "${r}" was not yet loaded`,"This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!");return}if(!(s==null||s==="")){if((A=this.backend)!=null&&A.create){const R={...d,isUpdate:u},C=this.backend.create.bind(this.backend);if(C.length<6)try{let x;C.length===5?x=C(n,r,s,l,R):x=C(n,r,s,l),x&&typeof x.then=="function"?x.then(k=>p(null,k)).catch(p):p(null,x)}catch(x){p(x)}else C(n,r,s,l,p,R)}!n||!n[0]||this.store.addResource(n[0],r,s,l)}}}const Bp=()=>({debug:!1,initAsync:!0,ns:["translation"],defaultNS:["translation"],fallbackLng:["dev"],fallbackNS:!1,supportedLngs:!1,nonExplicitSupportedLngs:!1,load:"all",preload:!1,simplifyPluralSuffix:!0,keySeparator:".",nsSeparator:":",pluralSeparator:"_",contextSeparator:"_",partialBundledLanguages:!1,saveMissing:!1,updateMissing:!1,saveMissingTo:"fallback",saveMissingPlurals:!0,missingKeyHandler:!1,missingInterpolationHandler:!1,postProcess:!1,postProcessPassResolved:!1,returnNull:!1,returnEmptyString:!0,returnObjects:!1,joinArrays:!1,returnedObjectHandler:!1,parseMissingKeyHandler:!1,appendNamespaceToMissingKey:!1,appendNamespaceToCIMode:!1,overloadTranslationOptionHandler:i=>{let n={};if(typeof i[1]=="object"&&(n=i[1]),ge(i[1])&&(n.defaultValue=i[1]),ge(i[2])&&(n.tDescription=i[2]),typeof i[2]=="object"||typeof i[3]=="object"){const r=i[3]||i[2];Object.keys(r).forEach(s=>{n[s]=r[s]})}return n},interpolation:{escapeValue:!0,format:i=>i,prefix:"{{",suffix:"}}",formatSeparator:",",unescapePrefix:"-",nestingPrefix:"$t(",nestingSuffix:")",nestingOptionsSeparator:",",maxReplaces:1e3,skipOnVariables:!0}}),Wp=i=>{var n,r;return ge(i.ns)&&(i.ns=[i.ns]),ge(i.fallbackLng)&&(i.fallbackLng=[i.fallbackLng]),ge(i.fallbackNS)&&(i.fallbackNS=[i.fallbackNS]),((r=(n=i.supportedLngs)==null?void 0:n.indexOf)==null?void 0:r.call(n,"cimode"))<0&&(i.supportedLngs=i.supportedLngs.concat(["cimode"])),typeof i.initImmediate=="boolean"&&(i.initAsync=i.initImmediate),i},hs=()=>{},Cv=i=>{Object.getOwnPropertyNames(Object.getPrototypeOf(i)).forEach(r=>{typeof i[r]=="function"&&(i[r]=i[r].bind(i))})};class Ki extends Ys{constructor(){let n=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},r=arguments.length>1?arguments[1]:void 0;if(super(),this.options=Wp(n),this.services={},this.logger=sn,this.modules={external:[]},Cv(this),r&&!this.isInitialized&&!n.isClone){if(!this.options.initAsync)return this.init(n,r),this;setTimeout(()=>{this.init(n,r)},0)}}init(){var n=this;let r=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},s=arguments.length>1?arguments[1]:void 0;this.isInitializing=!0,typeof r=="function"&&(s=r,r={}),r.defaultNS==null&&r.ns&&(ge(r.ns)?r.defaultNS=r.ns:r.ns.indexOf("translation")<0&&(r.defaultNS=r.ns[0]));const l=Bp();this.options={...l,...this.options,...Wp(r)},this.options.interpolation={...l.interpolation,...this.options.interpolation},r.keySeparator!==void 0&&(this.options.userDefinedKeySeparator=r.keySeparator),r.nsSeparator!==void 0&&(this.options.userDefinedNsSeparator=r.nsSeparator);const u=y=>y?typeof y=="function"?new y:y:null;if(!this.options.isClone){this.modules.logger?sn.init(u(this.modules.logger),this.options):sn.init(null,this.options);let y;this.modules.formatter?y=this.modules.formatter:y=vv;const v=new Up(this.options);this.store=new Fp(this.options.resources,this.options);const A=this.services;A.logger=sn,A.resourceStore=this.store,A.languageUtils=v,A.pluralResolver=new mv(v,{prepend:this.options.pluralSeparator,simplifyPluralSuffix:this.options.simplifyPluralSuffix}),y&&(!this.options.interpolation.format||this.options.interpolation.format===l.interpolation.format)&&(A.formatter=u(y),A.formatter.init(A,this.options),this.options.interpolation.format=A.formatter.format.bind(A.formatter)),A.interpolator=new gv(this.options),A.utils={hasLoadedNamespace:this.hasLoadedNamespace.bind(this)},A.backendConnector=new wv(u(this.modules.backend),A.resourceStore,A,this.options),A.backendConnector.on("*",function(R){for(var C=arguments.length,x=new Array(C>1?C-1:0),k=1;k<C;k++)x[k-1]=arguments[k];n.emit(R,...x)}),this.modules.languageDetector&&(A.languageDetector=u(this.modules.languageDetector),A.languageDetector.init&&A.languageDetector.init(A,this.options.detection,this.options)),this.modules.i18nFormat&&(A.i18nFormat=u(this.modules.i18nFormat),A.i18nFormat.init&&A.i18nFormat.init(this)),this.translator=new Ms(this.services,this.options),this.translator.on("*",function(R){for(var C=arguments.length,x=new Array(C>1?C-1:0),k=1;k<C;k++)x[k-1]=arguments[k];n.emit(R,...x)}),this.modules.external.forEach(R=>{R.init&&R.init(this)})}if(this.format=this.options.interpolation.format,s||(s=hs),this.options.fallbackLng&&!this.services.languageDetector&&!this.options.lng){const y=this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);y.length>0&&y[0]!=="dev"&&(this.options.lng=y[0])}!this.services.languageDetector&&!this.options.lng&&this.logger.warn("init: no languageDetector is used and no lng is defined"),["getResource","hasResourceBundle","getResourceBundle","getDataByLanguage"].forEach(y=>{this[y]=function(){return n.store[y](...arguments)}}),["addResource","addResources","addResourceBundle","removeResourceBundle"].forEach(y=>{this[y]=function(){return n.store[y](...arguments),n}});const h=Oi(),m=()=>{const y=(v,A)=>{this.isInitializing=!1,this.isInitialized&&!this.initializedStoreOnce&&this.logger.warn("init: i18next is already initialized. You should call init just once!"),this.isInitialized=!0,this.options.isClone||this.logger.log("initialized",this.options),this.emit("initialized",this.options),h.resolve(A),s(v,A)};if(this.languages&&!this.isInitialized)return y(null,this.t.bind(this));this.changeLanguage(this.options.lng,y)};return this.options.resources||!this.options.initAsync?m():setTimeout(m,0),h}loadResources(n){var u,d;let s=arguments.length>1&&arguments[1]!==void 0?arguments[1]:hs;const l=ge(n)?n:this.language;if(typeof n=="function"&&(s=n),!this.options.resources||this.options.partialBundledLanguages){if((l==null?void 0:l.toLowerCase())==="cimode"&&(!this.options.preload||this.options.preload.length===0))return s();const p=[],h=m=>{if(!m||m==="cimode")return;this.services.languageUtils.toResolveHierarchy(m).forEach(v=>{v!=="cimode"&&p.indexOf(v)<0&&p.push(v)})};l?h(l):this.services.languageUtils.getFallbackCodes(this.options.fallbackLng).forEach(y=>h(y)),(d=(u=this.options.preload)==null?void 0:u.forEach)==null||d.call(u,m=>h(m)),this.services.backendConnector.load(p,this.options.ns,m=>{!m&&!this.resolvedLanguage&&this.language&&this.setResolvedLanguage(this.language),s(m)})}else s(null)}reloadResources(n,r,s){const l=Oi();return typeof n=="function"&&(s=n,n=void 0),typeof r=="function"&&(s=r,r=void 0),n||(n=this.languages),r||(r=this.options.ns),s||(s=hs),this.services.backendConnector.reload(n,r,u=>{l.resolve(),s(u)}),l}use(n){if(!n)throw new Error("You are passing an undefined module! Please check the object you are passing to i18next.use()");if(!n.type)throw new Error("You are passing a wrong module! Please check the object you are passing to i18next.use()");return n.type==="backend"&&(this.modules.backend=n),(n.type==="logger"||n.log&&n.warn&&n.error)&&(this.modules.logger=n),n.type==="languageDetector"&&(this.modules.languageDetector=n),n.type==="i18nFormat"&&(this.modules.i18nFormat=n),n.type==="postProcessor"&&am.addPostProcessor(n),n.type==="formatter"&&(this.modules.formatter=n),n.type==="3rdParty"&&this.modules.external.push(n),this}setResolvedLanguage(n){if(!(!n||!this.languages)&&!(["cimode","dev"].indexOf(n)>-1))for(let r=0;r<this.languages.length;r++){const s=this.languages[r];if(!(["cimode","dev"].indexOf(s)>-1)&&this.store.hasLanguageSomeTranslations(s)){this.resolvedLanguage=s;break}}}changeLanguage(n,r){var s=this;this.isLanguageChangingTo=n;const l=Oi();this.emit("languageChanging",n);const u=h=>{this.language=h,this.languages=this.services.languageUtils.toResolveHierarchy(h),this.resolvedLanguage=void 0,this.setResolvedLanguage(h)},d=(h,m)=>{m?(u(m),this.translator.changeLanguage(m),this.isLanguageChangingTo=void 0,this.emit("languageChanged",m),this.logger.log("languageChanged",m)):this.isLanguageChangingTo=void 0,l.resolve(function(){return s.t(...arguments)}),r&&r(h,function(){return s.t(...arguments)})},p=h=>{var y,v;!n&&!h&&this.services.languageDetector&&(h=[]);const m=ge(h)?h:this.services.languageUtils.getBestMatchFromCodes(h);m&&(this.language||u(m),this.translator.language||this.translator.changeLanguage(m),(v=(y=this.services.languageDetector)==null?void 0:y.cacheUserLanguage)==null||v.call(y,m)),this.loadResources(m,A=>{d(A,m)})};return!n&&this.services.languageDetector&&!this.services.languageDetector.async?p(this.services.languageDetector.detect()):!n&&this.services.languageDetector&&this.services.languageDetector.async?this.services.languageDetector.detect.length===0?this.services.languageDetector.detect().then(p):this.services.languageDetector.detect(p):p(n),l}getFixedT(n,r,s){var l=this;const u=function(d,p){let h;if(typeof p!="object"){for(var m=arguments.length,y=new Array(m>2?m-2:0),v=2;v<m;v++)y[v-2]=arguments[v];h=l.options.overloadTranslationOptionHandler([d,p].concat(y))}else h={...p};h.lng=h.lng||u.lng,h.lngs=h.lngs||u.lngs,h.ns=h.ns||u.ns,h.keyPrefix!==""&&(h.keyPrefix=h.keyPrefix||s||u.keyPrefix);const A=l.options.keySeparator||".";let R;return h.keyPrefix&&Array.isArray(d)?R=d.map(C=>`${h.keyPrefix}${A}${C}`):R=h.keyPrefix?`${h.keyPrefix}${A}${d}`:d,l.t(R,h)};return ge(n)?u.lng=n:u.lngs=n,u.ns=r,u.keyPrefix=s,u}t(){var l;for(var n=arguments.length,r=new Array(n),s=0;s<n;s++)r[s]=arguments[s];return(l=this.translator)==null?void 0:l.translate(...r)}exists(){var l;for(var n=arguments.length,r=new Array(n),s=0;s<n;s++)r[s]=arguments[s];return(l=this.translator)==null?void 0:l.exists(...r)}setDefaultNamespace(n){this.options.defaultNS=n}hasLoadedNamespace(n){let r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:{};if(!this.isInitialized)return this.logger.warn("hasLoadedNamespace: i18next was not initialized",this.languages),!1;if(!this.languages||!this.languages.length)return this.logger.warn("hasLoadedNamespace: i18n.languages were undefined or empty",this.languages),!1;const s=r.lng||this.resolvedLanguage||this.languages[0],l=this.options?this.options.fallbackLng:!1,u=this.languages[this.languages.length-1];if(s.toLowerCase()==="cimode")return!0;const d=(p,h)=>{const m=this.services.backendConnector.state[`${p}|${h}`];return m===-1||m===0||m===2};if(r.precheck){const p=r.precheck(this,d);if(p!==void 0)return p}return!!(this.hasResourceBundle(s,n)||!this.services.backendConnector.backend||this.options.resources&&!this.options.partialBundledLanguages||d(s,n)&&(!l||d(u,n)))}loadNamespaces(n,r){const s=Oi();return this.options.ns?(ge(n)&&(n=[n]),n.forEach(l=>{this.options.ns.indexOf(l)<0&&this.options.ns.push(l)}),this.loadResources(l=>{s.resolve(),r&&r(l)}),s):(r&&r(),Promise.resolve())}loadLanguages(n,r){const s=Oi();ge(n)&&(n=[n]);const l=this.options.preload||[],u=n.filter(d=>l.indexOf(d)<0&&this.services.languageUtils.isSupportedCode(d));return u.length?(this.options.preload=l.concat(u),this.loadResources(d=>{s.resolve(),r&&r(d)}),s):(r&&r(),Promise.resolve())}dir(n){var l,u;if(n||(n=this.resolvedLanguage||(((l=this.languages)==null?void 0:l.length)>0?this.languages[0]:this.language)),!n)return"rtl";const r=["ar","shu","sqr","ssh","xaa","yhd","yud","aao","abh","abv","acm","acq","acw","acx","acy","adf","ads","aeb","aec","afb","ajp","apc","apd","arb","arq","ars","ary","arz","auz","avl","ayh","ayl","ayn","ayp","bbz","pga","he","iw","ps","pbt","pbu","pst","prp","prd","ug","ur","ydd","yds","yih","ji","yi","hbo","men","xmn","fa","jpr","peo","pes","prs","dv","sam","ckb"],s=((u=this.services)==null?void 0:u.languageUtils)||new Up(Bp());return r.indexOf(s.getLanguagePartFromCode(n))>-1||n.toLowerCase().indexOf("-arab")>1?"rtl":"ltr"}static createInstance(){let n=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},r=arguments.length>1?arguments[1]:void 0;return new Ki(n,r)}cloneInstance(){let n=arguments.length>0&&arguments[0]!==void 0?arguments[0]:{},r=arguments.length>1&&arguments[1]!==void 0?arguments[1]:hs;const s=n.forkResourceStore;s&&delete n.forkResourceStore;const l={...this.options,...n,isClone:!0},u=new Ki(l);if((n.debug!==void 0||n.prefix!==void 0)&&(u.logger=u.logger.clone(n)),["store","services","language"].forEach(p=>{u[p]=this[p]}),u.services={...this.services},u.services.utils={hasLoadedNamespace:u.hasLoadedNamespace.bind(u)},s){const p=Object.keys(this.store.data).reduce((h,m)=>(h[m]={...this.store.data[m]},Object.keys(h[m]).reduce((y,v)=>(y[v]={...h[m][v]},y),{})),{});u.store=new Fp(p,l),u.services.resourceStore=u.store}return u.translator=new Ms(u.services,l),u.translator.on("*",function(p){for(var h=arguments.length,m=new Array(h>1?h-1:0),y=1;y<h;y++)m[y-1]=arguments[y];u.emit(p,...m)}),u.init(l,r),u.translator.options=l,u.translator.backendConnector.services.utils={hasLoadedNamespace:u.hasLoadedNamespace.bind(u)},u}toJSON(){return{options:this.options,store:this.store,language:this.language,languages:this.languages,resolvedLanguage:this.resolvedLanguage}}}const it=Ki.createInstance();it.createInstance=Ki.createInstance;it.createInstance;it.dir;it.init;it.loadResources;it.reloadResources;it.use;it.changeLanguage;it.getFixedT;it.t;it.exists;it.setDefaultNamespace;it.hasLoadedNamespace;it.loadNamespaces;it.loadLanguages;const Ev={"Amazon Silk":"amazon_silk","Android Browser":"android",Bada:"bada",BlackBerry:"blackberry",Chrome:"chrome",Chromium:"chromium",Electron:"electron",Epiphany:"epiphany",Firefox:"firefox",Focus:"focus",Generic:"generic","Google Search":"google_search",Googlebot:"googlebot","Internet Explorer":"ie","K-Meleon":"k_meleon",Maxthon:"maxthon","Microsoft Edge":"edge","MZ Browser":"mz","NAVER Whale Browser":"naver",Opera:"opera","Opera Coast":"opera_coast",PhantomJS:"phantomjs",Puffin:"puffin",QupZilla:"qupzilla",QQ:"qq",QQLite:"qqlite",Safari:"safari",Sailfish:"sailfish","Samsung Internet for Android":"samsung_internet",SeaMonkey:"seamonkey",Sleipnir:"sleipnir",Swing:"swing",Tizen:"tizen","UC Browser":"uc",Vivaldi:"vivaldi","WebOS Browser":"webos",WeChat:"wechat","Yandex Browser":"yandex",Roku:"roku"},um={amazon_silk:"Amazon Silk",android:"Android Browser",bada:"Bada",blackberry:"BlackBerry",chrome:"Chrome",chromium:"Chromium",electron:"Electron",epiphany:"Epiphany",firefox:"Firefox",focus:"Focus",generic:"Generic",googlebot:"Googlebot",google_search:"Google Search",ie:"Internet Explorer",k_meleon:"K-Meleon",maxthon:"Maxthon",edge:"Microsoft Edge",mz:"MZ Browser",naver:"NAVER Whale Browser",opera:"Opera",opera_coast:"Opera Coast",phantomjs:"PhantomJS",puffin:"Puffin",qupzilla:"QupZilla",qq:"QQ Browser",qqlite:"QQ Browser Lite",safari:"Safari",sailfish:"Sailfish",samsung_internet:"Samsung Internet for Android",seamonkey:"SeaMonkey",sleipnir:"Sleipnir",swing:"Swing",tizen:"Tizen",uc:"UC Browser",vivaldi:"Vivaldi",webos:"WebOS Browser",wechat:"WeChat",yandex:"Yandex Browser"},Ge={tablet:"tablet",mobile:"mobile",desktop:"desktop",tv:"tv"},yt={WindowsPhone:"Windows Phone",Windows:"Windows",MacOS:"macOS",iOS:"iOS",Android:"Android",WebOS:"WebOS",BlackBerry:"BlackBerry",Bada:"Bada",Tizen:"Tizen",Linux:"Linux",ChromeOS:"Chrome OS",PlayStation4:"PlayStation 4",Roku:"Roku"},jn={EdgeHTML:"EdgeHTML",Blink:"Blink",Trident:"Trident",Presto:"Presto",Gecko:"Gecko",WebKit:"WebKit"};class q{static getFirstMatch(n,r){const s=r.match(n);return s&&s.length>0&&s[1]||""}static getSecondMatch(n,r){const s=r.match(n);return s&&s.length>1&&s[2]||""}static matchAndReturnConst(n,r,s){if(n.test(r))return s}static getWindowsVersionName(n){switch(n){case"NT":return"NT";case"XP":return"XP";case"NT 5.0":return"2000";case"NT 5.1":return"XP";case"NT 5.2":return"2003";case"NT 6.0":return"Vista";case"NT 6.1":return"7";case"NT 6.2":return"8";case"NT 6.3":return"8.1";case"NT 10.0":return"10";default:return}}static getMacOSVersionName(n){const r=n.split(".").splice(0,2).map(s=>parseInt(s,10)||0);if(r.push(0),r[0]===10)switch(r[1]){case 5:return"Leopard";case 6:return"Snow Leopard";case 7:return"Lion";case 8:return"Mountain Lion";case 9:return"Mavericks";case 10:return"Yosemite";case 11:return"El Capitan";case 12:return"Sierra";case 13:return"High Sierra";case 14:return"Mojave";case 15:return"Catalina";default:return}}static getAndroidVersionName(n){const r=n.split(".").splice(0,2).map(s=>parseInt(s,10)||0);if(r.push(0),!(r[0]===1&&r[1]<5)){if(r[0]===1&&r[1]<6)return"Cupcake";if(r[0]===1&&r[1]>=6)return"Donut";if(r[0]===2&&r[1]<2)return"Eclair";if(r[0]===2&&r[1]===2)return"Froyo";if(r[0]===2&&r[1]>2)return"Gingerbread";if(r[0]===3)return"Honeycomb";if(r[0]===4&&r[1]<1)return"Ice Cream Sandwich";if(r[0]===4&&r[1]<4)return"Jelly Bean";if(r[0]===4&&r[1]>=4)return"KitKat";if(r[0]===5)return"Lollipop";if(r[0]===6)return"Marshmallow";if(r[0]===7)return"Nougat";if(r[0]===8)return"Oreo";if(r[0]===9)return"Pie"}}static getVersionPrecision(n){return n.split(".").length}static compareVersions(n,r,s=!1){const l=q.getVersionPrecision(n),u=q.getVersionPrecision(r);let d=Math.max(l,u),p=0;const h=q.map([n,r],m=>{const y=d-q.getVersionPrecision(m),v=m+new Array(y+1).join(".0");return q.map(v.split("."),A=>new Array(20-A.length).join("0")+A).reverse()});for(s&&(p=d-Math.min(l,u)),d-=1;d>=p;){if(h[0][d]>h[1][d])return 1;if(h[0][d]===h[1][d]){if(d===p)return 0;d-=1}else if(h[0][d]<h[1][d])return-1}}static map(n,r){const s=[];let l;if(Array.prototype.map)return Array.prototype.map.call(n,r);for(l=0;l<n.length;l+=1)s.push(r(n[l]));return s}static find(n,r){let s,l;if(Array.prototype.find)return Array.prototype.find.call(n,r);for(s=0,l=n.length;s<l;s+=1){const u=n[s];if(r(u,s))return u}}static assign(n,...r){const s=n;let l,u;if(Object.assign)return Object.assign(n,...r);for(l=0,u=r.length;l<u;l+=1){const d=r[l];typeof d=="object"&&d!==null&&Object.keys(d).forEach(h=>{s[h]=d[h]})}return n}static getBrowserAlias(n){return Ev[n]}static getBrowserTypeByAlias(n){return um[n]||""}}const Oe=/version\/(\d+(\.?_?\d+)+)/i,xv=[{test:[/googlebot/i],describe(i){const n={name:"Googlebot"},r=q.getFirstMatch(/googlebot\/(\d+(\.\d+))/i,i)||q.getFirstMatch(Oe,i);return r&&(n.version=r),n}},{test:[/opera/i],describe(i){const n={name:"Opera"},r=q.getFirstMatch(Oe,i)||q.getFirstMatch(/(?:opera)[\s/](\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test:[/opr\/|opios/i],describe(i){const n={name:"Opera"},r=q.getFirstMatch(/(?:opr|opios)[\s/](\S+)/i,i)||q.getFirstMatch(Oe,i);return r&&(n.version=r),n}},{test:[/SamsungBrowser/i],describe(i){const n={name:"Samsung Internet for Android"},r=q.getFirstMatch(Oe,i)||q.getFirstMatch(/(?:SamsungBrowser)[\s/](\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test:[/Whale/i],describe(i){const n={name:"NAVER Whale Browser"},r=q.getFirstMatch(Oe,i)||q.getFirstMatch(/(?:whale)[\s/](\d+(?:\.\d+)+)/i,i);return r&&(n.version=r),n}},{test:[/MZBrowser/i],describe(i){const n={name:"MZ Browser"},r=q.getFirstMatch(/(?:MZBrowser)[\s/](\d+(?:\.\d+)+)/i,i)||q.getFirstMatch(Oe,i);return r&&(n.version=r),n}},{test:[/focus/i],describe(i){const n={name:"Focus"},r=q.getFirstMatch(/(?:focus)[\s/](\d+(?:\.\d+)+)/i,i)||q.getFirstMatch(Oe,i);return r&&(n.version=r),n}},{test:[/swing/i],describe(i){const n={name:"Swing"},r=q.getFirstMatch(/(?:swing)[\s/](\d+(?:\.\d+)+)/i,i)||q.getFirstMatch(Oe,i);return r&&(n.version=r),n}},{test:[/coast/i],describe(i){const n={name:"Opera Coast"},r=q.getFirstMatch(Oe,i)||q.getFirstMatch(/(?:coast)[\s/](\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test:[/opt\/\d+(?:.?_?\d+)+/i],describe(i){const n={name:"Opera Touch"},r=q.getFirstMatch(/(?:opt)[\s/](\d+(\.?_?\d+)+)/i,i)||q.getFirstMatch(Oe,i);return r&&(n.version=r),n}},{test:[/yabrowser/i],describe(i){const n={name:"Yandex Browser"},r=q.getFirstMatch(/(?:yabrowser)[\s/](\d+(\.?_?\d+)+)/i,i)||q.getFirstMatch(Oe,i);return r&&(n.version=r),n}},{test:[/ucbrowser/i],describe(i){const n={name:"UC Browser"},r=q.getFirstMatch(Oe,i)||q.getFirstMatch(/(?:ucbrowser)[\s/](\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test:[/Maxthon|mxios/i],describe(i){const n={name:"Maxthon"},r=q.getFirstMatch(Oe,i)||q.getFirstMatch(/(?:Maxthon|mxios)[\s/](\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test:[/epiphany/i],describe(i){const n={name:"Epiphany"},r=q.getFirstMatch(Oe,i)||q.getFirstMatch(/(?:epiphany)[\s/](\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test:[/puffin/i],describe(i){const n={name:"Puffin"},r=q.getFirstMatch(Oe,i)||q.getFirstMatch(/(?:puffin)[\s/](\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test:[/sleipnir/i],describe(i){const n={name:"Sleipnir"},r=q.getFirstMatch(Oe,i)||q.getFirstMatch(/(?:sleipnir)[\s/](\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test:[/k-meleon/i],describe(i){const n={name:"K-Meleon"},r=q.getFirstMatch(Oe,i)||q.getFirstMatch(/(?:k-meleon)[\s/](\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test:[/micromessenger/i],describe(i){const n={name:"WeChat"},r=q.getFirstMatch(/(?:micromessenger)[\s/](\d+(\.?_?\d+)+)/i,i)||q.getFirstMatch(Oe,i);return r&&(n.version=r),n}},{test:[/qqbrowser/i],describe(i){const n={name:/qqbrowserlite/i.test(i)?"QQ Browser Lite":"QQ Browser"},r=q.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\d+(\.?_?\d+)+)/i,i)||q.getFirstMatch(Oe,i);return r&&(n.version=r),n}},{test:[/msie|trident/i],describe(i){const n={name:"Internet Explorer"},r=q.getFirstMatch(/(?:msie |rv:)(\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test:[/\sedg\//i],describe(i){const n={name:"Microsoft Edge"},r=q.getFirstMatch(/\sedg\/(\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test:[/edg([ea]|ios)/i],describe(i){const n={name:"Microsoft Edge"},r=q.getSecondMatch(/edg([ea]|ios)\/(\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test:[/vivaldi/i],describe(i){const n={name:"Vivaldi"},r=q.getFirstMatch(/vivaldi\/(\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test:[/seamonkey/i],describe(i){const n={name:"SeaMonkey"},r=q.getFirstMatch(/seamonkey\/(\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test:[/sailfish/i],describe(i){const n={name:"Sailfish"},r=q.getFirstMatch(/sailfish\s?browser\/(\d+(\.\d+)?)/i,i);return r&&(n.version=r),n}},{test:[/silk/i],describe(i){const n={name:"Amazon Silk"},r=q.getFirstMatch(/silk\/(\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test:[/phantom/i],describe(i){const n={name:"PhantomJS"},r=q.getFirstMatch(/phantomjs\/(\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test:[/slimerjs/i],describe(i){const n={name:"SlimerJS"},r=q.getFirstMatch(/slimerjs\/(\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test:[/blackberry|\bbb\d+/i,/rim\stablet/i],describe(i){const n={name:"BlackBerry"},r=q.getFirstMatch(Oe,i)||q.getFirstMatch(/blackberry[\d]+\/(\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test:[/(web|hpw)[o0]s/i],describe(i){const n={name:"WebOS Browser"},r=q.getFirstMatch(Oe,i)||q.getFirstMatch(/w(?:eb)?[o0]sbrowser\/(\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test:[/bada/i],describe(i){const n={name:"Bada"},r=q.getFirstMatch(/dolfin\/(\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test:[/tizen/i],describe(i){const n={name:"Tizen"},r=q.getFirstMatch(/(?:tizen\s?)?browser\/(\d+(\.?_?\d+)+)/i,i)||q.getFirstMatch(Oe,i);return r&&(n.version=r),n}},{test:[/qupzilla/i],describe(i){const n={name:"QupZilla"},r=q.getFirstMatch(/(?:qupzilla)[\s/](\d+(\.?_?\d+)+)/i,i)||q.getFirstMatch(Oe,i);return r&&(n.version=r),n}},{test:[/firefox|iceweasel|fxios/i],describe(i){const n={name:"Firefox"},r=q.getFirstMatch(/(?:firefox|iceweasel|fxios)[\s/](\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test:[/electron/i],describe(i){const n={name:"Electron"},r=q.getFirstMatch(/(?:electron)\/(\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test:[/MiuiBrowser/i],describe(i){const n={name:"Miui"},r=q.getFirstMatch(/(?:MiuiBrowser)[\s/](\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test:[/chromium/i],describe(i){const n={name:"Chromium"},r=q.getFirstMatch(/(?:chromium)[\s/](\d+(\.?_?\d+)+)/i,i)||q.getFirstMatch(Oe,i);return r&&(n.version=r),n}},{test:[/chrome|crios|crmo/i],describe(i){const n={name:"Chrome"},r=q.getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test:[/GSA/i],describe(i){const n={name:"Google Search"},r=q.getFirstMatch(/(?:GSA)\/(\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test(i){const n=!i.test(/like android/i),r=i.test(/android/i);return n&&r},describe(i){const n={name:"Android Browser"},r=q.getFirstMatch(Oe,i);return r&&(n.version=r),n}},{test:[/playstation 4/i],describe(i){const n={name:"PlayStation 4"},r=q.getFirstMatch(Oe,i);return r&&(n.version=r),n}},{test:[/safari|applewebkit/i],describe(i){const n={name:"Safari"},r=q.getFirstMatch(Oe,i);return r&&(n.version=r),n}},{test:[/.*/i],describe(i){const n=/^(.*)\/(.*) /,r=/^(.*)\/(.*)[ \t]\((.*)/,l=i.search("\\(")!==-1?r:n;return{name:q.getFirstMatch(l,i),version:q.getSecondMatch(l,i)}}}],Sv=[{test:[/Roku\/DVP/],describe(i){const n=q.getFirstMatch(/Roku\/DVP-(\d+\.\d+)/i,i);return{name:yt.Roku,version:n}}},{test:[/windows phone/i],describe(i){const n=q.getFirstMatch(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i,i);return{name:yt.WindowsPhone,version:n}}},{test:[/windows /i],describe(i){const n=q.getFirstMatch(/Windows ((NT|XP)( \d\d?.\d)?)/i,i),r=q.getWindowsVersionName(n);return{name:yt.Windows,version:n,versionName:r}}},{test:[/Macintosh(.*?) FxiOS(.*?)\//],describe(i){const n={name:yt.iOS},r=q.getSecondMatch(/(Version\/)(\d[\d.]+)/,i);return r&&(n.version=r),n}},{test:[/macintosh/i],describe(i){const n=q.getFirstMatch(/mac os x (\d+(\.?_?\d+)+)/i,i).replace(/[_\s]/g,"."),r=q.getMacOSVersionName(n),s={name:yt.MacOS,version:n};return r&&(s.versionName=r),s}},{test:[/(ipod|iphone|ipad)/i],describe(i){const n=q.getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i,i).replace(/[_\s]/g,".");return{name:yt.iOS,version:n}}},{test(i){const n=!i.test(/like android/i),r=i.test(/android/i);return n&&r},describe(i){const n=q.getFirstMatch(/android[\s/-](\d+(\.\d+)*)/i,i),r=q.getAndroidVersionName(n),s={name:yt.Android,version:n};return r&&(s.versionName=r),s}},{test:[/(web|hpw)[o0]s/i],describe(i){const n=q.getFirstMatch(/(?:web|hpw)[o0]s\/(\d+(\.\d+)*)/i,i),r={name:yt.WebOS};return n&&n.length&&(r.version=n),r}},{test:[/blackberry|\bbb\d+/i,/rim\stablet/i],describe(i){const n=q.getFirstMatch(/rim\stablet\sos\s(\d+(\.\d+)*)/i,i)||q.getFirstMatch(/blackberry\d+\/(\d+([_\s]\d+)*)/i,i)||q.getFirstMatch(/\bbb(\d+)/i,i);return{name:yt.BlackBerry,version:n}}},{test:[/bada/i],describe(i){const n=q.getFirstMatch(/bada\/(\d+(\.\d+)*)/i,i);return{name:yt.Bada,version:n}}},{test:[/tizen/i],describe(i){const n=q.getFirstMatch(/tizen[/\s](\d+(\.\d+)*)/i,i);return{name:yt.Tizen,version:n}}},{test:[/linux/i],describe(){return{name:yt.Linux}}},{test:[/CrOS/],describe(){return{name:yt.ChromeOS}}},{test:[/PlayStation 4/],describe(i){const n=q.getFirstMatch(/PlayStation 4[/\s](\d+(\.\d+)*)/i,i);return{name:yt.PlayStation4,version:n}}}],bv=[{test:[/googlebot/i],describe(){return{type:"bot",vendor:"Google"}}},{test:[/huawei/i],describe(i){const n=q.getFirstMatch(/(can-l01)/i,i)&&"Nova",r={type:Ge.mobile,vendor:"Huawei"};return n&&(r.model=n),r}},{test:[/nexus\s*(?:7|8|9|10).*/i],describe(){return{type:Ge.tablet,vendor:"Nexus"}}},{test:[/ipad/i],describe(){return{type:Ge.tablet,vendor:"Apple",model:"iPad"}}},{test:[/Macintosh(.*?) FxiOS(.*?)\//],describe(){return{type:Ge.tablet,vendor:"Apple",model:"iPad"}}},{test:[/kftt build/i],describe(){return{type:Ge.tablet,vendor:"Amazon",model:"Kindle Fire HD 7"}}},{test:[/silk/i],describe(){return{type:Ge.tablet,vendor:"Amazon"}}},{test:[/tablet(?! pc)/i],describe(){return{type:Ge.tablet}}},{test(i){const n=i.test(/ipod|iphone/i),r=i.test(/like (ipod|iphone)/i);return n&&!r},describe(i){const n=q.getFirstMatch(/(ipod|iphone)/i,i);return{type:Ge.mobile,vendor:"Apple",model:n}}},{test:[/nexus\s*[0-6].*/i,/galaxy nexus/i],describe(){return{type:Ge.mobile,vendor:"Nexus"}}},{test:[/[^-]mobi/i],describe(){return{type:Ge.mobile}}},{test(i){return i.getBrowserName(!0)==="blackberry"},describe(){return{type:Ge.mobile,vendor:"BlackBerry"}}},{test(i){return i.getBrowserName(!0)==="bada"},describe(){return{type:Ge.mobile}}},{test(i){return i.getBrowserName()==="windows phone"},describe(){return{type:Ge.mobile,vendor:"Microsoft"}}},{test(i){const n=Number(String(i.getOSVersion()).split(".")[0]);return i.getOSName(!0)==="android"&&n>=3},describe(){return{type:Ge.tablet}}},{test(i){return i.getOSName(!0)==="android"},describe(){return{type:Ge.mobile}}},{test(i){return i.getOSName(!0)==="macos"},describe(){return{type:Ge.desktop,vendor:"Apple"}}},{test(i){return i.getOSName(!0)==="windows"},describe(){return{type:Ge.desktop}}},{test(i){return i.getOSName(!0)==="linux"},describe(){return{type:Ge.desktop}}},{test(i){return i.getOSName(!0)==="playstation 4"},describe(){return{type:Ge.tv}}},{test(i){return i.getOSName(!0)==="roku"},describe(){return{type:Ge.tv}}}],kv=[{test(i){return i.getBrowserName(!0)==="microsoft edge"},describe(i){if(/\sedg\//i.test(i))return{name:jn.Blink};const r=q.getFirstMatch(/edge\/(\d+(\.?_?\d+)+)/i,i);return{name:jn.EdgeHTML,version:r}}},{test:[/trident/i],describe(i){const n={name:jn.Trident},r=q.getFirstMatch(/trident\/(\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test(i){return i.test(/presto/i)},describe(i){const n={name:jn.Presto},r=q.getFirstMatch(/presto\/(\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test(i){const n=i.test(/gecko/i),r=i.test(/like gecko/i);return n&&!r},describe(i){const n={name:jn.Gecko},r=q.getFirstMatch(/gecko\/(\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}},{test:[/(apple)?webkit\/537\.36/i],describe(){return{name:jn.Blink}}},{test:[/(apple)?webkit/i],describe(i){const n={name:jn.WebKit},r=q.getFirstMatch(/webkit\/(\d+(\.?_?\d+)+)/i,i);return r&&(n.version=r),n}}];class Dp{constructor(n,r=!1){if(n==null||n==="")throw new Error("UserAgent parameter can't be empty");this._ua=n,this.parsedResult={},r!==!0&&this.parse()}getUA(){return this._ua}test(n){return n.test(this._ua)}parseBrowser(){this.parsedResult.browser={};const n=q.find(xv,r=>{if(typeof r.test=="function")return r.test(this);if(r.test instanceof Array)return r.test.some(s=>this.test(s));throw new Error("Browser's test function is not valid")});return n&&(this.parsedResult.browser=n.describe(this.getUA())),this.parsedResult.browser}getBrowser(){return this.parsedResult.browser?this.parsedResult.browser:this.parseBrowser()}getBrowserName(n){return n?String(this.getBrowser().name).toLowerCase()||"":this.getBrowser().name||""}getBrowserVersion(){return this.getBrowser().version}getOS(){return this.parsedResult.os?this.parsedResult.os:this.parseOS()}parseOS(){this.parsedResult.os={};const n=q.find(Sv,r=>{if(typeof r.test=="function")return r.test(this);if(r.test instanceof Array)return r.test.some(s=>this.test(s));throw new Error("Browser's test function is not valid")});return n&&(this.parsedResult.os=n.describe(this.getUA())),this.parsedResult.os}getOSName(n){const{name:r}=this.getOS();return n?String(r).toLowerCase()||"":r||""}getOSVersion(){return this.getOS().version}getPlatform(){return this.parsedResult.platform?this.parsedResult.platform:this.parsePlatform()}getPlatformType(n=!1){const{type:r}=this.getPlatform();return n?String(r).toLowerCase()||"":r||""}parsePlatform(){this.parsedResult.platform={};const n=q.find(bv,r=>{if(typeof r.test=="function")return r.test(this);if(r.test instanceof Array)return r.test.some(s=>this.test(s));throw new Error("Browser's test function is not valid")});return n&&(this.parsedResult.platform=n.describe(this.getUA())),this.parsedResult.platform}getEngine(){return this.parsedResult.engine?this.parsedResult.engine:this.parseEngine()}getEngineName(n){return n?String(this.getEngine().name).toLowerCase()||"":this.getEngine().name||""}parseEngine(){this.parsedResult.engine={};const n=q.find(kv,r=>{if(typeof r.test=="function")return r.test(this);if(r.test instanceof Array)return r.test.some(s=>this.test(s));throw new Error("Browser's test function is not valid")});return n&&(this.parsedResult.engine=n.describe(this.getUA())),this.parsedResult.engine}parse(){return this.parseBrowser(),this.parseOS(),this.parsePlatform(),this.parseEngine(),this}getResult(){return q.assign({},this.parsedResult)}satisfies(n){const r={};let s=0;const l={};let u=0;if(Object.keys(n).forEach(p=>{const h=n[p];typeof h=="string"?(l[p]=h,u+=1):typeof h=="object"&&(r[p]=h,s+=1)}),s>0){const p=Object.keys(r),h=q.find(p,y=>this.isOS(y));if(h){const y=this.satisfies(r[h]);if(y!==void 0)return y}const m=q.find(p,y=>this.isPlatform(y));if(m){const y=this.satisfies(r[m]);if(y!==void 0)return y}}if(u>0){const p=Object.keys(l),h=q.find(p,m=>this.isBrowser(m,!0));if(h!==void 0)return this.compareVersion(l[h])}}isBrowser(n,r=!1){const s=this.getBrowserName().toLowerCase();let l=n.toLowerCase();const u=q.getBrowserTypeByAlias(l);return r&&u&&(l=u.toLowerCase()),l===s}compareVersion(n){let r=[0],s=n,l=!1;const u=this.getBrowserVersion();if(typeof u=="string")return n[0]===">"||n[0]==="<"?(s=n.substr(1),n[1]==="="?(l=!0,s=n.substr(2)):r=[],n[0]===">"?r.push(1):r.push(-1)):n[0]==="="?s=n.substr(1):n[0]==="~"&&(l=!0,s=n.substr(1)),r.indexOf(q.compareVersions(u,s,l))>-1}isOS(n){return this.getOSName(!0)===String(n).toLowerCase()}isPlatform(n){return this.getPlatformType(!0)===String(n).toLowerCase()}isEngine(n){return this.getEngineName(!0)===String(n).toLowerCase()}is(n,r=!1){return this.isBrowser(n,r)||this.isOS(n)||this.isPlatform(n)}some(n=[]){return n.some(r=>this.is(r))}}/*!
 * Bowser - a browser detector
 * https://github.com/lancedikson/bowser
 * MIT License | (c) Dustin Diaz 2012-2015
 * MIT License | (c) Denis Demchenko 2015-2019
 */class Rv{static getParser(n,r=!1){if(typeof n!="string")throw new Error("UserAgent should be a string");return new Dp(n,r)}static parse(n){return new Dp(n).getResult()}static get BROWSER_MAP(){return um}static get ENGINE_MAP(){return jn}static get OS_MAP(){return yt}static get PLATFORMS_MAP(){return Ge}}function Iv(i){if(i.sheet)return i.sheet;for(var n=0;n<document.styleSheets.length;n++)if(document.styleSheets[n].ownerNode===i)return document.styleSheets[n]}function Nv(i){var n=document.createElement("style");return n.setAttribute("data-emotion",i.key),i.nonce!==void 0&&n.setAttribute("nonce",i.nonce),n.appendChild(document.createTextNode("")),n.setAttribute("data-s",""),n}var Mv=function(){function i(r){var s=this;this._insertTag=function(l){var u;s.tags.length===0?s.insertionPoint?u=s.insertionPoint.nextSibling:s.prepend?u=s.container.firstChild:u=s.before:u=s.tags[s.tags.length-1].nextSibling,s.container.insertBefore(l,u),s.tags.push(l)},this.isSpeedy=r.speedy===void 0?!0:r.speedy,this.tags=[],this.ctr=0,this.nonce=r.nonce,this.key=r.key,this.container=r.container,this.prepend=r.prepend,this.insertionPoint=r.insertionPoint,this.before=null}var n=i.prototype;return n.hydrate=function(s){s.forEach(this._insertTag)},n.insert=function(s){this.ctr%(this.isSpeedy?65e3:1)===0&&this._insertTag(Nv(this));var l=this.tags[this.tags.length-1];if(this.isSpeedy){var u=Iv(l);try{u.insertRule(s,u.cssRules.length)}catch{}}else l.appendChild(document.createTextNode(s));this.ctr++},n.flush=function(){this.tags.forEach(function(s){var l;return(l=s.parentNode)==null?void 0:l.removeChild(s)}),this.tags=[],this.ctr=0},i}(),pt="-ms-",Ls="-moz-",Te="-webkit-",cm="comm",_u="rule",$u="decl",Lv="@import",dm="@keyframes",Tv="@layer",Vv=Math.abs,Gs=String.fromCharCode,Fv=Object.assign;function Ov(i,n){return at(i,0)^45?(((n<<2^at(i,0))<<2^at(i,1))<<2^at(i,2))<<2^at(i,3):0}function fm(i){return i.trim()}function Pv(i,n){return(i=n.exec(i))?i[0]:i}function Ve(i,n,r){return i.replace(n,r)}function Uu(i,n){return i.indexOf(n)}function at(i,n){return i.charCodeAt(n)|0}function Qi(i,n,r){return i.slice(n,r)}function on(i){return i.length}function ec(i){return i.length}function ms(i,n){return n.push(i),i}function Uv(i,n){return i.map(n).join("")}var Zs=1,Wr=1,pm=0,bt=0,He=0,Qr="";function Js(i,n,r,s,l,u,d){return{value:i,root:n,parent:r,type:s,props:l,children:u,line:Zs,column:Wr,length:d,return:""}}function Pi(i,n){return Fv(Js("",null,null,"",null,null,0),i,{length:-i.length},n)}function zv(){return He}function qv(){return He=bt>0?at(Qr,--bt):0,Wr--,He===10&&(Wr=1,Zs--),He}function Vt(){return He=bt<pm?at(Qr,bt++):0,Wr++,He===10&&(Wr=1,Zs++),He}function ln(){return at(Qr,bt)}function Cs(){return bt}function eo(i,n){return Qi(Qr,i,n)}function Yi(i){switch(i){case 0:case 9:case 10:case 13:case 32:return 5;case 33:case 43:case 44:case 47:case 62:case 64:case 126:case 59:case 123:case 125:return 4;case 58:return 3;case 34:case 39:case 40:case 91:return 2;case 41:case 93:return 1}return 0}function hm(i){return Zs=Wr=1,pm=on(Qr=i),bt=0,[]}function mm(i){return Qr="",i}function Es(i){return fm(eo(bt-1,zu(i===91?i+2:i===40?i+1:i)))}function jv(i){for(;(He=ln())&&He<33;)Vt();return Yi(i)>2||Yi(He)>3?"":" "}function Bv(i,n){for(;--n&&Vt()&&!(He<48||He>102||He>57&&He<65||He>70&&He<97););return eo(i,Cs()+(n<6&&ln()==32&&Vt()==32))}function zu(i){for(;Vt();)switch(He){case i:return bt;case 34:case 39:i!==34&&i!==39&&zu(He);break;case 40:i===41&&zu(i);break;case 92:Vt();break}return bt}function Wv(i,n){for(;Vt()&&i+He!==57;)if(i+He===84&&ln()===47)break;return"/*"+eo(n,bt-1)+"*"+Gs(i===47?i:Vt())}function Dv(i){for(;!Yi(ln());)Vt();return eo(i,bt)}function Kv(i){return mm(xs("",null,null,null,[""],i=hm(i),0,[0],i))}function xs(i,n,r,s,l,u,d,p,h){for(var m=0,y=0,v=d,A=0,R=0,C=0,x=1,k=1,V=1,P=0,U="",B=l,ne=u,T=s,O=U;k;)switch(C=P,P=Vt()){case 40:if(C!=108&&at(O,v-1)==58){Uu(O+=Ve(Es(P),"&","&\f"),"&\f")!=-1&&(V=-1);break}case 34:case 39:case 91:O+=Es(P);break;case 9:case 10:case 13:case 32:O+=jv(C);break;case 92:O+=Bv(Cs()-1,7);continue;case 47:switch(ln()){case 42:case 47:ms(Qv(Wv(Vt(),Cs()),n,r),h);break;default:O+="/"}break;case 123*x:p[m++]=on(O)*V;case 125*x:case 59:case 0:switch(P){case 0:case 125:k=0;case 59+y:V==-1&&(O=Ve(O,/\f/g,"")),R>0&&on(O)-v&&ms(R>32?Qp(O+";",s,r,v-1):Qp(Ve(O," ","")+";",s,r,v-2),h);break;case 59:O+=";";default:if(ms(T=Kp(O,n,r,m,y,l,p,U,B=[],ne=[],v),u),P===123)if(y===0)xs(O,n,T,T,B,u,v,p,ne);else switch(A===99&&at(O,3)===110?100:A){case 100:case 108:case 109:case 115:xs(i,T,T,s&&ms(Kp(i,T,T,0,0,l,p,U,l,B=[],v),ne),l,ne,v,p,s?B:ne);break;default:xs(O,T,T,T,[""],ne,0,p,ne)}}m=y=R=0,x=V=1,U=O="",v=d;break;case 58:v=1+on(O),R=C;default:if(x<1){if(P==123)--x;else if(P==125&&x++==0&&qv()==125)continue}switch(O+=Gs(P),P*x){case 38:V=y>0?1:(O+="\f",-1);break;case 44:p[m++]=(on(O)-1)*V,V=1;break;case 64:ln()===45&&(O+=Es(Vt())),A=ln(),y=v=on(U=O+=Dv(Cs())),P++;break;case 45:C===45&&on(O)==2&&(x=0)}}return u}function Kp(i,n,r,s,l,u,d,p,h,m,y){for(var v=l-1,A=l===0?u:[""],R=ec(A),C=0,x=0,k=0;C<s;++C)for(var V=0,P=Qi(i,v+1,v=Vv(x=d[C])),U=i;V<R;++V)(U=fm(x>0?A[V]+" "+P:Ve(P,/&\f/g,A[V])))&&(h[k++]=U);return Js(i,n,r,l===0?_u:p,h,m,y)}function Qv(i,n,r){return Js(i,n,r,cm,Gs(zv()),Qi(i,2,-2),0)}function Qp(i,n,r,s){return Js(i,n,r,$u,Qi(i,0,s),Qi(i,s+1,-1),s)}function jr(i,n){for(var r="",s=ec(i),l=0;l<s;l++)r+=n(i[l],l,i,n)||"";return r}function Yv(i,n,r,s){switch(i.type){case Tv:if(i.children.length)break;case Lv:case $u:return i.return=i.return||i.value;case cm:return"";case dm:return i.return=i.value+"{"+jr(i.children,s)+"}";case _u:i.value=i.props.join(",")}return on(r=jr(i.children,s))?i.return=i.value+"{"+r+"}":""}function Gv(i){var n=ec(i);return function(r,s,l,u){for(var d="",p=0;p<n;p++)d+=i[p](r,s,l,u)||"";return d}}function Zv(i){return function(n){n.root||(n=n.return)&&i(n)}}function Jv(i){var n=Object.create(null);return function(r){return n[r]===void 0&&(n[r]=i(r)),n[r]}}var Hv=function(n,r,s){for(var l=0,u=0;l=u,u=ln(),l===38&&u===12&&(r[s]=1),!Yi(u);)Vt();return eo(n,bt)},Xv=function(n,r){var s=-1,l=44;do switch(Yi(l)){case 0:l===38&&ln()===12&&(r[s]=1),n[s]+=Hv(bt-1,r,s);break;case 2:n[s]+=Es(l);break;case 4:if(l===44){n[++s]=ln()===58?"&\f":"",r[s]=n[s].length;break}default:n[s]+=Gs(l)}while(l=Vt());return n},_v=function(n,r){return mm(Xv(hm(n),r))},Yp=new WeakMap,$v=function(n){if(!(n.type!=="rule"||!n.parent||n.length<1)){for(var r=n.value,s=n.parent,l=n.column===s.column&&n.line===s.line;s.type!=="rule";)if(s=s.parent,!s)return;if(!(n.props.length===1&&r.charCodeAt(0)!==58&&!Yp.get(s))&&!l){Yp.set(n,!0);for(var u=[],d=_v(r,u),p=s.props,h=0,m=0;h<d.length;h++)for(var y=0;y<p.length;y++,m++)n.props[m]=u[h]?d[h].replace(/&\f/g,p[y]):p[y]+" "+d[h]}}},eA=function(n){if(n.type==="decl"){var r=n.value;r.charCodeAt(0)===108&&r.charCodeAt(2)===98&&(n.return="",n.value="")}};function gm(i,n){switch(Ov(i,n)){case 5103:return Te+"print-"+i+i;case 5737:case 4201:case 3177:case 3433:case 1641:case 4457:case 2921:case 5572:case 6356:case 5844:case 3191:case 6645:case 3005:case 6391:case 5879:case 5623:case 6135:case 4599:case 4855:case 4215:case 6389:case 5109:case 5365:case 5621:case 3829:return Te+i+i;case 5349:case 4246:case 4810:case 6968:case 2756:return Te+i+Ls+i+pt+i+i;case 6828:case 4268:return Te+i+pt+i+i;case 6165:return Te+i+pt+"flex-"+i+i;case 5187:return Te+i+Ve(i,/(\w+).+(:[^]+)/,Te+"box-$1$2"+pt+"flex-$1$2")+i;case 5443:return Te+i+pt+"flex-item-"+Ve(i,/flex-|-self/,"")+i;case 4675:return Te+i+pt+"flex-line-pack"+Ve(i,/align-content|flex-|-self/,"")+i;case 5548:return Te+i+pt+Ve(i,"shrink","negative")+i;case 5292:return Te+i+pt+Ve(i,"basis","preferred-size")+i;case 6060:return Te+"box-"+Ve(i,"-grow","")+Te+i+pt+Ve(i,"grow","positive")+i;case 4554:return Te+Ve(i,/([^-])(transform)/g,"$1"+Te+"$2")+i;case 6187:return Ve(Ve(Ve(i,/(zoom-|grab)/,Te+"$1"),/(image-set)/,Te+"$1"),i,"")+i;case 5495:case 3959:return Ve(i,/(image-set\([^]*)/,Te+"$1$`$1");case 4968:return Ve(Ve(i,/(.+:)(flex-)?(.*)/,Te+"box-pack:$3"+pt+"flex-pack:$3"),/s.+-b[^;]+/,"justify")+Te+i+i;case 4095:case 3583:case 4068:case 2532:return Ve(i,/(.+)-inline(.+)/,Te+"$1$2")+i;case 8116:case 7059:case 5753:case 5535:case 5445:case 5701:case 4933:case 4677:case 5533:case 5789:case 5021:case 4765:if(on(i)-1-n>6)switch(at(i,n+1)){case 109:if(at(i,n+4)!==45)break;case 102:return Ve(i,/(.+:)(.+)-([^]+)/,"$1"+Te+"$2-$3$1"+Ls+(at(i,n+3)==108?"$3":"$2-$3"))+i;case 115:return~Uu(i,"stretch")?gm(Ve(i,"stretch","fill-available"),n)+i:i}break;case 4949:if(at(i,n+1)!==115)break;case 6444:switch(at(i,on(i)-3-(~Uu(i,"!important")&&10))){case 107:return Ve(i,":",":"+Te)+i;case 101:return Ve(i,/(.+:)([^;!]+)(;|!.+)?/,"$1"+Te+(at(i,14)===45?"inline-":"")+"box$3$1"+Te+"$2$3$1"+pt+"$2box$3")+i}break;case 5936:switch(at(i,n+11)){case 114:return Te+i+pt+Ve(i,/[svh]\w+-[tblr]{2}/,"tb")+i;case 108:return Te+i+pt+Ve(i,/[svh]\w+-[tblr]{2}/,"tb-rl")+i;case 45:return Te+i+pt+Ve(i,/[svh]\w+-[tblr]{2}/,"lr")+i}return Te+i+pt+i+i}return i}var tA=function(n,r,s,l){if(n.length>-1&&!n.return)switch(n.type){case $u:n.return=gm(n.value,n.length);break;case dm:return jr([Pi(n,{value:Ve(n.value,"@","@"+Te)})],l);case _u:if(n.length)return Uv(n.props,function(u){switch(Pv(u,/(::plac\w+|:read-\w+)/)){case":read-only":case":read-write":return jr([Pi(n,{props:[Ve(u,/:(read-\w+)/,":"+Ls+"$1")]})],l);case"::placeholder":return jr([Pi(n,{props:[Ve(u,/:(plac\w+)/,":"+Te+"input-$1")]}),Pi(n,{props:[Ve(u,/:(plac\w+)/,":"+Ls+"$1")]}),Pi(n,{props:[Ve(u,/:(plac\w+)/,pt+"input-$1")]})],l)}return""})}},nA=[tA],rA=function(n){var r=n.key;if(r==="css"){var s=document.querySelectorAll("style[data-emotion]:not([data-s])");Array.prototype.forEach.call(s,function(x){var k=x.getAttribute("data-emotion");k.indexOf(" ")!==-1&&(document.head.appendChild(x),x.setAttribute("data-s",""))})}var l=n.stylisPlugins||nA,u={},d,p=[];d=n.container||document.head,Array.prototype.forEach.call(document.querySelectorAll('style[data-emotion^="'+r+' "]'),function(x){for(var k=x.getAttribute("data-emotion").split(" "),V=1;V<k.length;V++)u[k[V]]=!0;p.push(x)});var h,m=[$v,eA];{var y,v=[Yv,Zv(function(x){y.insert(x)})],A=Gv(m.concat(l,v)),R=function(k){return jr(Kv(k),A)};h=function(k,V,P,U){y=P,R(k?k+"{"+V.styles+"}":V.styles),U&&(C.inserted[V.name]=!0)}}var C={key:r,sheet:new Mv({key:r,container:d,nonce:n.nonce,speedy:n.speedy,prepend:n.prepend,insertionPoint:n.insertionPoint}),nonce:n.nonce,inserted:u,registered:{},insert:h};return C.sheet.hydrate(p),C};function iA(i){for(var n=0,r,s=0,l=i.length;l>=4;++s,l-=4)r=i.charCodeAt(s)&255|(i.charCodeAt(++s)&255)<<8|(i.charCodeAt(++s)&255)<<16|(i.charCodeAt(++s)&255)<<24,r=(r&65535)*1540483477+((r>>>16)*59797<<16),r^=r>>>24,n=(r&65535)*1540483477+((r>>>16)*59797<<16)^(n&65535)*1540483477+((n>>>16)*59797<<16);switch(l){case 3:n^=(i.charCodeAt(s+2)&255)<<16;case 2:n^=(i.charCodeAt(s+1)&255)<<8;case 1:n^=i.charCodeAt(s)&255,n=(n&65535)*1540483477+((n>>>16)*59797<<16)}return n^=n>>>13,n=(n&65535)*1540483477+((n>>>16)*59797<<16),((n^n>>>15)>>>0).toString(36)}var oA={animationIterationCount:1,aspectRatio:1,borderImageOutset:1,borderImageSlice:1,borderImageWidth:1,boxFlex:1,boxFlexGroup:1,boxOrdinalGroup:1,columnCount:1,columns:1,flex:1,flexGrow:1,flexPositive:1,flexShrink:1,flexNegative:1,flexOrder:1,gridRow:1,gridRowEnd:1,gridRowSpan:1,gridRowStart:1,gridColumn:1,gridColumnEnd:1,gridColumnSpan:1,gridColumnStart:1,msGridRow:1,msGridRowSpan:1,msGridColumn:1,msGridColumnSpan:1,fontWeight:1,lineHeight:1,opacity:1,order:1,orphans:1,scale:1,tabSize:1,widows:1,zIndex:1,zoom:1,WebkitLineClamp:1,fillOpacity:1,floodOpacity:1,stopOpacity:1,strokeDasharray:1,strokeDashoffset:1,strokeMiterlimit:1,strokeOpacity:1,strokeWidth:1},sA=/[A-Z]|^ms/g,lA=/_EMO_([^_]+?)_([^]*?)_EMO_/g,ym=function(n){return n.charCodeAt(1)===45},Gp=function(n){return n!=null&&typeof n!="boolean"},tu=Jv(function(i){return ym(i)?i:i.replace(sA,"-$&").toLowerCase()}),Zp=function(n,r){switch(n){case"animation":case"animationName":if(typeof r=="string")return r.replace(lA,function(s,l,u){return Wn={name:l,styles:u,next:Wn},l})}return oA[n]!==1&&!ym(n)&&typeof r=="number"&&r!==0?r+"px":r};function Ts(i,n,r){if(r==null)return"";var s=r;if(s.__emotion_styles!==void 0)return s;switch(typeof r){case"boolean":return"";case"object":{var l=r;if(l.anim===1)return Wn={name:l.name,styles:l.styles,next:Wn},l.name;var u=r;if(u.styles!==void 0){var d=u.next;if(d!==void 0)for(;d!==void 0;)Wn={name:d.name,styles:d.styles,next:Wn},d=d.next;var p=u.styles+";";return p}return aA(i,n,r)}}var h=r;if(n==null)return h;var m=n[h];return m!==void 0?m:h}function aA(i,n,r){var s="";if(Array.isArray(r))for(var l=0;l<r.length;l++)s+=Ts(i,n,r[l])+";";else for(var u in r){var d=r[u];if(typeof d!="object"){var p=d;n!=null&&n[p]!==void 0?s+=u+"{"+n[p]+"}":Gp(p)&&(s+=tu(u)+":"+Zp(u,p)+";")}else if(Array.isArray(d)&&typeof d[0]=="string"&&(n==null||n[d[0]]===void 0))for(var h=0;h<d.length;h++)Gp(d[h])&&(s+=tu(u)+":"+Zp(u,d[h])+";");else{var m=Ts(i,n,d);switch(u){case"animation":case"animationName":{s+=tu(u)+":"+m+";";break}default:s+=u+"{"+m+"}"}}}return s}var Jp=/label:\s*([^\s;{]+)\s*(;|$)/g,Wn;function nu(i,n,r){if(i.length===1&&typeof i[0]=="object"&&i[0]!==null&&i[0].styles!==void 0)return i[0];var s=!0,l="";Wn=void 0;var u=i[0];if(u==null||u.raw===void 0)s=!1,l+=Ts(r,n,u);else{var d=u;l+=d[0]}for(var p=1;p<i.length;p++)if(l+=Ts(r,n,i[p]),s){var h=u;l+=h[p]}Jp.lastIndex=0;for(var m="",y;(y=Jp.exec(l))!==null;)m+="-"+y[1];var v=iA(l)+m;return{name:v,styles:l,next:Wn}}function vm(i,n,r){var s="";return r.split(" ").forEach(function(l){i[l]!==void 0?n.push(i[l]+";"):l&&(s+=l+" ")}),s}var uA=function(n,r,s){var l=n.key+"-"+r.name;n.registered[l]===void 0&&(n.registered[l]=r.styles)},cA=function(n,r,s){uA(n,r);var l=n.key+"-"+r.name;if(n.inserted[r.name]===void 0){var u=r;do n.insert(r===u?"."+l:"",u,n.sheet,!0),u=u.next;while(u!==void 0)}};function Hp(i,n){if(i.inserted[n.name]===void 0)return i.insert("",n,i.sheet,!0)}function Xp(i,n,r){var s=[],l=vm(i,s,r);return s.length<2?r:l+n(s)}var dA=function(n){var r=rA(n);r.sheet.speedy=function(p){this.isSpeedy=p},r.compat=!0;var s=function(){for(var h=arguments.length,m=new Array(h),y=0;y<h;y++)m[y]=arguments[y];var v=nu(m,r.registered,void 0);return cA(r,v),r.key+"-"+v.name},l=function(){for(var h=arguments.length,m=new Array(h),y=0;y<h;y++)m[y]=arguments[y];var v=nu(m,r.registered),A="animation-"+v.name;return Hp(r,{name:v.name,styles:"@keyframes "+A+"{"+v.styles+"}"}),A},u=function(){for(var h=arguments.length,m=new Array(h),y=0;y<h;y++)m[y]=arguments[y];var v=nu(m,r.registered);Hp(r,v)},d=function(){for(var h=arguments.length,m=new Array(h),y=0;y<h;y++)m[y]=arguments[y];return Xp(r.registered,s,fA(m))};return{css:s,cx:d,injectGlobal:u,keyframes:l,hydrate:function(h){h.forEach(function(m){r.inserted[m]=!0})},flush:function(){r.registered={},r.inserted={},r.sheet.flush()},sheet:r.sheet,cache:r,getRegisteredStyles:vm.bind(null,r.registered),merge:Xp.bind(null,r.registered,s)}},fA=function i(n){for(var r="",s=0;s<n.length;s++){var l=n[s];if(l!=null){var u=void 0;switch(typeof l){case"boolean":break;case"object":{if(Array.isArray(l))u=i(l);else{u="";for(var d in l)l[d]&&d&&(u&&(u+=" "),u+=d)}break}default:u=l}u&&(r&&(r+=" "),r+=u)}}return r},tc=dA({key:"css"}),pA=tc.cx,to=tc.keyframes,qe=tc.css,zr={},ru,_p;function hA(){return _p||(_p=1,ru=function(){return typeof Promise=="function"&&Promise.prototype&&Promise.prototype.then}),ru}var iu={},Pn={},$p;function ar(){if($p)return Pn;$p=1;let i;const n=[0,26,44,70,100,134,172,196,242,292,346,404,466,532,581,655,733,815,901,991,1085,1156,1258,1364,1474,1588,1706,1828,1921,2051,2185,2323,2465,2611,2761,2876,3034,3196,3362,3532,3706];return Pn.getSymbolSize=function(s){if(!s)throw new Error('"version" cannot be null or undefined');if(s<1||s>40)throw new Error('"version" should be in range from 1 to 40');return s*4+17},Pn.getSymbolTotalCodewords=function(s){return n[s]},Pn.getBCHDigit=function(r){let s=0;for(;r!==0;)s++,r>>>=1;return s},Pn.setToSJISFunction=function(s){if(typeof s!="function")throw new Error('"toSJISFunc" is not a valid function.');i=s},Pn.isKanjiModeEnabled=function(){return typeof i<"u"},Pn.toSJIS=function(s){return i(s)},Pn}var ou={},eh;function nc(){return eh||(eh=1,function(i){i.L={bit:1},i.M={bit:0},i.Q={bit:3},i.H={bit:2};function n(r){if(typeof r!="string")throw new Error("Param is not a string");switch(r.toLowerCase()){case"l":case"low":return i.L;case"m":case"medium":return i.M;case"q":case"quartile":return i.Q;case"h":case"high":return i.H;default:throw new Error("Unknown EC Level: "+r)}}i.isValid=function(s){return s&&typeof s.bit<"u"&&s.bit>=0&&s.bit<4},i.from=function(s,l){if(i.isValid(s))return s;try{return n(s)}catch{return l}}}(ou)),ou}var su,th;function mA(){if(th)return su;th=1;function i(){this.buffer=[],this.length=0}return i.prototype={get:function(n){const r=Math.floor(n/8);return(this.buffer[r]>>>7-n%8&1)===1},put:function(n,r){for(let s=0;s<r;s++)this.putBit((n>>>r-s-1&1)===1)},getLengthInBits:function(){return this.length},putBit:function(n){const r=Math.floor(this.length/8);this.buffer.length<=r&&this.buffer.push(0),n&&(this.buffer[r]|=128>>>this.length%8),this.length++}},su=i,su}var lu,nh;function gA(){if(nh)return lu;nh=1;function i(n){if(!n||n<1)throw new Error("BitMatrix size must be defined and greater than 0");this.size=n,this.data=new Uint8Array(n*n),this.reservedBit=new Uint8Array(n*n)}return i.prototype.set=function(n,r,s,l){const u=n*this.size+r;this.data[u]=s,l&&(this.reservedBit[u]=!0)},i.prototype.get=function(n,r){return this.data[n*this.size+r]},i.prototype.xor=function(n,r,s){this.data[n*this.size+r]^=s},i.prototype.isReserved=function(n,r){return this.reservedBit[n*this.size+r]},lu=i,lu}var au={},rh;function yA(){return rh||(rh=1,function(i){const n=ar().getSymbolSize;i.getRowColCoords=function(s){if(s===1)return[];const l=Math.floor(s/7)+2,u=n(s),d=u===145?26:Math.ceil((u-13)/(2*l-2))*2,p=[u-7];for(let h=1;h<l-1;h++)p[h]=p[h-1]-d;return p.push(6),p.reverse()},i.getPositions=function(s){const l=[],u=i.getRowColCoords(s),d=u.length;for(let p=0;p<d;p++)for(let h=0;h<d;h++)p===0&&h===0||p===0&&h===d-1||p===d-1&&h===0||l.push([u[p],u[h]]);return l}}(au)),au}var uu={},ih;function vA(){if(ih)return uu;ih=1;const i=ar().getSymbolSize,n=7;return uu.getPositions=function(s){const l=i(s);return[[0,0],[l-n,0],[0,l-n]]},uu}var cu={},oh;function AA(){return oh||(oh=1,function(i){i.Patterns={PATTERN000:0,PATTERN001:1,PATTERN010:2,PATTERN011:3,PATTERN100:4,PATTERN101:5,PATTERN110:6,PATTERN111:7};const n={N1:3,N2:3,N3:40,N4:10};i.isValid=function(l){return l!=null&&l!==""&&!isNaN(l)&&l>=0&&l<=7},i.from=function(l){return i.isValid(l)?parseInt(l,10):void 0},i.getPenaltyN1=function(l){const u=l.size;let d=0,p=0,h=0,m=null,y=null;for(let v=0;v<u;v++){p=h=0,m=y=null;for(let A=0;A<u;A++){let R=l.get(v,A);R===m?p++:(p>=5&&(d+=n.N1+(p-5)),m=R,p=1),R=l.get(A,v),R===y?h++:(h>=5&&(d+=n.N1+(h-5)),y=R,h=1)}p>=5&&(d+=n.N1+(p-5)),h>=5&&(d+=n.N1+(h-5))}return d},i.getPenaltyN2=function(l){const u=l.size;let d=0;for(let p=0;p<u-1;p++)for(let h=0;h<u-1;h++){const m=l.get(p,h)+l.get(p,h+1)+l.get(p+1,h)+l.get(p+1,h+1);(m===4||m===0)&&d++}return d*n.N2},i.getPenaltyN3=function(l){const u=l.size;let d=0,p=0,h=0;for(let m=0;m<u;m++){p=h=0;for(let y=0;y<u;y++)p=p<<1&2047|l.get(m,y),y>=10&&(p===1488||p===93)&&d++,h=h<<1&2047|l.get(y,m),y>=10&&(h===1488||h===93)&&d++}return d*n.N3},i.getPenaltyN4=function(l){let u=0;const d=l.data.length;for(let h=0;h<d;h++)u+=l.data[h];return Math.abs(Math.ceil(u*100/d/5)-10)*n.N4};function r(s,l,u){switch(s){case i.Patterns.PATTERN000:return(l+u)%2===0;case i.Patterns.PATTERN001:return l%2===0;case i.Patterns.PATTERN010:return u%3===0;case i.Patterns.PATTERN011:return(l+u)%3===0;case i.Patterns.PATTERN100:return(Math.floor(l/2)+Math.floor(u/3))%2===0;case i.Patterns.PATTERN101:return l*u%2+l*u%3===0;case i.Patterns.PATTERN110:return(l*u%2+l*u%3)%2===0;case i.Patterns.PATTERN111:return(l*u%3+(l+u)%2)%2===0;default:throw new Error("bad maskPattern:"+s)}}i.applyMask=function(l,u){const d=u.size;for(let p=0;p<d;p++)for(let h=0;h<d;h++)u.isReserved(h,p)||u.xor(h,p,r(l,h,p))},i.getBestMask=function(l,u){const d=Object.keys(i.Patterns).length;let p=0,h=1/0;for(let m=0;m<d;m++){u(m),i.applyMask(m,l);const y=i.getPenaltyN1(l)+i.getPenaltyN2(l)+i.getPenaltyN3(l)+i.getPenaltyN4(l);i.applyMask(m,l),y<h&&(h=y,p=m)}return p}}(cu)),cu}var gs={},sh;function Am(){if(sh)return gs;sh=1;const i=nc(),n=[1,1,1,1,1,1,1,1,1,1,2,2,1,2,2,4,1,2,4,4,2,4,4,4,2,4,6,5,2,4,6,6,2,5,8,8,4,5,8,8,4,5,8,11,4,8,10,11,4,9,12,16,4,9,16,16,6,10,12,18,6,10,17,16,6,11,16,19,6,13,18,21,7,14,21,25,8,16,20,25,8,17,23,25,9,17,23,34,9,18,25,30,10,20,27,32,12,21,29,35,12,23,34,37,12,25,34,40,13,26,35,42,14,28,38,45,15,29,40,48,16,31,43,51,17,33,45,54,18,35,48,57,19,37,51,60,19,38,53,63,20,40,56,66,21,43,59,70,22,45,62,74,24,47,65,77,25,49,68,81],r=[7,10,13,17,10,16,22,28,15,26,36,44,20,36,52,64,26,48,72,88,36,64,96,112,40,72,108,130,48,88,132,156,60,110,160,192,72,130,192,224,80,150,224,264,96,176,260,308,104,198,288,352,120,216,320,384,132,240,360,432,144,280,408,480,168,308,448,532,180,338,504,588,196,364,546,650,224,416,600,700,224,442,644,750,252,476,690,816,270,504,750,900,300,560,810,960,312,588,870,1050,336,644,952,1110,360,700,1020,1200,390,728,1050,1260,420,784,1140,1350,450,812,1200,1440,480,868,1290,1530,510,924,1350,1620,540,980,1440,1710,570,1036,1530,1800,570,1064,1590,1890,600,1120,1680,1980,630,1204,1770,2100,660,1260,1860,2220,720,1316,1950,2310,750,1372,2040,2430];return gs.getBlocksCount=function(l,u){switch(u){case i.L:return n[(l-1)*4+0];case i.M:return n[(l-1)*4+1];case i.Q:return n[(l-1)*4+2];case i.H:return n[(l-1)*4+3];default:return}},gs.getTotalCodewordsCount=function(l,u){switch(u){case i.L:return r[(l-1)*4+0];case i.M:return r[(l-1)*4+1];case i.Q:return r[(l-1)*4+2];case i.H:return r[(l-1)*4+3];default:return}},gs}var du={},Ui={},lh;function wA(){if(lh)return Ui;lh=1;const i=new Uint8Array(512),n=new Uint8Array(256);return function(){let s=1;for(let l=0;l<255;l++)i[l]=s,n[s]=l,s<<=1,s&256&&(s^=285);for(let l=255;l<512;l++)i[l]=i[l-255]}(),Ui.log=function(s){if(s<1)throw new Error("log("+s+")");return n[s]},Ui.exp=function(s){return i[s]},Ui.mul=function(s,l){return s===0||l===0?0:i[n[s]+n[l]]},Ui}var ah;function CA(){return ah||(ah=1,function(i){const n=wA();i.mul=function(s,l){const u=new Uint8Array(s.length+l.length-1);for(let d=0;d<s.length;d++)for(let p=0;p<l.length;p++)u[d+p]^=n.mul(s[d],l[p]);return u},i.mod=function(s,l){let u=new Uint8Array(s);for(;u.length-l.length>=0;){const d=u[0];for(let h=0;h<l.length;h++)u[h]^=n.mul(l[h],d);let p=0;for(;p<u.length&&u[p]===0;)p++;u=u.slice(p)}return u},i.generateECPolynomial=function(s){let l=new Uint8Array([1]);for(let u=0;u<s;u++)l=i.mul(l,new Uint8Array([1,n.exp(u)]));return l}}(du)),du}var fu,uh;function EA(){if(uh)return fu;uh=1;const i=CA();function n(r){this.genPoly=void 0,this.degree=r,this.degree&&this.initialize(this.degree)}return n.prototype.initialize=function(s){this.degree=s,this.genPoly=i.generateECPolynomial(this.degree)},n.prototype.encode=function(s){if(!this.genPoly)throw new Error("Encoder not initialized");const l=new Uint8Array(s.length+this.degree);l.set(s);const u=i.mod(l,this.genPoly),d=this.degree-u.length;if(d>0){const p=new Uint8Array(this.degree);return p.set(u,d),p}return u},fu=n,fu}var pu={},hu={},mu={},ch;function wm(){return ch||(ch=1,mu.isValid=function(n){return!isNaN(n)&&n>=1&&n<=40}),mu}var rn={},dh;function Cm(){if(dh)return rn;dh=1;const i="[0-9]+",n="[A-Z $%*+\\-./:]+";let r="(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+";r=r.replace(/u/g,"\\u");const s="(?:(?![A-Z0-9 $%*+\\-./:]|"+r+`)(?:.|[\r
]))+`;rn.KANJI=new RegExp(r,"g"),rn.BYTE_KANJI=new RegExp("[^A-Z0-9 $%*+\\-./:]+","g"),rn.BYTE=new RegExp(s,"g"),rn.NUMERIC=new RegExp(i,"g"),rn.ALPHANUMERIC=new RegExp(n,"g");const l=new RegExp("^"+r+"$"),u=new RegExp("^"+i+"$"),d=new RegExp("^[A-Z0-9 $%*+\\-./:]+$");return rn.testKanji=function(h){return l.test(h)},rn.testNumeric=function(h){return u.test(h)},rn.testAlphanumeric=function(h){return d.test(h)},rn}var fh;function ur(){return fh||(fh=1,function(i){const n=wm(),r=Cm();i.NUMERIC={id:"Numeric",bit:1,ccBits:[10,12,14]},i.ALPHANUMERIC={id:"Alphanumeric",bit:2,ccBits:[9,11,13]},i.BYTE={id:"Byte",bit:4,ccBits:[8,16,16]},i.KANJI={id:"Kanji",bit:8,ccBits:[8,10,12]},i.MIXED={bit:-1},i.getCharCountIndicator=function(u,d){if(!u.ccBits)throw new Error("Invalid mode: "+u);if(!n.isValid(d))throw new Error("Invalid version: "+d);return d>=1&&d<10?u.ccBits[0]:d<27?u.ccBits[1]:u.ccBits[2]},i.getBestModeForData=function(u){return r.testNumeric(u)?i.NUMERIC:r.testAlphanumeric(u)?i.ALPHANUMERIC:r.testKanji(u)?i.KANJI:i.BYTE},i.toString=function(u){if(u&&u.id)return u.id;throw new Error("Invalid mode")},i.isValid=function(u){return u&&u.bit&&u.ccBits};function s(l){if(typeof l!="string")throw new Error("Param is not a string");switch(l.toLowerCase()){case"numeric":return i.NUMERIC;case"alphanumeric":return i.ALPHANUMERIC;case"kanji":return i.KANJI;case"byte":return i.BYTE;default:throw new Error("Unknown mode: "+l)}}i.from=function(u,d){if(i.isValid(u))return u;try{return s(u)}catch{return d}}}(hu)),hu}var ph;function xA(){return ph||(ph=1,function(i){const n=ar(),r=Am(),s=nc(),l=ur(),u=wm(),d=7973,p=n.getBCHDigit(d);function h(A,R,C){for(let x=1;x<=40;x++)if(R<=i.getCapacity(x,C,A))return x}function m(A,R){return l.getCharCountIndicator(A,R)+4}function y(A,R){let C=0;return A.forEach(function(x){const k=m(x.mode,R);C+=k+x.getBitsLength()}),C}function v(A,R){for(let C=1;C<=40;C++)if(y(A,C)<=i.getCapacity(C,R,l.MIXED))return C}i.from=function(R,C){return u.isValid(R)?parseInt(R,10):C},i.getCapacity=function(R,C,x){if(!u.isValid(R))throw new Error("Invalid QR Code version");typeof x>"u"&&(x=l.BYTE);const k=n.getSymbolTotalCodewords(R),V=r.getTotalCodewordsCount(R,C),P=(k-V)*8;if(x===l.MIXED)return P;const U=P-m(x,R);switch(x){case l.NUMERIC:return Math.floor(U/10*3);case l.ALPHANUMERIC:return Math.floor(U/11*2);case l.KANJI:return Math.floor(U/13);case l.BYTE:default:return Math.floor(U/8)}},i.getBestVersionForData=function(R,C){let x;const k=s.from(C,s.M);if(Array.isArray(R)){if(R.length>1)return v(R,k);if(R.length===0)return 1;x=R[0]}else x=R;return h(x.mode,x.getLength(),k)},i.getEncodedBits=function(R){if(!u.isValid(R)||R<7)throw new Error("Invalid QR Code version");let C=R<<12;for(;n.getBCHDigit(C)-p>=0;)C^=d<<n.getBCHDigit(C)-p;return R<<12|C}}(pu)),pu}var gu={},hh;function SA(){if(hh)return gu;hh=1;const i=ar(),n=1335,r=21522,s=i.getBCHDigit(n);return gu.getEncodedBits=function(u,d){const p=u.bit<<3|d;let h=p<<10;for(;i.getBCHDigit(h)-s>=0;)h^=n<<i.getBCHDigit(h)-s;return(p<<10|h)^r},gu}var yu={},vu,mh;function bA(){if(mh)return vu;mh=1;const i=ur();function n(r){this.mode=i.NUMERIC,this.data=r.toString()}return n.getBitsLength=function(s){return 10*Math.floor(s/3)+(s%3?s%3*3+1:0)},n.prototype.getLength=function(){return this.data.length},n.prototype.getBitsLength=function(){return n.getBitsLength(this.data.length)},n.prototype.write=function(s){let l,u,d;for(l=0;l+3<=this.data.length;l+=3)u=this.data.substr(l,3),d=parseInt(u,10),s.put(d,10);const p=this.data.length-l;p>0&&(u=this.data.substr(l),d=parseInt(u,10),s.put(d,p*3+1))},vu=n,vu}var Au,gh;function kA(){if(gh)return Au;gh=1;const i=ur(),n=["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"," ","$","%","*","+","-",".","/",":"];function r(s){this.mode=i.ALPHANUMERIC,this.data=s}return r.getBitsLength=function(l){return 11*Math.floor(l/2)+6*(l%2)},r.prototype.getLength=function(){return this.data.length},r.prototype.getBitsLength=function(){return r.getBitsLength(this.data.length)},r.prototype.write=function(l){let u;for(u=0;u+2<=this.data.length;u+=2){let d=n.indexOf(this.data[u])*45;d+=n.indexOf(this.data[u+1]),l.put(d,11)}this.data.length%2&&l.put(n.indexOf(this.data[u]),6)},Au=r,Au}var wu,yh;function RA(){if(yh)return wu;yh=1;const i=ur();function n(r){this.mode=i.BYTE,typeof r=="string"?this.data=new TextEncoder().encode(r):this.data=new Uint8Array(r)}return n.getBitsLength=function(s){return s*8},n.prototype.getLength=function(){return this.data.length},n.prototype.getBitsLength=function(){return n.getBitsLength(this.data.length)},n.prototype.write=function(r){for(let s=0,l=this.data.length;s<l;s++)r.put(this.data[s],8)},wu=n,wu}var Cu,vh;function IA(){if(vh)return Cu;vh=1;const i=ur(),n=ar();function r(s){this.mode=i.KANJI,this.data=s}return r.getBitsLength=function(l){return l*13},r.prototype.getLength=function(){return this.data.length},r.prototype.getBitsLength=function(){return r.getBitsLength(this.data.length)},r.prototype.write=function(s){let l;for(l=0;l<this.data.length;l++){let u=n.toSJIS(this.data[l]);if(u>=33088&&u<=40956)u-=33088;else if(u>=57408&&u<=60351)u-=49472;else throw new Error("Invalid SJIS character: "+this.data[l]+`
Make sure your charset is UTF-8`);u=(u>>>8&255)*192+(u&255),s.put(u,13)}},Cu=r,Cu}var Eu={exports:{}},Ah;function NA(){return Ah||(Ah=1,function(i){var n={single_source_shortest_paths:function(r,s,l){var u={},d={};d[s]=0;var p=n.PriorityQueue.make();p.push(s,0);for(var h,m,y,v,A,R,C,x,k;!p.empty();){h=p.pop(),m=h.value,v=h.cost,A=r[m]||{};for(y in A)A.hasOwnProperty(y)&&(R=A[y],C=v+R,x=d[y],k=typeof d[y]>"u",(k||x>C)&&(d[y]=C,p.push(y,C),u[y]=m))}if(typeof l<"u"&&typeof d[l]>"u"){var V=["Could not find a path from ",s," to ",l,"."].join("");throw new Error(V)}return u},extract_shortest_path_from_predecessor_list:function(r,s){for(var l=[],u=s;u;)l.push(u),r[u],u=r[u];return l.reverse(),l},find_path:function(r,s,l){var u=n.single_source_shortest_paths(r,s,l);return n.extract_shortest_path_from_predecessor_list(u,l)},PriorityQueue:{make:function(r){var s=n.PriorityQueue,l={},u;r=r||{};for(u in s)s.hasOwnProperty(u)&&(l[u]=s[u]);return l.queue=[],l.sorter=r.sorter||s.default_sorter,l},default_sorter:function(r,s){return r.cost-s.cost},push:function(r,s){var l={value:r,cost:s};this.queue.push(l),this.queue.sort(this.sorter)},pop:function(){return this.queue.shift()},empty:function(){return this.queue.length===0}}};i.exports=n}(Eu)),Eu.exports}var wh;function MA(){return wh||(wh=1,function(i){const n=ur(),r=bA(),s=kA(),l=RA(),u=IA(),d=Cm(),p=ar(),h=NA();function m(V){return unescape(encodeURIComponent(V)).length}function y(V,P,U){const B=[];let ne;for(;(ne=V.exec(U))!==null;)B.push({data:ne[0],index:ne.index,mode:P,length:ne[0].length});return B}function v(V){const P=y(d.NUMERIC,n.NUMERIC,V),U=y(d.ALPHANUMERIC,n.ALPHANUMERIC,V);let B,ne;return p.isKanjiModeEnabled()?(B=y(d.BYTE,n.BYTE,V),ne=y(d.KANJI,n.KANJI,V)):(B=y(d.BYTE_KANJI,n.BYTE,V),ne=[]),P.concat(U,B,ne).sort(function(O,D){return O.index-D.index}).map(function(O){return{data:O.data,mode:O.mode,length:O.length}})}function A(V,P){switch(P){case n.NUMERIC:return r.getBitsLength(V);case n.ALPHANUMERIC:return s.getBitsLength(V);case n.KANJI:return u.getBitsLength(V);case n.BYTE:return l.getBitsLength(V)}}function R(V){return V.reduce(function(P,U){const B=P.length-1>=0?P[P.length-1]:null;return B&&B.mode===U.mode?(P[P.length-1].data+=U.data,P):(P.push(U),P)},[])}function C(V){const P=[];for(let U=0;U<V.length;U++){const B=V[U];switch(B.mode){case n.NUMERIC:P.push([B,{data:B.data,mode:n.ALPHANUMERIC,length:B.length},{data:B.data,mode:n.BYTE,length:B.length}]);break;case n.ALPHANUMERIC:P.push([B,{data:B.data,mode:n.BYTE,length:B.length}]);break;case n.KANJI:P.push([B,{data:B.data,mode:n.BYTE,length:m(B.data)}]);break;case n.BYTE:P.push([{data:B.data,mode:n.BYTE,length:m(B.data)}])}}return P}function x(V,P){const U={},B={start:{}};let ne=["start"];for(let T=0;T<V.length;T++){const O=V[T],D=[];for(let J=0;J<O.length;J++){const ie=O[J],X=""+T+J;D.push(X),U[X]={node:ie,lastCount:0},B[X]={};for(let _=0;_<ne.length;_++){const $=ne[_];U[$]&&U[$].node.mode===ie.mode?(B[$][X]=A(U[$].lastCount+ie.length,ie.mode)-A(U[$].lastCount,ie.mode),U[$].lastCount+=ie.length):(U[$]&&(U[$].lastCount=ie.length),B[$][X]=A(ie.length,ie.mode)+4+n.getCharCountIndicator(ie.mode,P))}}ne=D}for(let T=0;T<ne.length;T++)B[ne[T]].end=0;return{map:B,table:U}}function k(V,P){let U;const B=n.getBestModeForData(V);if(U=n.from(P,B),U!==n.BYTE&&U.bit<B.bit)throw new Error('"'+V+'" cannot be encoded with mode '+n.toString(U)+`.
 Suggested mode is: `+n.toString(B));switch(U===n.KANJI&&!p.isKanjiModeEnabled()&&(U=n.BYTE),U){case n.NUMERIC:return new r(V);case n.ALPHANUMERIC:return new s(V);case n.KANJI:return new u(V);case n.BYTE:return new l(V)}}i.fromArray=function(P){return P.reduce(function(U,B){return typeof B=="string"?U.push(k(B,null)):B.data&&U.push(k(B.data,B.mode)),U},[])},i.fromString=function(P,U){const B=v(P,p.isKanjiModeEnabled()),ne=C(B),T=x(ne,U),O=h.find_path(T.map,"start","end"),D=[];for(let J=1;J<O.length-1;J++)D.push(T.table[O[J]].node);return i.fromArray(R(D))},i.rawSplit=function(P){return i.fromArray(v(P,p.isKanjiModeEnabled()))}}(yu)),yu}var Ch;function LA(){if(Ch)return iu;Ch=1;const i=ar(),n=nc(),r=mA(),s=gA(),l=yA(),u=vA(),d=AA(),p=Am(),h=EA(),m=xA(),y=SA(),v=ur(),A=MA();function R(T,O){const D=T.size,J=u.getPositions(O);for(let ie=0;ie<J.length;ie++){const X=J[ie][0],_=J[ie][1];for(let $=-1;$<=7;$++)if(!(X+$<=-1||D<=X+$))for(let ee=-1;ee<=7;ee++)_+ee<=-1||D<=_+ee||($>=0&&$<=6&&(ee===0||ee===6)||ee>=0&&ee<=6&&($===0||$===6)||$>=2&&$<=4&&ee>=2&&ee<=4?T.set(X+$,_+ee,!0,!0):T.set(X+$,_+ee,!1,!0))}}function C(T){const O=T.size;for(let D=8;D<O-8;D++){const J=D%2===0;T.set(D,6,J,!0),T.set(6,D,J,!0)}}function x(T,O){const D=l.getPositions(O);for(let J=0;J<D.length;J++){const ie=D[J][0],X=D[J][1];for(let _=-2;_<=2;_++)for(let $=-2;$<=2;$++)_===-2||_===2||$===-2||$===2||_===0&&$===0?T.set(ie+_,X+$,!0,!0):T.set(ie+_,X+$,!1,!0)}}function k(T,O){const D=T.size,J=m.getEncodedBits(O);let ie,X,_;for(let $=0;$<18;$++)ie=Math.floor($/3),X=$%3+D-8-3,_=(J>>$&1)===1,T.set(ie,X,_,!0),T.set(X,ie,_,!0)}function V(T,O,D){const J=T.size,ie=y.getEncodedBits(O,D);let X,_;for(X=0;X<15;X++)_=(ie>>X&1)===1,X<6?T.set(X,8,_,!0):X<8?T.set(X+1,8,_,!0):T.set(J-15+X,8,_,!0),X<8?T.set(8,J-X-1,_,!0):X<9?T.set(8,15-X-1+1,_,!0):T.set(8,15-X-1,_,!0);T.set(J-8,8,1,!0)}function P(T,O){const D=T.size;let J=-1,ie=D-1,X=7,_=0;for(let $=D-1;$>0;$-=2)for($===6&&$--;;){for(let ee=0;ee<2;ee++)if(!T.isReserved(ie,$-ee)){let Ce=!1;_<O.length&&(Ce=(O[_]>>>X&1)===1),T.set(ie,$-ee,Ce),X--,X===-1&&(_++,X=7)}if(ie+=J,ie<0||D<=ie){ie-=J,J=-J;break}}}function U(T,O,D){const J=new r;D.forEach(function(ee){J.put(ee.mode.bit,4),J.put(ee.getLength(),v.getCharCountIndicator(ee.mode,T)),ee.write(J)});const ie=i.getSymbolTotalCodewords(T),X=p.getTotalCodewordsCount(T,O),_=(ie-X)*8;for(J.getLengthInBits()+4<=_&&J.put(0,4);J.getLengthInBits()%8!==0;)J.putBit(0);const $=(_-J.getLengthInBits())/8;for(let ee=0;ee<$;ee++)J.put(ee%2?17:236,8);return B(J,T,O)}function B(T,O,D){const J=i.getSymbolTotalCodewords(O),ie=p.getTotalCodewordsCount(O,D),X=J-ie,_=p.getBlocksCount(O,D),$=J%_,ee=_-$,Ce=Math.floor(J/_),ce=Math.floor(X/_),Ie=ce+1,Q=Ce-ce,H=new h(Q);let Z=0;const b=new Array(_),z=new Array(_);let he=0;const ye=new Uint8Array(T.buffer);for(let Le=0;Le<_;Le++){const ot=Le<ee?ce:Ie;b[Le]=ye.slice(Z,Z+ot),z[Le]=H.encode(b[Le]),Z+=ot,he=Math.max(he,ot)}const Ae=new Uint8Array(J);let Ee=0,we,xe;for(we=0;we<he;we++)for(xe=0;xe<_;xe++)we<b[xe].length&&(Ae[Ee++]=b[xe][we]);for(we=0;we<Q;we++)for(xe=0;xe<_;xe++)Ae[Ee++]=z[xe][we];return Ae}function ne(T,O,D,J){let ie;if(Array.isArray(T))ie=A.fromArray(T);else if(typeof T=="string"){let Ce=O;if(!Ce){const ce=A.rawSplit(T);Ce=m.getBestVersionForData(ce,D)}ie=A.fromString(T,Ce||40)}else throw new Error("Invalid data");const X=m.getBestVersionForData(ie,D);if(!X)throw new Error("The amount of data is too big to be stored in a QR Code");if(!O)O=X;else if(O<X)throw new Error(`
The chosen QR Code version cannot contain this amount of data.
Minimum version required to store current data is: `+X+`.
`);const _=U(O,D,ie),$=i.getSymbolSize(O),ee=new s($);return R(ee,O),C(ee),x(ee,O),V(ee,D,0),O>=7&&k(ee,O),P(ee,_),isNaN(J)&&(J=d.getBestMask(ee,V.bind(null,ee,D))),d.applyMask(J,ee),V(ee,D,J),{modules:ee,version:O,errorCorrectionLevel:D,maskPattern:J,segments:ie}}return iu.create=function(O,D){if(typeof O>"u"||O==="")throw new Error("No input text");let J=n.M,ie,X;return typeof D<"u"&&(J=n.from(D.errorCorrectionLevel,n.M),ie=m.from(D.version),X=d.from(D.maskPattern),D.toSJISFunc&&i.setToSJISFunction(D.toSJISFunc)),ne(O,ie,J,X)},iu}var xu={},Su={},Eh;function Em(){return Eh||(Eh=1,function(i){function n(r){if(typeof r=="number"&&(r=r.toString()),typeof r!="string")throw new Error("Color should be defined as hex string");let s=r.slice().replace("#","").split("");if(s.length<3||s.length===5||s.length>8)throw new Error("Invalid hex color: "+r);(s.length===3||s.length===4)&&(s=Array.prototype.concat.apply([],s.map(function(u){return[u,u]}))),s.length===6&&s.push("F","F");const l=parseInt(s.join(""),16);return{r:l>>24&255,g:l>>16&255,b:l>>8&255,a:l&255,hex:"#"+s.slice(0,6).join("")}}i.getOptions=function(s){s||(s={}),s.color||(s.color={});const l=typeof s.margin>"u"||s.margin===null||s.margin<0?4:s.margin,u=s.width&&s.width>=21?s.width:void 0,d=s.scale||4;return{width:u,scale:u?4:d,margin:l,color:{dark:n(s.color.dark||"#000000ff"),light:n(s.color.light||"#ffffffff")},type:s.type,rendererOpts:s.rendererOpts||{}}},i.getScale=function(s,l){return l.width&&l.width>=s+l.margin*2?l.width/(s+l.margin*2):l.scale},i.getImageWidth=function(s,l){const u=i.getScale(s,l);return Math.floor((s+l.margin*2)*u)},i.qrToImageData=function(s,l,u){const d=l.modules.size,p=l.modules.data,h=i.getScale(d,u),m=Math.floor((d+u.margin*2)*h),y=u.margin*h,v=[u.color.light,u.color.dark];for(let A=0;A<m;A++)for(let R=0;R<m;R++){let C=(A*m+R)*4,x=u.color.light;if(A>=y&&R>=y&&A<m-y&&R<m-y){const k=Math.floor((A-y)/h),V=Math.floor((R-y)/h);x=v[p[k*d+V]?1:0]}s[C++]=x.r,s[C++]=x.g,s[C++]=x.b,s[C]=x.a}}}(Su)),Su}var xh;function TA(){return xh||(xh=1,function(i){const n=Em();function r(l,u,d){l.clearRect(0,0,u.width,u.height),u.style||(u.style={}),u.height=d,u.width=d,u.style.height=d+"px",u.style.width=d+"px"}function s(){try{return document.createElement("canvas")}catch{throw new Error("You need to specify a canvas element")}}i.render=function(u,d,p){let h=p,m=d;typeof h>"u"&&(!d||!d.getContext)&&(h=d,d=void 0),d||(m=s()),h=n.getOptions(h);const y=n.getImageWidth(u.modules.size,h),v=m.getContext("2d"),A=v.createImageData(y,y);return n.qrToImageData(A.data,u,h),r(v,m,y),v.putImageData(A,0,0),m},i.renderToDataURL=function(u,d,p){let h=p;typeof h>"u"&&(!d||!d.getContext)&&(h=d,d=void 0),h||(h={});const m=i.render(u,d,h),y=h.type||"image/png",v=h.rendererOpts||{};return m.toDataURL(y,v.quality)}}(xu)),xu}var bu={},Sh;function VA(){if(Sh)return bu;Sh=1;const i=Em();function n(l,u){const d=l.a/255,p=u+'="'+l.hex+'"';return d<1?p+" "+u+'-opacity="'+d.toFixed(2).slice(1)+'"':p}function r(l,u,d){let p=l+u;return typeof d<"u"&&(p+=" "+d),p}function s(l,u,d){let p="",h=0,m=!1,y=0;for(let v=0;v<l.length;v++){const A=Math.floor(v%u),R=Math.floor(v/u);!A&&!m&&(m=!0),l[v]?(y++,v>0&&A>0&&l[v-1]||(p+=m?r("M",A+d,.5+R+d):r("m",h,0),h=0,m=!1),A+1<u&&l[v+1]||(p+=r("h",y),y=0)):h++}return p}return bu.render=function(u,d,p){const h=i.getOptions(d),m=u.modules.size,y=u.modules.data,v=m+h.margin*2,A=h.color.light.a?"<path "+n(h.color.light,"fill")+' d="M0 0h'+v+"v"+v+'H0z"/>':"",R="<path "+n(h.color.dark,"stroke")+' d="'+s(y,m,h.margin)+'"/>',C='viewBox="0 0 '+v+" "+v+'"',k='<svg xmlns="http://www.w3.org/2000/svg" '+(h.width?'width="'+h.width+'" height="'+h.width+'" ':"")+C+' shape-rendering="crispEdges">'+A+R+`</svg>
`;return typeof p=="function"&&p(null,k),k},bu}var bh;function FA(){if(bh)return zr;bh=1;const i=hA(),n=LA(),r=TA(),s=VA();function l(u,d,p,h,m){const y=[].slice.call(arguments,1),v=y.length,A=typeof y[v-1]=="function";if(!A&&!i())throw new Error("Callback required as last argument");if(A){if(v<2)throw new Error("Too few arguments provided");v===2?(m=p,p=d,d=h=void 0):v===3&&(d.getContext&&typeof m>"u"?(m=h,h=void 0):(m=h,h=p,p=d,d=void 0))}else{if(v<1)throw new Error("Too few arguments provided");return v===1?(p=d,d=h=void 0):v===2&&!d.getContext&&(h=p,p=d,d=void 0),new Promise(function(R,C){try{const x=n.create(p,h);R(u(x,d,h))}catch(x){C(x)}})}try{const R=n.create(p,h);m(null,u(R,d,h))}catch(R){m(R)}}return zr.create=n.create,zr.toCanvas=l.bind(null,r.render),zr.toDataURL=l.bind(null,r.renderToDataURL),zr.toString=l.bind(null,function(u,d,p){return s.render(u,p)}),zr}var OA=FA();const PA=Oh(OA);var UA=Object.defineProperty,zA=(i,n,r)=>n in i?UA(i,n,{enumerable:!0,configurable:!0,writable:!0,value:r}):i[n]=r,te=(i,n,r)=>zA(i,typeof n!="symbol"?n+"":n,r);const qA="data:font/woff2;base64,",jA="data:font/woff2;base64,",BA="data:font/woff2;base64,",xm={matter:"Matter"},ku=async(i,n,r)=>{const s=new FontFace(i,`url(${n}) format('woff2')`,{weight:r});await s.load(),document.fonts.add(s)},WA=async()=>{try{await Promise.all([ku("Matter",qA,"400"),ku("Matter",jA,"500"),ku("Matter",BA,"600")])}catch(i){console.error("Font loading failed:",i)}},DA=i=>i.toLowerCase().replace(/(?:^|[^a-zA-Z0-9]+)([a-zA-Z0-9])/g,(n,r,s)=>s===0?r.toLowerCase():r.toUpperCase()),KA=i=>i.replace(/([a-z])([A-Z])/g,"$1_$2").replace(/[^a-zA-Z0-9]+/g,"_").toLowerCase(),Dn=Array.isArray,Vs=i=>{const n=typeof i;return i!=null&&n==="object"},Fs=i=>Object.entries(i).reduce((n,[r,s])=>({...n,[DA(r)]:Vs(s)&&!Dn(s)?Fs(s):Dn(s)?s.map(l=>Vs(l)?Fs(l):l):s}),{}),QA=i=>{if(Dn(i))return i.map(n=>Fs(n));throw new Error("Objects is not array")},Os=i=>Object.entries(i).reduce((n,[r,s])=>({...n,[KA(r)]:Vs(s)&&!Dn(s)?Os(s):Dn(s)?s.map(l=>Vs(l)?Os(l):l):s}),{}),YA=i=>{if(Dn(i))return i.map(n=>Os(n));throw new Error("Objects is not array")},kh=(i,n)=>{let r=i;switch(n){case"snake_case-to-camelCase":Dn(i)?r=QA(i):r=Fs(i);break;case"camelCase-to-snake_case":Dn(i)?r=YA(i):r=Os(i);break}return r},GA={astro_express_checkout:"Express checkout"},ZA={translation:GA},JA={astro_express_checkout:"Pago express"},HA={translation:JA},XA={astro_express_checkout:"Pagamento expresso"},_A={translation:XA},$A={en:ZA,es:HA,pt:_A},ew=["en","pt","es"],Hs=async i=>navigator.clipboard&&window.isSecureContext?navigator.clipboard.writeText(i).catch(n=>{console.error("Error to copy:",n)}):new Promise((n,r)=>{const s=document.createElement("textarea");s.value=i,s.style.position="fixed",document.body.appendChild(s),s.focus(),s.select();try{document.execCommand("copy")?n():r(new Error("Failed to copy text using execCommand"))}catch(l){r(l)}finally{document.body.removeChild(s)}}),tw=async(i,n,r)=>{if(navigator.share)try{const s={title:i,text:n,...r&&{url:r}};await navigator.share(s)}catch(s){console.error("Failed to share information:",s)}else{console.warn("Web Share API not supported");const s=`${i}
${n}${r?`
${r}`:""}`;await Hs(s)}};function Sm(i,n,r){return n.includes(i)?i:r}class rc{static init({defaultLanguage:n}){const r=Sm(n,ew,"en");return it.init({lng:r,fallbackLng:"en",resources:$A,interpolation:{escapeValue:!1}})}static getCurrent(){return it.language}static translate(n,r){return it.t(n,r??{})}}const zi=(i,n)=>n?`http://localhost:3333${i.startsWith("/")?i:`/${i}`}`:i;var Gi=(i=>(i.IOS="IOS",i.ANDROID="ANDROID",i.DESKTOP="DESKTOP",i))(Gi||{});const bm=()=>{const i=Rv.getParser(window.navigator.userAgent).getOSName().toUpperCase();return i&&Object.values(Gi).includes(i)?i:Gi.DESKTOP},nw=()=>{const i=bm();return i===Gi.ANDROID||i===Gi.IOS},Se=class{static getAxiosInstance(){if(!this.axiosInstance)throw new Error("HttpClient is not initialized. Call HttpClient.init(config) first.");return this.axiosInstance}};te(Se,"axiosInstance"),te(Se,"config"),te(Se,"init",i=>{Se.config=i,Se.axiosInstance=Ze.create({baseURL:i.baseURL,timeout:i.timeout??5e3,withCredentials:!1}),Se.setupInterceptors()}),te(Se,"GET",async({url:i,params:n={},mock:r=!1,requestCustomHeaders:s})=>{const l=zi(i,r),u={params:n,headers:s?Se.mergeHeaders(void 0,s):Se.mergeHeaders(void 0,{})};return await Se.getAxiosInstance().get(l,u)}),te(Se,"POST",async({url:i,data:n={},mock:r=!1,requestCustomHeaders:s})=>{const l=zi(i,r),u={headers:s?Se.mergeHeaders(void 0,s):Se.mergeHeaders(void 0,{})};return await Se.getAxiosInstance().post(l,n,u)}),te(Se,"PUT",async({url:i,data:n={},mock:r=!1,requestCustomHeaders:s})=>{const l=zi(i,r),u={headers:s?Se.mergeHeaders(void 0,s):Se.mergeHeaders(void 0,{})};return await Se.getAxiosInstance().put(l,n,u)}),te(Se,"PATCH",async({url:i,data:n={},mock:r=!1,requestCustomHeaders:s})=>{const l=zi(i,r),u={headers:s?Se.mergeHeaders(void 0,s):Se.mergeHeaders(void 0,{})};return await Se.getAxiosInstance().patch(l,n,u)}),te(Se,"DELETE",async({url:i,params:n={},mock:r=!1,requestCustomHeaders:s})=>{const l=zi(i,r),u={params:n,headers:s?Se.mergeHeaders(void 0,s):Se.mergeHeaders(void 0,{})};return await Se.getAxiosInstance().delete(l,u)}),te(Se,"setupInterceptors",()=>{Se.axiosInstance.interceptors.request.use(i=>(i.headers=Se.mergeHeaders(i.headers),i.data&&(i.data=kh(i.data,"camelCase-to-snake_case")),i)),Se.axiosInstance.interceptors.response.use(i=>Se.handleResponse(i),i=>Se.handleError(i))}),te(Se,"handleResponse",i=>{const n=i.status===202,r=kh(i.data,"snake_case-to-camelCase");return n?{...r,statusCode:i.status}:r}),te(Se,"handleError",i=>{var n,r,s,l,u,d,p,h,m,y,v,A,R,C,x,k,V,P;const U={description:((r=(n=i.response)==null?void 0:n.data)==null?void 0:r.description)||"Network error",error:((l=(s=i.response)==null?void 0:s.data)==null?void 0:l.error)||"UNKNOWN_ERROR",code:Number(i.code)||((u=i.response)==null?void 0:u.status)||500,message:((p=(d=i.response)==null?void 0:d.data)==null?void 0:p.message)||i.message||"An unexpected error occurred",internalTerm:((m=(h=i.response)==null?void 0:h.data)==null?void 0:m.internalTerm)||"",errorInfo:{message:((A=(v=(y=i.response)==null?void 0:y.data)==null?void 0:v.errorInfo)==null?void 0:A.message)||"",key:((x=(C=(R=i.response)==null?void 0:R.data)==null?void 0:C.errorInfo)==null?void 0:x.key)||"",title:((P=(V=(k=i.response)==null?void 0:k.data)==null?void 0:V.errorInfo)==null?void 0:P.title)||""}};return Promise.reject(U)}),te(Se,"mergeHeaders",(i,n={})=>{const r={"Content-Type":"application/json","Accept-Language":rc.getCurrent(),"User-Agent":`${Se.config.platformPrefix}/${Se.config.appVersion} (${bm()})`,TimeZone:Intl.DateTimeFormat().resolvedOptions().timeZone,...Se.config.headers};return new Np({...r,...i instanceof Np?i.toJSON():i,...n})});let Zi=Se;const ke={transparent:"transparent",neutral_lightest:"#FFFFFF",neutral_base:"#B4C5C3",neutral_dark:"#536663",neutral_darkest:"#151E1D",primary_lightest:"#DBFFFB",primary_light:"#AAF6EC",primary_base:"#00DBBF",primary_darker:"#0FC3AC",primary_dark:"#059986",primary_darkest:"#07544A",warning_light:"#FFEBA8",warning_darkest:"#755A00",error_lightest:"#FFDCD6",error_dark:"#A31600"},rw={backgroundColor:ke.neutral_dark,primaryColor:ke.primary_base,secondaryColor:ke.primary_darkest,textPrimaryColor:ke.neutral_lightest,textSecondaryColor:ke.primary_lightest,fontFamily:xm.matter,width:430,apWarningBgColor:ke.warning_darkest,apWarningTxtColor:ke.error_lightest,apPillBgColor:ke.primary_darkest,apPillTxtColor:ke.primary_light,apPrimaryColor:ke.primary_base,apButtonPrimaryBgColor:ke.primary_base,apButtonPrimaryTxtColor:ke.neutral_darkest,apButtonSecondaryBgColor:ke.primary_darkest,apButtonSecondaryTxtColor:ke.primary_base,apButtonTextTxtColor:ke.primary_base,apButtonDisableBgColor:ke.neutral_base,apButtonDisableTextColor:ke.neutral_dark},iw={backgroundColor:ke.transparent,primaryColor:ke.primary_base,secondaryColor:ke.primary_lightest,textPrimaryColor:ke.neutral_darkest,textSecondaryColor:ke.primary_darker,fontFamily:xm.matter,width:430,apWarningBgColor:ke.warning_light,apWarningTxtColor:ke.error_dark,apPillBgColor:ke.primary_lightest,apPillTxtColor:ke.primary_dark,apPrimaryColor:ke.primary_base,apButtonPrimaryBgColor:ke.primary_base,apButtonPrimaryTxtColor:ke.neutral_darkest,apButtonSecondaryBgColor:ke.primary_lightest,apButtonSecondaryTxtColor:ke.primary_dark,apButtonTextTxtColor:ke.primary_dark,apButtonDisableBgColor:ke.neutral_base,apButtonDisableTextColor:ke.neutral_dark},ow=["light","dark"],Rh={light:iw,dark:rw},km=class ir{constructor(n){te(this,"config");const r=Sm(n==null?void 0:n.theme,ow,"light");this.config={theme:r,themeStyles:Rh[r],styles:{...Rh[r],...n==null?void 0:n.styles}}}static init(n){return ir.instance||(ir.instance=new ir(n)),ir.instance}static getStyles(){return ir.instance.config.styles}static getTheme(){return ir.instance.config.theme}};te(km,"instance");let Lt=km;const Rm=class qu{static init(n){qu.config={...n}}static getCurrencyMode(){return qu.config.currencyMode}};te(Rm,"config");let Im=Rm;const Ss=class ju{constructor(){}static init(n,r){if(!n)throw new Error("Token is required for authentication.");if(this.isInitialized){console.warn(`AstroPay Payment Library is already initialized - with token: ${this.token}`);return}ju.isInitialized=!0,ju.token=n,Lt.init(r),rc.init({defaultLanguage:(r==null?void 0:r.language)??"en"}),Im.init({currencyMode:(r==null?void 0:r.currencyMode)??"iso"}),Zi.init({baseURL:"https://d6c747c6-facf-4534-a928-b052e089569b.mock.pstmn.io",platformPrefix:"Ap-cl",appVersion:"0.0.1",appName:"Checkout",timeout:5e3,headers:{app_id:`Bearer ${n}`}})}static registerComponent(n){this.components.add(n)}static unregisterComponent(n){this.components.delete(n)}static destroy(){this.isInitialized&&(this.components.forEach(n=>n.destroy()),this.components.clear(),this.isInitialized=!1,this.token="")}};te(Ss,"isInitialized",!1),te(Ss,"token"),te(Ss,"components",new Set);let Bi=Ss;class $e{constructor({tag:n,elementId:r,styles:s}){if(te(this,"element"),this.element=document.createElement(n),r&&this.element.setAttribute("id",r),s){const l=Lt.getStyles(),u=s(l);this.element.className=u}}addStyleClass(n){this.element.classList.add(n)}render(n){n instanceof $e?n.element.appendChild(this.element):n.appendChild(this.element)}destroy(){this.element.parentElement&&this.element.parentElement.removeChild(this.element)}}const sw=(i,n)=>qe`
    font-family: ${i.fontFamily};
    color: ${(n==null?void 0:n.color)||i.textPrimaryColor};

    font-size: ${n.size}px;
    font-weight: ${n.weight};
    text-align: ${n.align};

    line-height: ${n.lineHeight}px;
    text-transform: ${n.uppercase?"uppercase":"none"};
  `;class Be extends $e{constructor({text:n,variant:r="span",weight:s=500,size:l=12,lineHeight:u=18,align:d="left",color:p,uppercase:h=!1}){const m={size:l,weight:s,lineHeight:u,align:d,color:p,uppercase:h};super({tag:r,styles:y=>sw(y,m)}),this.element.textContent=n}}const lw=({borderType:i,color:n})=>qe`
  display: flex;
  align-items: center;
  gap: 10px;
  width: 100%;

  .divider-line {
    flex-grow: 1;
    border: none;
    background: none;
    border-top: 1px ${i} ${n};
    margin: 0;
  }
`;class Nm extends $e{constructor({text:n,borderType:r="solid",color:s=ke.neutral_base}){super({tag:"div",styles:()=>lw({borderType:r,color:s})});const l=document.createElement("hr");if(l.classList.add("divider-line"),this.element.appendChild(l),n){const u=new Be({text:n,size:16,weight:600,lineHeight:24}),d=document.createElement("hr");d.classList.add("divider-line"),u.render(this.element),this.element.appendChild(d)}}}const aw={astropay_logo:{svg:'<svg width="21" height="20" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="Logo"><path id="Vector" fill-rule="evenodd" clip-rule="evenodd" d="M15.166 10.7383C16.0308 10.7383 16.8793 10.8059 17.7074 10.9372L19.7866 16.0843C18.3684 15.4763 16.8067 15.1396 15.166 15.1396C11.4591 15.1396 8.154 16.8578 6.00304 19.541H0.786621C3.45841 14.3156 8.8949 10.7383 15.166 10.7383Z" fill="#143534"/><path id="Vector_2" fill-rule="evenodd" clip-rule="evenodd" d="M13.3258 0.101402L17.0783 9.37359C16.4499 9.30594 15.8109 9.27089 15.1645 9.27089C14.2199 9.27089 13.2932 9.34506 12.3884 9.48851L10.9588 5.95031L9.19826 10.3068C6.78974 11.1741 4.62493 12.5515 2.83423 14.3088L8.57474 0.100586H13.3258V0.101402Z" fill="#151E1D"/></g></svg>'},arrow_right_line:{svg:'<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M15.0626 5.63603L20.7194 11.2929C21.1099 11.6834 21.1099 12.3166 20.7194 12.7071L15.0626 18.364C14.672 18.7545 14.0389 18.7545 13.6483 18.364C13.2578 17.9734 13.2578 17.3403 13.6483 16.9497L17.5981 13H4.35547C3.80318 13 3.35547 12.5523 3.35547 12C3.35547 11.4477 3.80318 11 4.35547 11H17.5981L13.6483 7.05025C13.2578 6.65972 13.2578 6.02656 13.6483 5.63603C14.0389 5.24551 14.672 5.24551 15.0626 5.63603Z" fill="currentColor"/></svg>'},arrow_up_line:{svg:'<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M11.6484 8.29292C12.0389 7.9024 12.6721 7.9024 13.0626 8.29292L18.7194 13.9498C19.11 14.3403 19.11 14.9735 18.7194 15.364C18.3289 15.7545 17.6957 15.7545 17.3052 15.364L12.3555 10.4142L7.40572 15.364C7.0152 15.7545 6.38203 15.7545 5.99151 15.364C5.60098 14.9735 5.60098 14.3403 5.99151 13.9498L11.6484 8.29292Z" fill="currentColor"/></svg>'},arrow_down_line:{svg:'<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M13.0626 15.7071C12.6721 16.0976 12.0389 16.0976 11.6484 15.7071L5.99151 10.0502C5.60098 9.6597 5.60098 9.02653 5.99151 8.63601C6.38203 8.24549 7.0152 8.24549 7.40572 8.63601L12.3555 13.5858L17.3052 8.63601C17.6957 8.24549 18.3289 8.24549 18.7194 8.63601C19.11 9.02653 19.11 9.6597 18.7194 10.0502L13.0626 15.7071Z" fill="currentColor"/></svg>'},bank_card_line:{svg:'<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M14.3555 13C13.8032 13 13.3555 13.4477 13.3555 14C13.3555 14.5523 13.8032 15 14.3555 15H17.3555C17.9078 15 18.3555 14.5523 18.3555 14C18.3555 13.4477 17.9078 13 17.3555 13H14.3555Z" fill="currentColor"/><path fill-rule="evenodd" clip-rule="evenodd" d="M2.35547 7C2.35547 5.34315 3.69861 4 5.35547 4H19.3555C21.0123 4 22.3555 5.34315 22.3555 7V17C22.3555 18.6569 21.0123 20 19.3555 20H5.35547C3.69861 20 2.35547 18.6569 2.35547 17V7ZM5.35547 6C4.80318 6 4.35547 6.44772 4.35547 7V8H20.3555V7C20.3555 6.44772 19.9078 6 19.3555 6H5.35547ZM4.35547 17V10H20.3555V17C20.3555 17.5523 19.9078 18 19.3555 18H5.35547C4.80318 18 4.35547 17.5523 4.35547 17Z" fill="currentColor"/></svg>'},check_circle_fill:{svg:'<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2ZM16.9496 9.79557C17.3401 9.40505 17.3401 8.77188 16.9496 8.38136C16.5591 7.99083 15.9259 7.99083 15.5354 8.38136L10.5856 13.3311L8.46431 11.2098C8.07379 10.8193 7.44063 10.8193 7.0501 11.2098C6.65958 11.6003 6.65958 12.2335 7.0501 12.624L9.80782 15.3817C10.2374 15.8113 10.9339 15.8113 11.3635 15.3817L16.9496 9.79557Z" fill="currentColor"/></svg>'},clock_2_line:{svg:'<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M5.35547 11C5.35547 9.14348 6.09297 7.36301 7.40572 6.05025C8.71848 4.7375 10.499 4 12.3555 4C14.212 4 15.9925 4.7375 17.3052 6.05025C18.618 7.36301 19.3555 9.14348 19.3555 11C19.3555 13.322 18.0835 15.36 16.4845 16.996C14.9315 18.583 13.1775 19.679 12.3555 20.148C11.5335 19.678 9.77947 18.583 8.22647 16.996C6.62747 15.361 5.35547 13.322 5.35547 11ZM12.3555 2C9.96852 2 7.67933 2.94821 5.99151 4.63604C4.30368 6.32387 3.35547 8.61305 3.35547 11C3.35547 14.074 5.03147 16.59 6.79747 18.395C8.57347 20.21 10.5555 21.428 11.4275 21.921C12.0075 22.248 12.7035 22.248 13.2825 21.921C14.1555 21.428 16.1375 20.211 17.9135 18.395C19.6795 16.589 21.3555 14.074 21.3555 11C21.3555 8.61305 20.4073 6.32387 18.7194 4.63604C17.0316 2.94821 14.7424 2 12.3555 2ZM13.3555 7C13.3555 6.73478 13.2501 6.48043 13.0626 6.29289C12.875 6.10536 12.6207 6 12.3555 6C12.0903 6 11.8359 6.10536 11.6484 6.29289C11.4608 6.48043 11.3555 6.73478 11.3555 7V12C11.3555 12.2652 11.4609 12.5195 11.6485 12.707L14.1485 15.207C14.3371 15.3892 14.5897 15.49 14.8519 15.4877C15.1141 15.4854 15.3649 15.3802 15.5503 15.1948C15.7357 15.0094 15.8409 14.7586 15.8431 14.4964C15.8454 14.2342 15.7446 13.9816 15.5625 13.793L13.3555 11.586V7Z" fill="currentColor"/></svg>'},copy_2_line:{svg:'<svg width="25" height="24" viewBox="0 0 25 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M19.3555 2C20.46 2 21.3555 2.89543 21.3555 4V16C21.3555 17.1046 20.46 18 19.3555 18H17.3555V20C17.3555 21.1046 16.46 22 15.3555 22H5.35547C4.2509 22 3.35547 21.1046 3.35547 20V8C3.35547 6.89543 4.2509 6 5.35547 6H7.35547V4C7.35547 2.89543 8.2509 2 9.35547 2H19.3555ZM9.35547 6H15.3555C16.46 6 17.3555 6.89543 17.3555 8V16H19.3555V4L9.35547 4V6ZM5.35547 8L15.3555 8V20H5.35547V8Z" fill="currentColor"/></svg>'},lock_fill:{svg:'<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M6 8C6 4.68629 8.68629 2 12 2C15.3137 2 18 4.68629 18 8H19C20.1046 8 21 8.89543 21 10V20C21 21.1046 20.1046 22 19 22H5C3.89543 22 3 21.1046 3 20V10C3 8.89543 3.89543 8 5 8H6ZM12 4C14.2091 4 16 5.79086 16 8H8C8 5.79086 9.79086 4 12 4ZM12 12C11.4477 12 11 12.4477 11 13V17C11 17.5523 11.4477 18 12 18C12.5523 18 13 17.5523 13 17V13C13 12.4477 12.5523 12 12 12Z" fill="currentColor"/></svg>'},refresh_2_fill:{svg:'<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M1.4981 12.184C1.4881 10.917 2.8451 10.197 3.8771 10.778L3.9901 10.848L6.6681 12.652C8.0921 13.612 7.2061 15.798 5.5681 15.567L5.4311 15.542L5.3221 15.518C5.93702 16.7185 6.86412 17.731 8.00586 18.4491C9.1476 19.1671 10.4618 19.5642 11.8101 19.5985C13.1584 19.6327 14.4911 19.303 15.6679 18.6439C16.8446 17.9848 17.822 17.0207 18.4971 15.853C18.5955 15.6823 18.7265 15.5326 18.8827 15.4126C19.0389 15.2925 19.2172 15.2043 19.4075 15.1532C19.5978 15.102 19.7962 15.0888 19.9916 15.1144C20.187 15.1399 20.3754 15.2037 20.5461 15.302C20.7168 15.4004 20.8665 15.5314 20.9866 15.6876C21.1067 15.8438 21.1948 16.0222 21.246 16.2124C21.2971 16.4027 21.3103 16.6012 21.2848 16.7965C21.2592 16.9919 21.1955 17.1803 21.0971 17.351C18.7801 21.371 13.9781 23.503 9.2821 22.244C7.06294 21.6494 5.09998 20.3434 3.69403 18.5264C2.28808 16.7093 1.5167 14.4814 1.4981 12.184ZM2.9041 6.85404C5.2201 2.83304 10.0221 0.70204 14.7181 1.95904C16.9373 2.55373 18.9002 3.85965 20.3062 5.67669C21.7121 7.49373 22.4835 9.72165 22.5021 12.019C22.5121 13.286 21.1551 14.006 20.1231 13.426L20.0101 13.356L17.3321 11.551C15.9081 10.592 16.7941 8.40604 18.4311 8.63704L18.5691 8.66204L18.6771 8.68504C18.062 7.48471 17.1347 6.47234 15.9929 5.75447C14.8511 5.03659 13.5368 4.63973 12.1885 4.60565C10.8402 4.57158 9.50758 4.90153 8.33093 5.56081C7.15427 6.22009 6.17706 7.18431 5.5021 8.35204C5.40669 8.52821 5.27695 8.68348 5.12054 8.80868C4.96414 8.93389 4.78423 9.02649 4.59145 9.08103C4.39867 9.13556 4.19692 9.15093 3.9981 9.12621C3.79928 9.1015 3.60743 9.03721 3.43387 8.93713C3.26031 8.83706 3.10855 8.70323 2.98756 8.54354C2.86656 8.38385 2.77879 8.20154 2.72941 8.00738C2.68003 7.81321 2.67005 7.61112 2.70005 7.41303C2.73005 7.21494 2.79944 7.02487 2.9041 6.85404Z" fill="currentColor"/></svg>'},share_3_line:{svg:'<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M5 3C3.89543 3 3 3.89543 3 5V19C3 20.1046 3.89543 21 5 21H19C20.1046 21 21 20.1046 21 19V10C21 9.44772 20.5523 9 20 9C19.4477 9 19 9.44772 19 10V19H5V5H9C9.55228 5 10 4.55228 10 4C10 3.44772 9.55228 3 9 3H5Z" fill="currentColor"/><path d="M14 3C13.4477 3 13 3.44772 13 4C13 4.55228 13.4477 5 14 5H16.2722C15.7616 5.35613 15.2241 5.76227 14.6847 6.21863C12.8736 7.75071 10.9792 9.90024 10.0513 12.6838C9.87667 13.2077 10.1598 13.774 10.6838 13.9487C11.2077 14.1233 11.774 13.8402 11.9487 13.3162C12.7183 11.0073 14.3223 9.14484 15.9764 7.74555C17.6252 6.35071 19.2636 5.46704 20.0029 5.10302C20.5633 4.82708 20.6791 4.24461 20.5878 3.85625C20.4967 3.46833 20.1351 3 19.5128 3H14Z" fill="currentColor"/></svg>'},system_pix:{svg:'<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="System"><g id="add_circle_fill"><g id="Group 489"><path id="path2376" d="M17.4574 17.167C16.6924 17.167 15.9728 16.8691 15.4318 16.3283L12.5069 13.4034C12.3015 13.1975 11.9436 13.1981 11.7383 13.4034L8.80277 16.339C8.26174 16.8798 7.54215 17.1777 6.77709 17.1777H6.20068L9.90515 20.8821C11.062 22.0389 12.9378 22.0389 14.0947 20.8821L17.8097 17.167H17.4574Z" fill="currentColor"/><path id="path2380" d="M6.77692 6.822C7.54198 6.822 8.26158 7.11989 8.8026 7.66066L11.7382 10.5967C11.9496 10.8082 12.2948 10.809 12.5067 10.5965L15.4316 7.67136C15.9726 7.1306 16.6922 6.83271 17.4572 6.83271H17.8096L14.0947 3.11772C12.9376 1.96076 11.0619 1.96076 9.90498 3.11772L6.20068 6.82202L6.77692 6.822Z" fill="currentColor"/><path id="path2384" d="M20.8825 9.90525L18.6375 7.66028C18.5881 7.68007 18.5346 7.69243 18.4781 7.69243H17.4573C16.9296 7.69243 16.413 7.90647 16.0402 8.27963L13.1154 11.2045C12.8417 11.4782 12.482 11.6151 12.1227 11.6151C11.763 11.6151 11.4036 11.4782 11.13 11.2048L8.19419 8.26894C7.8213 7.8957 7.30472 7.68174 6.77701 7.68174H5.52192C5.46839 7.68174 5.41836 7.66912 5.37114 7.65134L3.11723 9.90525C1.96027 11.0622 1.96027 12.9379 3.11723 14.0948L5.37105 16.3487C5.41836 16.3309 5.46839 16.3183 5.52192 16.3183H6.77701C7.30472 16.3183 7.8213 16.1043 8.19419 15.7312L11.1297 12.7956C11.6603 12.2654 12.5853 12.2653 13.1154 12.7958L16.0402 15.7205C16.413 16.0936 16.9296 16.3076 17.4573 16.3076H18.4781C18.5346 16.3076 18.5881 16.32 18.6375 16.3398L20.8825 14.0948C22.0394 12.9379 22.0394 11.0622 20.8825 9.90523" fill="currentColor"/></g></g></g></svg>'}},uw=({size:i,color:n})=>qe`
  display: inline-flex;
  align-items: center;
  justify-content: center;

  img {
    width: ${i}px;
    height: ${i}px;
    object-fit: contain;
  }

  svg {
    display: flex;
    width: ${i}px;
    height: ${i}px;
    color: ${n};
  }
`;class Jt extends $e{constructor({name:n,color:r="currentColor",size:s=16,alt:l}){super({tag:"span",styles:()=>uw({size:s,color:r})});const u=aw[n];if(u)this.element.innerHTML=u.svg;else{const d=document.createElement("img");d.src=n,l&&(d.alt=l),this.element.append(d)}}}const cw=to`
  100% {
    transform: rotate(360deg);
  }
`,dw=to`
  0% {
    clip-path: polygon(50% 50%, 0 0, 0 0, 0 0, 0 0, 0 0);
  }
  25% {
    clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 0, 100% 0, 100% 0);
  }
  50% {
    clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 100%, 100% 100%, 100% 100%);
  }
  75% {
    clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 100%, 0 100%, 0 100%);
  }
  100% {
    clip-path: polygon(50% 50%, 0 0, 100% 0, 100% 100%, 0 100%, 0 0);
  }
`,fw=to`
  100% {
    transform: rotate(1turn);
  }
`,pw=(i,n)=>qe`
  width: ${i}px;
  height: ${i}px;
  border-radius: 50%;
  position: relative;
  animation: ${cw} 1s linear infinite;

  &::before {
    content: '';
    box-sizing: border-box;
    position: absolute;
    inset: 0px;
    border-radius: 50%;
    border: 2.5px solid ${n};
    animation: ${dw} 2s linear infinite;
  }
`,hw=(i,n)=>qe`
  width: ${i}px;
  aspect-ratio: 1;
  border-radius: 50%;
  background:
    radial-gradient(farthest-side, ${n} 94%, transparent) top/8px 8px no-repeat,
    conic-gradient(transparent 30%, ${n});
  mask: radial-gradient(farthest-side, transparent calc(100% - 8px), #000 0);
  animation: ${fw} 1s infinite linear;
`;class ic extends $e{constructor({size:n=24,color:r="currentColor",variant:s="inline"}){super({tag:s==="inline"?"span":"div",styles:()=>s==="inline"?pw(n,r):hw(n,r)})}}const mw=i=>{if(/^#/.test(i)){const n=i.substring(1),r=parseInt(n.substring(0,2),16),s=parseInt(n.substring(2,4),16),l=parseInt(n.substring(4,6),16),u=n.length===8?parseInt(n.substring(6,8),16)/255:1,d=u%1===0?u:+u.toFixed(2);return{r,g:s,b:l,a:d}}return i},Ru=(i,n)=>{if(/^#/.test(i)){const{r,g:s,b:l}=mw(i);return`rgba(${r}, ${s}, ${l}, ${n})`}else if(/^rgb/.test(i)){const r=i.replace(/^rgba?\(|\s+|\)$/g,"").split(",");return`rgba(${r[0]}, ${r[1]}, ${r[2]}, ${n})`}else return i},Wi={small:"32px",medium:"40px",large:"48px"},gw=(i="medium")=>`calc(${Wi[i]} + 8px * 2 )`,yw=to`
  0% { transform: none; }
  12.5% { transform: none; }
  25% { transform: scale(1.1); }
  37.5% { transform: scale(1.1); }
  50% { transform: none; }
  100% { transform: none; }
`,vw=(i="medium")=>{const n=Wi[i],r=`calc(${n} * -1)`,s=`calc(${n} * -2)`;return to`
    0% { transform: translateY(0); }
    12.5% { transform: translateY(${r}); }
    25% { transform: translateY(${r}); }
    37.5% { transform: translateY(${s}); }
    87.5% { transform: translateY(${s}); }
    100% { transform: translateY(0); }
  `},Aw=(i="medium")=>{switch(i){case"small":return qe`
        padding: 8px;
        height: ${Wi[i]};
        font-size: 12px;
        line-height: 16px;
        border-radius: 4px;
        font-weight: 600;
      `;case"medium":return qe`
        padding: 8px 16px;
        height: ${Wi[i]};
        line-height: 24px;
        border-radius: 8px;
        font-size: 14px;
      `;case"large":return qe`
        padding: 8px 16px;
        height: ${Wi[i]};
        line-height: 32px;
        border-radius: 8px;
        font-size: 16px;
      `;default:return qe``}},ww=(i,n,r)=>{switch(i){case"primary":return qe`
        background-color: ${r.isApTheme?n.apButtonPrimaryBgColor:n.primaryColor};
        color: ${r.isApTheme?n.apButtonPrimaryTxtColor:n.textPrimaryColor};
        &:hover {
          background-color: ${Ru(r.isApTheme?n.apButtonPrimaryBgColor:n.primaryColor,.7)};
        }
        &:disabled {
          background-color: ${n.apButtonDisableBgColor};
          color: ${n.apButtonDisableTextColor};
          cursor: not-allowed;
        }
      `;case"secondary":return qe`
        background-color: ${r.isApTheme?n.apButtonSecondaryBgColor:n.secondaryColor};
        color: ${r.isApTheme?n.apButtonSecondaryTxtColor:n.textSecondaryColor};
        &:hover {
          background-color: ${Ru(r.isApTheme?n.apButtonSecondaryBgColor:n.secondaryColor,.7)};
        }
        &:disabled {
          background-color: ${n.apButtonDisableBgColor};
          color: ${n.apButtonDisableTextColor};
          cursor: not-allowed;
        }
      `;case"text":return qe`
        background-color: unset;
        color: ${r.isApTheme?n.apButtonTextTxtColor:n.textPrimaryColor};
        &:disabled {
          color: ${n.apButtonDisableTextColor};
          cursor: not-allowed;
        }
      `;case"copy-to-clipboard":return qe`
        background-color: ${r.isApTheme?n.apButtonSecondaryBgColor:n.secondaryColor};
        color: ${r.isApTheme?n.apButtonSecondaryTxtColor:n.textSecondaryColor};
        &:hover {
          background-color: ${Ru(r.isApTheme?n.apButtonSecondaryBgColor:n.secondaryColor,.7)};
        }
        &:disabled {
          background-color: ${n.apButtonDisableBgColor};
          color: ${n.apButtonDisableTextColor};
          cursor: not-allowed;
        }
        &[data-is-copied='true'] {
          background-color: ${n.primaryColor};
          color: ${n.textPrimaryColor};
          box-shadow: none;
          animation: ${yw} 3s cubic-bezier(1, -0.5, 0, 1.5) forwards;
        }
      `;default:return qe``}},Cw=(i,n)=>{const{size:r,variant:s,fullWidth:l}=n,u=qe`
    border: none;
    cursor: pointer;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    overflow: hidden;

    font-family: ${i.fontFamily};
    font-weight: 600;

    width: ${l?"100%":"fit-content"};

    transition:
      background-color 0.3s,
      color 0.3s;

    .content-wrapper {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: flex-start;
      height: 100%;
      transition: transform 0.3s ease;
    }

    .content-info {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 8px;
      transition: transform 0.3s ease;
    }

    .content-copy {
      visibility: hidden;
      opacity: 0;
      transition:
        opacity 0.3s ease,
        visibility 0.3s ease;

      margin-top: ${gw(r)};
    }

    &[data-is-copied='true'] {
      .content-wrapper {
        animation: ${vw(r)} 3s cubic-bezier(1, -0.5, 0, 1.5) forwards;
      }

      .content-copy {
        visibility: visible;
        opacity: 1;
      }
    }
  `;return pA(u,Aw(r),ww(s,i,n))};class Br extends $e{constructor({text:n,size:r="large",variant:s="primary",iconLeft:l,iconRight:u,isLoading:d=!1,isDisabled:p=!1,fullWidth:h=!1,onClick:m,copyText:y="Copied!",isApTheme:v=!1}){const A={size:r,variant:s,fullWidth:h,isApTheme:v};super({tag:"button",styles:R=>Cw(R,A)}),te(this,"isLoading"),te(this,"isDisabled"),te(this,"iconLeft"),te(this,"iconRight"),te(this,"originalText"),te(this,"originalIconLeft"),te(this,"originalIconRight"),te(this,"variant"),te(this,"copyText"),te(this,"onClick"),this.isLoading=d,this.isDisabled=p,this.onClick=m,this.copyText=y,this.element.disabled=p,this.originalText=n,this.originalIconLeft=l,this.originalIconRight=u,this.variant=s,this.updateContent({text:n,iconLeft:l,iconRight:u}),this.element.addEventListener("click",this.handleClick.bind(this))}updateContent({text:n,iconLeft:r,iconRight:s}){this.element.innerHTML="";const l=document.createElement("div");if(l.classList.add("content-wrapper"),this.isLoading){const u=new ic({size:16}).element;u.style.margin="auto",l.append(u),this.element.append(l)}else{const u=document.createElement("div");if(u.classList.add("content-info"),r&&(this.iconLeft=new Jt({name:r}),u.append(this.iconLeft.element)),n&&u.appendChild(document.createTextNode(n)),s&&(this.iconRight=new Jt({name:s}),u.append(this.iconRight.element)),l.append(u),this.variant==="copy-to-clipboard"){const d=document.createElement("div");d.classList.add("content-copy"),d.append(document.createTextNode(this.copyText)),l.append(d)}this.element.append(l)}}async handleClick(n){if(this.variant==="copy-to-clipboard"&&this.copyText){await Hs(this.copyText),this.element.setAttribute("data-is-copied","true"),setTimeout(()=>{this.element.setAttribute("data-is-copied","false")},3e3);return}this.onClick&&!this.isLoading&&!this.isDisabled&&this.onClick(n)}setLoading(n){this.isLoading=n,this.updateContent({text:this.originalText,iconLeft:this.originalIconLeft,iconRight:this.originalIconRight})}setDisabled(n){this.isDisabled=n,this.element.disabled=n}}const Ew=i=>qe`
    display: flex;
    flex-direction: column;
    gap: 8px;

    font-family: ${i.fontFamily};
    width: 180px;

    .select-input-container {
      position: relative;
      width: auto;

      display: flex;
      align-items: center;

      background-color: #ecf1f0;
      border: 3px solid transparent;
      transition: border-color 0.3s ease;
      cursor: pointer;

      height: 32px;
      padding: 8px 32px 8px 8px;
      border-radius: 8px;

      :hover,
      :focus-within {
        border: 3px solid ${i.primaryColor};
      }
    }

    .select-input-field {
      height: 100%;
      width: 100%;
      font-size: 16px;
      caret-color: ${i.primaryColor};
      background-color: transparent;

      border: unset;
      outline: none;
      flex-grow: 1;

      cursor: pointer;
    }

    .dropdown-icon-wrapper {
      position: absolute;
      right: 8px;
      transition: transform 0.3s ease;
      display: flex;
      align-items: center;
      justify-content: center;

      cursor: pointer;
    }

    .select-options-list {
      display: none;
      position: absolute;
      margin: 0;
      top: calc(100% + 3px);
      left: -3px;
      min-width: 200px;
      width: auto;
      max-height: 300px;
      overflow-y: auto;
      overflow-x: hidden;
      border: 1px solid #ccc;
      border-radius: 8px;
      background-color: #fff;
      z-index: 10;

      list-style-type: none;
      padding: 0;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .select-option {
      display: flex;
      align-items: center;
      gap: 8px;
      padding: 8px;
      cursor: pointer;

      &:hover {
        background-color: #f0f0f0;
      }

      &.highlighted {
        background-color: ${i.primaryColor};
        color: #fff;
      }
    }

    .empty-option {
      padding: 8px;
    }

    .select-icon {
      margin-right: 8px;
    }
  `;class xw extends $e{constructor({name:n,label:r,options:s,helperText:l,placeholder:u="Select",emptyMessage:d="Select an item"}){if(super({tag:"div",styles:h=>Ew(h)}),te(this,"selectContainer"),te(this,"labelElement"),te(this,"inputElement"),te(this,"dropdownIcon"),te(this,"optionsList"),te(this,"isOpen",!1),te(this,"helperTextElement"),te(this,"options"),te(this,"emptyMessage"),te(this,"selectedValue",null),te(this,"highlightedIndex",-1),this.options=s,this.emptyMessage=d,r){this.labelElement=document.createElement("label");const h=new Be({text:r,size:14,lineHeight:21}).element;this.labelElement.append(h),this.labelElement.htmlFor=n,this.element.append(this.labelElement)}this.selectContainer=document.createElement("div"),this.selectContainer.classList.add("select-input-container"),this.element.append(this.selectContainer),this.inputElement=document.createElement("input"),this.inputElement.classList.add("select-input-field"),this.inputElement.name=n,this.inputElement.id=n,this.inputElement.autocomplete="off",u&&(this.inputElement.placeholder=u),this.selectContainer.append(this.inputElement),this.dropdownIcon=document.createElement("span"),this.dropdownIcon.classList.add("dropdown-icon-wrapper");const p=new Jt({name:"arrow_down_line",size:24}).element;if(this.dropdownIcon.appendChild(p),this.selectContainer.appendChild(this.dropdownIcon),this.optionsList=document.createElement("ul"),this.optionsList.classList.add("select-options-list"),this.selectContainer.append(this.optionsList),this.renderOptions(s),this.selectContainer.addEventListener("click",h=>{this.optionsList.contains(h.target)||(this.toggleDropdown(!0),this.inputElement.setSelectionRange(0,this.inputElement.value.length),this.inputElement.focus())}),this.inputElement.addEventListener("input",h=>this.handleInput(h)),this.inputElement.addEventListener("keydown",h=>this.handleKeyDown(h)),l){const h=new Be({text:l}).element;this.helperTextElement=document.createElement("span"),this.helperTextElement.append(h),this.element.append(this.helperTextElement)}document.addEventListener("click",this.handleClickOutside.bind(this))}renderOptions(n){if(this.optionsList.innerHTML="",n.length>0)n.forEach(r=>{const s=document.createElement("li");if(s.classList.add("select-option"),r.icon){const u=new Jt({name:r.icon,size:18}).element;s.appendChild(u)}const l=new Be({text:`${r.name} ${r.value}`,size:20,lineHeight:30,weight:500}).element;s.appendChild(l),s.dataset.value=String(r.value),s.addEventListener("click",()=>this.handleOptionClick(r)),this.optionsList.append(s)});else{const r=document.createElement("div");r.classList.add("empty-option");const s=new Be({text:this.emptyMessage}).element;r.append(s),this.optionsList.append(r)}}handleInput(n){const r=n.target.value.toLowerCase();if(r===""){const l=this.selectContainer.querySelector(".select-icon");l&&l.remove(),this.selectedValue=null}const s=this.options.filter(l=>l.name.toLowerCase().includes(r)||String(l.value).toLowerCase().includes(r));this.renderOptions(s),this.toggleDropdown(!0)}toggleDropdown(n){this.isOpen=n,this.optionsList.style.display=this.isOpen?"block":"none",this.dropdownIcon.style.transform=this.isOpen?"rotate(-180deg)":"rotate(0deg)"}handleOptionClick({value:n,icon:r}){const s=this.selectContainer.querySelector(".select-icon");if(s&&s.remove(),r){const u=new Jt({name:r,size:18}).element;u.classList.add("select-icon"),this.selectContainer.insertBefore(u,this.inputElement)}this.inputElement.value=String(n),this.selectedValue=n,this.renderOptions(this.options),this.toggleDropdown(!1),this.highlightedIndex=-1;const l=new Event("change",{bubbles:!0});this.inputElement.dispatchEvent(l)}getSelectedValue(){return this.selectedValue}handleClickOutside(n){this.selectContainer.contains(n.target)||this.toggleDropdown(!1)}handleKeyDown(n){const{key:r}=n;if(r==="Escape"){this.toggleDropdown(!1);return}if(!this.isOpen)return;const s=this.optionsList.querySelectorAll(".select-option");switch(r){case"ArrowDown":n.preventDefault(),this.highlightedIndex=(this.highlightedIndex+1)%s.length,this.highlightOption(this.highlightedIndex);break;case"ArrowUp":n.preventDefault(),this.highlightedIndex=(this.highlightedIndex-1+s.length)%s.length,this.highlightOption(this.highlightedIndex);break;case"Enter":if(n.preventDefault(),this.highlightedIndex>=0&&this.highlightedIndex<s.length){const l=this.options[this.highlightedIndex];this.handleOptionClick(l)}break}}highlightOption(n){const r=this.optionsList.querySelectorAll(".select-option");if(r.forEach(s=>s.classList.remove("highlighted")),n>=0&&n<r.length){const s=r[n];s.classList.add("highlighted"),s.scrollIntoView({block:"nearest"})}}destroy(){document.removeEventListener("click",this.handleClickOutside.bind(this)),document.removeEventListener("keydown",this.handleKeyDown.bind(this)),super.destroy()}}const Sw=i=>qe`
    display: flex;
    flex-direction: column;
    gap: 8px;

    font-family: ${i.fontFamily};
    width: 100%;

    .input-text-field {
      height: 32px;
      padding: 8px;
      border-radius: 8px;
      font-size: 16px;
      outline: none;
      caret-color: ${i.primaryColor};
      background-color: #ecf1f0;

      border: 3px solid transparent;
      transition: border-color 0.3s ease;

      :hover,
      :focus {
        border: 3px solid ${i.primaryColor};
      }

      &::-webkit-outer-spin-button,
      &::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }
      -moz-appearance: 'textfield';
    }
  `;class bw extends $e{constructor({name:n,label:r,helperText:s,type:l="text",placeholder:u}){if(super({tag:"div",styles:d=>Sw(d)}),te(this,"labelElement"),te(this,"inputElement"),te(this,"helperTextElement"),r){this.labelElement=document.createElement("label");const d=new Be({text:r,size:14,lineHeight:21}).element;this.labelElement.append(d),this.labelElement.htmlFor=n,this.element.append(this.labelElement)}if(this.inputElement=document.createElement("input"),this.inputElement.type="text",this.inputElement.inputMode=l,this.inputElement.name=n,this.inputElement.id=n,this.inputElement.autocomplete="off",u&&(this.inputElement.placeholder=u),this.inputElement.classList.add("input-text-field"),this.element.append(this.inputElement),["number","tel"].includes(l)&&this.inputElement.addEventListener("input",this.handleNumericInput.bind(this)),s){const d=new Be({text:s}).element;this.helperTextElement=document.createElement("span"),this.helperTextElement.append(d),this.element.append(this.helperTextElement)}}handleNumericInput(n){const r=n.target;r.value=r.value.replace(/[^0-9]/g,"")}getValue(){return this.inputElement.value}setValue(n){this.inputElement.value=n}setHelperText(n){this.helperTextElement&&(this.helperTextElement.textContent=n)}}const kw=()=>qe`
  display: flex;
  flex-direction: column;
  gap: 12px;

  .inputs-wrapper {
    display: flex;
    align-items: center;
    gap: 8px;

    width: 100%;
  }
`;class Rw extends $e{constructor({availableCountries:n,onSubmit:r}){super({tag:"form",styles:()=>kw()}),te(this,"inputDialCode"),te(this,"inputPhoneNumber"),te(this,"btnContinue"),te(this,"inputsWrapper"),te(this,"onSubmit"),this.onSubmit=r;const s=n.map(l=>({name:l.name,value:l.callingCode,icon:l.flag}));this.inputsWrapper=document.createElement("div"),this.inputsWrapper.classList.add("inputs-wrapper"),this.inputDialCode=new xw({name:"country",options:s,emptyMessage:"Please enter a country or code"}),this.inputPhoneNumber=new bw({name:"phone",placeholder:"Enter your phone number",type:"tel"}),this.inputsWrapper.append(this.inputDialCode.element,this.inputPhoneNumber.element),this.btnContinue=new Br({text:"Continue",iconLeft:"astropay_logo",iconRight:"arrow_right_line",fullWidth:!0,size:"large",isDisabled:!0,isApTheme:!0,onClick:l=>{l.preventDefault(),this.handleSubmit()}}),this.element.append(this.inputsWrapper,this.btnContinue.element),this.inputDialCode.element.addEventListener("change",()=>this.validateForm()),this.inputPhoneNumber.element.addEventListener("input",()=>this.validateForm()),this.validateForm()}validateForm(){const n=this.inputDialCode.getSelectedValue(),r=this.inputPhoneNumber.getValue(),s=r&&r.toString().length>=5,l=!!n;this.btnContinue.setDisabled(!s||!l)}handleSubmit(){const n=new FormData(this.element),r=n.get("country"),s=n.get("phone"),l=`${r}${s}`;this.btnContinue.setLoading(!1),this.onSubmit({phoneNumber:l})}setLoading(n){this.btnContinue.setLoading(n)}}const Ps={createPayment:"/v1/web/payment/create",identifyPayment:"/v1/web/payment/:paymentExternalId/identify",paymentStatus:"/v1/web/payment/:paymentExternalId/status",paymentMethodCreation:"/v1/web/payment/:paymentExternalId/pay"},Bu=(i,n)=>{let r=i;return Object.keys(n).forEach(s=>{r=r.replace(`:${s}`,n[s])}),r};class Us{}te(Us,"postCreatePayment",async i=>{try{return await Zi.POST({data:i,url:Ps.createPayment})}catch(n){return Promise.reject(n)}}),te(Us,"postIdentifyPayment",async(i,n)=>{try{return await Zi.POST({data:n,url:Bu(Ps.identifyPayment,{paymentExternalId:i})})}catch(r){return Promise.reject(r)}});const Iw=()=>qe`
  display: flex;
  flex-direction: column;
  gap: 10px;

  .sent-message-wrapper {
    will-change: transform, opacity;
  }

  .secondary-sent-message-wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 8px;
  }
  .secondary-sent-message-wrapper > * {
    opacity: 0;

    transition:
      opacity 0.5s ease,
      transform 0.5s ease;
  }

  .secondary-sent-message-wrapper.visible > * {
    opacity: 1;
  }
`,Nw=({bgColor:i})=>qe`
  display: flex;
  align-items: center;
  gap: 4px;

  width: fit-content;
  background-color: ${i};
  padding: 2px 4px;
  border-radius: 4px;
`;class Mw extends $e{constructor({text:n,color:r=Lt.getStyles().apPillTxtColor,bgColor:s=Lt.getStyles().apPillBgColor,icon:l}){if(super({tag:"div",styles:()=>Nw({bgColor:s})}),l){const d=new Jt({name:l,size:12,color:r}).element;this.element.append(d)}const u=new Be({text:n,weight:500,color:r}).element;this.element.append(u)}}const Lw=i=>qe`
  padding: 16px;
  border: 1px solid ${i.apPrimaryColor};
  border-radius: 16px;
  background-color: ${ke.neutral_lightest};
  display: flex;
  justify-content: center;
  align-items: center;
`;class Mm extends $e{constructor({value:n,width:r=130,altText:s="QR Code"}){super({tag:"div",styles:l=>Lw(l)}),PA.toDataURL(n,{width:r,margin:0}).then(l=>{const u=document.createElement("img");u.src=l,u.alt=s,u.width=r,this.element.append(u)}).catch(l=>{console.error("Failed to generate QR code:",l)})}}class Tw extends $e{constructor({paymentExternalId:n,user:r,countries:s,benefits:l}){if(super({tag:"div",styles:()=>Iw()}),te(this,"paymentExternalId"),te(this,"userData"),te(this,"countries"),te(this,"btnAstroPay"),te(this,"fomCountryPhone"),te(this,"pushFeedbackWrapper"),te(this,"isRendering",!1),this.paymentExternalId=n,this.userData=r,this.countries=s,this.btnAstroPay=new Br({text:"AstroPay",onClick:this.handleAstroPayClick.bind(this),fullWidth:!0,iconLeft:"astropay_logo",iconRight:"arrow_right_line",isApTheme:!0}),this.element.append(this.btnAstroPay.element),l){const u=new Mw({text:l.batch.title,color:Lt.getStyles().apPillTxtColor,bgColor:Lt.getStyles().apPillBgColor,icon:l.batch.iconLeft??void 0}).element;this.element.append(u)}}async handleAstroPayClick(){if(!this.isRendering){if(this.isRendering=!0,nw()){this.handleMobileFlow();return}if(this.userData.hasAccount){this.handleAccountFlow();return}this.renderPhoneInput()}}async fetchIdentifyUser(n,r){try{const s={phoneNumber:n??""};if((await Us.postIdentifyPayment(this.paymentExternalId,s)).user.hasAccount){this.handleAccountFlow();return}r==null||r()}catch{const s=new Be({text:"Failed to validate your account. Please try again.",size:12,color:"red"}).element;this.element.appendChild(s)}}async handlePhoneNumberSubmit(n){try{this.fomCountryPhone&&this.fomCountryPhone.setLoading(!0),await this.fetchIdentifyUser(n.phoneNumber,()=>alert("Landing page redirect - Dont have account"))}finally{this.fomCountryPhone&&this.fomCountryPhone.setLoading(!1)}}renderPhoneInput(){this.element.innerHTML="",this.fomCountryPhone=new Rw({availableCountries:this.countries??[],onSubmit:n=>this.handlePhoneNumberSubmit(n)}),this.element.append(this.fomCountryPhone.element)}renderAlreadySent(){this.pushFeedbackWrapper&&this.pushFeedbackWrapper.remove(),this.btnAstroPay.setDisabled(!0),this.pushFeedbackWrapper=document.createElement("div"),this.pushFeedbackWrapper.classList.add("sent-message-wrapper");const n=new Be({variant:"div",text:"We sent a push notification to your app...",size:14,lineHeight:21,weight:500,align:"center"}).element;this.pushFeedbackWrapper.append(n),this.element.appendChild(this.pushFeedbackWrapper),setTimeout(()=>{const r=document.createElement("div");r.classList.add("secondary-sent-message-wrapper");const s=new Be({text:"Didn't receive it? Scan the QR code or copy the link"}).element,l=new Mm({width:100,value:"https://payment.com/123456",altText:"QR Code for payment"}).element,u=new Br({text:"Copy payment link",variant:"copy-to-clipboard",size:"small",iconRight:"copy_2_line",onClick:()=>Hs("https://payment.com/123456")}).element;r.append(s,l,u),this.pushFeedbackWrapper&&this.pushFeedbackWrapper.append(r),setTimeout(()=>{r.classList.add("visible")},50)},4500)}handleMobileFlow(){alert("Universal link redirect - Mobile")}handleAccountFlow(){alert("Push Notification - Has account"),this.renderAlreadySent()}}class Vw extends $e{constructor({content:n}){super({tag:"div"}),this.element.classList.add("accordion-content"),typeof n=="function"?this.element.appendChild(n()):this.element.appendChild(n)}}const Fw=()=>qe`
  .accordion-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 12px 0;
    gap: 4px;
    width: 100%;
    cursor: pointer;
  }

  .arrow-wrapper {
    margin-left: auto;
    transition: transform 0.3s ease-out;

    display: flex;
    align-items: center;
    justify-content: center;

    &.rotated {
      transform: rotate(-180deg);
    }
  }

  .accordion-content {
    height: auto;
    padding: 12px 0;
  }
`;class Ow extends $e{constructor({icon:n,title:r,content:s,isOpen:l=!1,onClick:u}){super({tag:"div",styles:()=>Fw()}),te(this,"isOpen"),te(this,"content"),te(this,"onClick"),te(this,"accordionContent",null),te(this,"arrowWrapper"),this.isOpen=l,this.content=s,this.onClick=u;const d=document.createElement("div");d.classList.add("accordion-header"),d.addEventListener("click",this.handleClick.bind(this));const p=new Jt({name:n,size:16}).element,h=new Be({variant:"div",size:16,weight:500,text:r}).element;this.arrowWrapper=document.createElement("span"),this.arrowWrapper.classList.add("arrow-wrapper");const m=new Jt({name:"arrow_down_line",size:24}).element;this.arrowWrapper.appendChild(m),d.append(p,h,this.arrowWrapper),this.element.appendChild(d),this.isOpen&&(this.renderContent(),this.arrowWrapper.classList.add("rotated"))}handleClick(){this.onClick()}toggleContent(){this.isOpen||(this.renderContent(),this.arrowWrapper.classList.add("rotated")),this.isOpen=!0}destroyContent(){var n;this.isOpen&&((n=this.accordionContent)==null||n.destroy(),this.accordionContent=null,this.arrowWrapper.classList.remove("rotated")),this.isOpen=!1}renderContent(){this.accordionContent||(this.accordionContent=new Vw({content:this.content}),this.element.appendChild(this.accordionContent.element))}}class Pw extends $e{constructor({items:n}){super({tag:"div"}),te(this,"openIndex",null),te(this,"accordionItems",[]),this.accordionItems=n.map((r,s)=>{const l=new Ow({icon:r.icon,title:r.title,content:r.content,isOpen:this.openIndex===s,onClick:()=>this.handleItemClick(s)});if(this.element.appendChild(l.element),s!==n.length-1){const u=new Nm({borderType:"dashed"}).element;u.style.padding="4px 0",this.element.appendChild(u)}return l})}handleItemClick(n){this.openIndex===n?this.openIndex=null:this.openIndex=n,this.updateItems()}updateItems(){this.accordionItems.forEach((n,r)=>{this.openIndex===r?n.toggleContent():n.destroyContent()})}}const Uw=i=>{const n=Math.floor(i/60),r=i%60;return`${String(n).padStart(2,"0")}:${String(r).padStart(2,"0")}`},zw=i=>qe`
  display: flex;
  flex-wrap: nowrap; /* Prevent wrapping */
  align-items: center;
  gap: 4px;
  width: fit-content;
  margin: auto;

  padding: 4px 8px;
  border-radius: 12px;
  background-color: ${i.apWarningBgColor};

  min-width: min-content;
  white-space: nowrap;
`;class qw extends $e{constructor(n){super({tag:"div",styles:r=>zw(r)}),te(this,"compProps"),te(this,"intervalId",null),te(this,"isTimeOver",!1),this.compProps={timeoutText:"Time's up!",...n},this.startTimer(),this.renderTime()}startTimer(){this.intervalId=window.setInterval(()=>{var n,r;this.compProps.time-=1,this.renderTime(),this.compProps.time<=0&&(this.isTimeOver=!0,this.stopTimer(),(r=(n=this.compProps).onTimeOut)==null||r.call(n),this.renderTime())},1e3)}stopTimer(){this.intervalId&&(clearInterval(this.intervalId),this.intervalId=null)}renderTime(){const n=Uw(this.compProps.time);if(this.element.innerHTML="",this.compProps.iconLeft){const r=new Jt({name:this.compProps.iconLeft,color:Lt.getStyles().apWarningTxtColor}).element;this.element.append(r)}if(this.compProps.text){const r=this.isTimeOver?this.compProps.timeoutText:this.compProps.text,s=this.isTimeOver?"":n,l=new Be({variant:"div",text:r,size:14,weight:400,lineHeight:21,color:Lt.getStyles().apWarningTxtColor,align:"center"}).element,u=new Be({variant:"div",text:s,size:14,weight:600,lineHeight:21,color:Lt.getStyles().apWarningTxtColor,align:"center"}).element;if(u.style.fontFamily="monospace",this.element.append(l,u),this.compProps.iconRight){const d=new Jt({name:this.compProps.iconRight,color:Lt.getStyles().apWarningTxtColor}).element;this.element.append(d)}}}destroy(){this.stopTimer(),super.destroy()}}class zs{}te(zs,"postPaymentMethodCreation",async i=>{try{const n=await Zi.POST({url:Bu(Ps.paymentMethodCreation,{paymentExternalId:i.paymentExternalId}),data:i});return console.log("response",n),n}catch(n){return Promise.reject(n)}}),te(zs,"getPaymentMethodStatus",async i=>{try{return await Zi.GET({url:Bu(Ps.paymentStatus,{paymentExternalId:i})})}catch(n){return Promise.reject(n)}});var Bn=(i=>(i.ACTION="ACTION",i.AMOUNT_DISPLAY="AMOUNT_DISPLAY",i.COPY="COPY",i.DESCRIPTION="DESCRIPTION",i.EXPIRATION_TIMER="EXPIRATION_TIMER",i.QR_CODE="QR_CODE",i.SHARE="SHARE",i))(Bn||{}),Lm=(i=>(i.FINISHED="FINISHED",i.ACCEPTED="ACCEPTED",i.PENDING="PENDING",i.CANCELLED="CANCELLED",i))(Lm||{});const jw={AED:"ar-AE",AOA:"pt-AO",AND:"ca-AD",ARS:"es-AR",AUD:"en-AU",BDT:"bn-BD",BGN:"bg-BG",BOB:"es-BO",BRL:"pt-BR",CAD:"en-CA",CDF:"fr-CD",CLP:"es-CL",CNY:"zh-CN",COP:"es-CO",CZK:"cs-CZ",DKK:"da-DK",EGP:"ar-EG",ETB:"am-ET",EUR:"de-DE",GBP:"en-GB",GHS:"en-GH",GTQ:"es-GT",HNL:"es-HN",HKD:"zh-HK",HUF:"hu-HU",IDR:"id-ID",INR:"hi-IN",JPY:"ja-JP",KES:"en-KE",KRW:"ko-KR",KWD:"ar-KW",KZT:"kk-KZ",LKR:"si-LK",LSL:"st-LS",MAD:"ar-MA",MGA:"mg-MG",MKD:"mk-MK",MMK:"my-MM",MNT:"mn-MN",MOP:"zh-MO",MXN:"es-MX",MYR:"ms-MY",MZN:"pt-MZ",NGN:"en-NG",NIO:"es-NI",NOK:"no-NO",NPR:"ne-NP",NZD:"en-NZ",PAB:"es-PA",PEN:"es-PE",PKR:"ur-PK",PLN:"pl-PL",PYG:"es-PY",QAR:"ar-QA",RMB:"zh-CN",RSD:"sr-RS",RUB:"ru-RU",RWF:"rw-RW",SAR:"ar-SA",SEK:"sv-SE",SLL:"en-SL",SVC:"es-SV",THB:"th-TH",TND:"ar-TN",TRY:"tr-TR",TTD:"en-TT",TWD:"zh-TW",TZS:"sw-TZ",UAH:"uk-UA",UGX:"en-UG",USD:"en-US",UYU:"es-UY",UZS:"uz-UZ",VND:"vi-VN",XAF:"fr-CM",XOF:"fr-SN",ZAR:"en-ZA",ZWD:"en-ZW",ZWL:"en-ZW"},Ih=(i,n)=>{const r=jw[n]||"en-US";return new Intl.NumberFormat(r,{style:"decimal",currency:n,minimumFractionDigits:2,maximumFractionDigits:2}).format(i)},Bw={AED:"د.إ",AOA:"Kz",AND:"€",ARS:"$",AUD:"$",BDT:"৳",BGN:"лв",BOB:"Bs.",BRL:"R$",CAD:"$",CDF:"FC",CLP:"$",CNY:"¥",COP:"$",CZK:"Kč",DKK:"kr",EGP:"£",ETB:"Br",EUR:"€",GBP:"£",GHS:"₵",GTQ:"Q",HNL:"L",HKD:"$",HUF:"Ft",IDR:"Rp",INR:"₹",JPY:"¥",KES:"KSh",KRW:"₩",KWD:"د.ك",KZT:"₸",LKR:"₨",LSL:"L",MAD:"د.م.",MGA:"Ar",MKD:"ден",MMK:"K",MNT:"₮",MOP:"MOP$",MXN:"$",MYR:"RM",MZN:"MT",NGN:"₦",NIO:"C$",NOK:"kr",NPR:"₨",NZD:"$",PAB:"B/.",PEN:"S/.",PKR:"₨",PLN:"zł",PYG:"₲",QAR:"﷼",RMB:"¥",RSD:"РСД",RUB:"₽",RWF:"FRw",SAR:"ر.س",SEK:"kr",SLL:"Le",SVC:"$",THB:"฿",TND:"د.ت",TRY:"₺",TTD:"$",TWD:"NT$",TZS:"TSh",UAH:"₴",UGX:"USh",USD:"US$",UYU:"$",UZS:"so'm",VND:"₫",XAF:"FCFA",XOF:"CFA",ZAR:"R",ZWD:"$",ZWL:"$"},Ww=i=>i===void 0?"":Bw[i.trim()]||i,Dw=(i,n,r)=>r==="symbol"?`${Ww(n)} ${Ih(i,n)}`:`${n} ${Ih(i,n)}`,Kw=i=>qe`
  display: flex;
  flex-direction: column;
  gap: 10px;

  align-items: center;

  .loading-wrapper {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 100%;
    gap: 8px;
    min-height: 250px;
  }

  .qr-code-wrapper {
    padding: 16px;
    border: 1px solid ${i.primaryColor};
    border-radius: 16px;
    background-color: ${ke.neutral_lightest};
  }

  .success-wrapper {
    display: flex;
    flex-direction: column;
    gap: 12px;
  }

  .timeout-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 8px;
  }
`;class Qw extends $e{constructor({methodCode:n,paymentExternalId:r}){super({tag:"div",styles:d=>Kw(d)}),te(this,"loadingWrapper"),te(this,"paymentMethodData"),te(this,"timerElement",null),this.paymentMethodData={methodCode:n,paymentExternalId:r},this.loadingWrapper=document.createElement("div"),this.loadingWrapper.classList.add("loading-wrapper");const s=new ic({size:100,variant:"fetching",color:Lt.getStyles().primaryColor}).element,l=new Be({text:"Waiting for confirmation...",size:20,lineHeight:30,weight:600}).element;l.style.marginTop="8px";const u=new Be({text:"Please do not close this window.",size:16,lineHeight:24}).element;this.loadingWrapper.append(s,l,u),this.element.appendChild(this.loadingWrapper),this.fetchPaymentMethodData()}async fetchPaymentMethodData(){try{const n=await zs.postPaymentMethodCreation(this.paymentMethodData);this.renderSections(n.sections),this.fetchPaymentStatus()}catch{const n=new Be({text:"Failed to load payment data. Please try again.",size:12,color:"red"}).element;this.element.appendChild(n)}finally{this.loadingWrapper.remove()}}async fetchPaymentStatus(){const n=await zs.getPaymentMethodStatus(this.paymentMethodData.paymentExternalId),{statusCode:r,...s}=n;r===202&&this.handlePollingStatus(s)}handlePollingStatus(n){n.status===Lm.ACCEPTED&&setTimeout(()=>{this.renderSuccess()},1e3)}renderSections(n){n.filter(r=>!!r).sort((r,s)=>r.order-s.order).forEach(r=>{const{componentType:s,metadata:l}=r;switch(s){case Bn.ACTION:this.renderAction(l);break;case Bn.AMOUNT_DISPLAY:this.renderAmountDisplay(l);break;case Bn.COPY:this.renderCopy(l);break;case Bn.DESCRIPTION:this.renderDescription(l);break;case Bn.EXPIRATION_TIMER:this.renderTimer(l);break;case Bn.QR_CODE:this.renderQRCode(l);break;case Bn.SHARE:this.renderShare(l);break;default:console.warn("Unknown component type:",s)}})}renderCopy(n){const r=new Br({text:n.label,variant:"copy-to-clipboard",size:"medium",iconLeft:n.iconLeft,iconRight:n.iconRight??"copy_2_line",onClick:()=>Hs(n.value)}).element;this.element.append(r)}renderShare(n){const r=new Br({text:n.label,variant:"text",size:"medium",iconRight:n.iconRight,iconLeft:n.iconLeft,onClick:()=>{var s,l,u;return tw(((s=n==null?void 0:n.richTextInfo)==null?void 0:s.title)??"Share",((l=n==null?void 0:n.richTextInfo)==null?void 0:l.description)??n.value,(u=n==null?void 0:n.richTextInfo)==null?void 0:u.url)}}).element;this.element.append(r)}renderDescription(n){const r=new Be({text:`${n.text} ${Dw(n.amount,n.currency,Im.getCurrencyMode())}`,size:16,lineHeight:24,weight:600}).element;this.element.append(r)}renderQRCode(n){const r=new Mm({value:n.value,altText:"Payment QR Code"}).element;this.element.append(r)}renderAmountDisplay(n){const r=new Be({text:n.value,size:16,lineHeight:24,weight:600}).element;this.element.append(r)}renderAction(n){console.log("Rendering ACTION:",n)}renderTimer(n){const r=new qw({time:n.time,text:n.label,iconLeft:n.iconLeft,iconRight:n.iconRight,timeoutText:n.timeoutInfo.description,onTimeOut:()=>this.handleTimeout(n)});this.timerElement=r.element,this.element.append(this.timerElement)}handleTimeout(n){const r=document.createElement("div");if(r.classList.add("timeout-container"),this.timerElement&&r.append(this.timerElement),n.timeoutInfo.retry){const s=new Br({text:"Try Again",variant:"primary",size:"medium",iconRight:"refresh_2_fill",onClick:()=>{this.element.innerHTML="",this.element.appendChild(this.loadingWrapper),this.fetchPaymentMethodData()}}).element;r.append(s)}this.element.innerHTML="",this.element.append(r)}renderSuccess(){const n=document.createElement("div");n.classList.add("success-wrapper");const r=new Jt({name:"check_circle_fill",size:100,color:Lt.getStyles().primaryColor}).element,s=new Be({text:"Payment Successful!",size:20,lineHeight:30,align:"center"}).element,l=new Be({text:"Your payment of R$ 200,00 has been completed.",size:16,lineHeight:24,align:"center"}).element;n.append(r,s,l),this.element.append(n),console.log("Success wrapper in DOM?",document.contains(n))}}const Yw={PIX:"system_pix",CREDIT_CARD:"bank_card_line"},Gw=({paymentMethods:i,paymentExternalId:n})=>i.filter(r=>r.enabled).map(r=>({icon:r.logo||Yw[r.code],title:r.label,content:()=>new Qw({paymentExternalId:n,methodCode:r.code}).element})),Zw=i=>qe`
    background-color: ${i.backgroundColor};

    display: flex;
    flex-direction: column;
    gap: 12px;
    padding: 4px;

    max-width: ${i.width}px;

    .loading-wrapper {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      width: 100%;
      gap: 8px;
      min-height: 250px;
    }
  `;class Jw extends $e{constructor({amount:n,currency:r,country:s}){super({tag:"div",elementId:"payment-component",styles:u=>Zw(u)}),te(this,"loadingWrapper"),Bi.registerComponent(this),this.loadingWrapper=document.createElement("div"),this.loadingWrapper.classList.add("loading-wrapper");const l=new ic({size:100,variant:"fetching",color:Lt.getStyles().primaryColor}).element;this.loadingWrapper.append(l),this.element.appendChild(this.loadingWrapper),this.createPayment(n,r,s)}async createPayment(n,r,s){try{const l={country:s,currency:r,amount:n},u=await Us.postCreatePayment(l);this.renderPaymentMethods(u)}catch(l){console.error("Failed to create payment:",l);const u=new Be({text:"Failed to load payment data. Please try again later.",size:12,color:"red"}).element;this.element.appendChild(u)}finally{this.loadingWrapper.remove()}}renderPaymentMethods(n){const{paymentExternalId:r,user:s,paymentMethods:l,countries:u,paymentComponentDescription:d,benefits:p}=n,h=new Be({text:rc.translate("astro_express_checkout"),variant:"div",size:16,weight:600}).element;if(this.element.append(h),d){const R=new Be({text:d}).element;this.element.append(R)}const m=new Tw({paymentExternalId:r,user:s,countries:u,benefits:p}).element,y=new Nm({borderType:"dashed"}).element,v=Gw({paymentMethods:l,paymentExternalId:r}),A=new Pw({items:v}).element;this.element.append(m,y,A)}}WA();typeof window<"u"&&(window.AstroPayPaymentsLib=Bi);const Hw=({settings:i})=>{const[n,r]=G.useState(!0),s=G.useRef(null),l=G.useRef(null),u=()=>{l.current&&(l.current.destroy(),l.current=null),Bi.destroy();const d="your-api-token",p=i!=null&&i.styles?{...i.styles}:{};if(Bi.init(d,{theme:i.theme,language:i.locale,currencyMode:(i==null?void 0:i.currencyMode)||"iso",styles:Object.keys(p).length>0?p:void 0}),s.current){s.current.innerHTML="";const h=new Jw({amount:100,currency:"USD",country:"US"});h.render(s.current),l.current=h}};return G.useEffect(()=>(u(),r(!0),()=>{Bi.destroy()}),[i]),M.jsx("div",{className:"max-w-3xl mx-auto",children:n?M.jsx("div",{ref:s}):M.jsx("div",{children:"Loading payment form..."})})};function Tm(i){var n,r,s="";if(typeof i=="string"||typeof i=="number")s+=i;else if(typeof i=="object")if(Array.isArray(i)){var l=i.length;for(n=0;n<l;n++)i[n]&&(r=Tm(i[n]))&&(s&&(s+=" "),s+=r)}else for(r in i)i[r]&&(s&&(s+=" "),s+=r);return s}function Vm(){for(var i,n,r=0,s="",l=arguments.length;r<l;r++)(i=arguments[r])&&(n=Tm(i))&&(s&&(s+=" "),s+=n);return s}const oc="-",Xw=i=>{const n=$w(i),{conflictingClassGroups:r,conflictingClassGroupModifiers:s}=i;return{getClassGroupId:d=>{const p=d.split(oc);return p[0]===""&&p.length!==1&&p.shift(),Fm(p,n)||_w(d)},getConflictingClassGroupIds:(d,p)=>{const h=r[d]||[];return p&&s[d]?[...h,...s[d]]:h}}},Fm=(i,n)=>{var d;if(i.length===0)return n.classGroupId;const r=i[0],s=n.nextPart.get(r),l=s?Fm(i.slice(1),s):void 0;if(l)return l;if(n.validators.length===0)return;const u=i.join(oc);return(d=n.validators.find(({validator:p})=>p(u)))==null?void 0:d.classGroupId},Nh=/^\[(.+)\]$/,_w=i=>{if(Nh.test(i)){const n=Nh.exec(i)[1],r=n==null?void 0:n.substring(0,n.indexOf(":"));if(r)return"arbitrary.."+r}},$w=i=>{const{theme:n,classGroups:r}=i,s={nextPart:new Map,validators:[]};for(const l in r)Wu(r[l],s,l,n);return s},Wu=(i,n,r,s)=>{i.forEach(l=>{if(typeof l=="string"){const u=l===""?n:Mh(n,l);u.classGroupId=r;return}if(typeof l=="function"){if(e2(l)){Wu(l(s),n,r,s);return}n.validators.push({validator:l,classGroupId:r});return}Object.entries(l).forEach(([u,d])=>{Wu(d,Mh(n,u),r,s)})})},Mh=(i,n)=>{let r=i;return n.split(oc).forEach(s=>{r.nextPart.has(s)||r.nextPart.set(s,{nextPart:new Map,validators:[]}),r=r.nextPart.get(s)}),r},e2=i=>i.isThemeGetter,t2=i=>{if(i<1)return{get:()=>{},set:()=>{}};let n=0,r=new Map,s=new Map;const l=(u,d)=>{r.set(u,d),n++,n>i&&(n=0,s=r,r=new Map)};return{get(u){let d=r.get(u);if(d!==void 0)return d;if((d=s.get(u))!==void 0)return l(u,d),d},set(u,d){r.has(u)?r.set(u,d):l(u,d)}}},Du="!",Ku=":",n2=Ku.length,r2=i=>{const{prefix:n,experimentalParseClassName:r}=i;let s=l=>{const u=[];let d=0,p=0,h=0,m;for(let C=0;C<l.length;C++){let x=l[C];if(d===0&&p===0){if(x===Ku){u.push(l.slice(h,C)),h=C+n2;continue}if(x==="/"){m=C;continue}}x==="["?d++:x==="]"?d--:x==="("?p++:x===")"&&p--}const y=u.length===0?l:l.substring(h),v=i2(y),A=v!==y,R=m&&m>h?m-h:void 0;return{modifiers:u,hasImportantModifier:A,baseClassName:v,maybePostfixModifierPosition:R}};if(n){const l=n+Ku,u=s;s=d=>d.startsWith(l)?u(d.substring(l.length)):{isExternal:!0,modifiers:[],hasImportantModifier:!1,baseClassName:d,maybePostfixModifierPosition:void 0}}if(r){const l=s;s=u=>r({className:u,parseClassName:l})}return s},i2=i=>i.endsWith(Du)?i.substring(0,i.length-1):i.startsWith(Du)?i.substring(1):i,o2=i=>{const n=Object.fromEntries(i.orderSensitiveModifiers.map(s=>[s,!0]));return s=>{if(s.length<=1)return s;const l=[];let u=[];return s.forEach(d=>{d[0]==="["||n[d]?(l.push(...u.sort(),d),u=[]):u.push(d)}),l.push(...u.sort()),l}},s2=i=>({cache:t2(i.cacheSize),parseClassName:r2(i),sortModifiers:o2(i),...Xw(i)}),l2=/\s+/,a2=(i,n)=>{const{parseClassName:r,getClassGroupId:s,getConflictingClassGroupIds:l,sortModifiers:u}=n,d=[],p=i.trim().split(l2);let h="";for(let m=p.length-1;m>=0;m-=1){const y=p[m],{isExternal:v,modifiers:A,hasImportantModifier:R,baseClassName:C,maybePostfixModifierPosition:x}=r(y);if(v){h=y+(h.length>0?" "+h:h);continue}let k=!!x,V=s(k?C.substring(0,x):C);if(!V){if(!k){h=y+(h.length>0?" "+h:h);continue}if(V=s(C),!V){h=y+(h.length>0?" "+h:h);continue}k=!1}const P=u(A).join(":"),U=R?P+Du:P,B=U+V;if(d.includes(B))continue;d.push(B);const ne=l(V,k);for(let T=0;T<ne.length;++T){const O=ne[T];d.push(U+O)}h=y+(h.length>0?" "+h:h)}return h};function u2(){let i=0,n,r,s="";for(;i<arguments.length;)(n=arguments[i++])&&(r=Om(n))&&(s&&(s+=" "),s+=r);return s}const Om=i=>{if(typeof i=="string")return i;let n,r="";for(let s=0;s<i.length;s++)i[s]&&(n=Om(i[s]))&&(r&&(r+=" "),r+=n);return r};function c2(i,...n){let r,s,l,u=d;function d(h){const m=n.reduce((y,v)=>v(y),i());return r=s2(m),s=r.cache.get,l=r.cache.set,u=p,p(h)}function p(h){const m=s(h);if(m)return m;const y=a2(h,r);return l(h,y),y}return function(){return u(u2.apply(null,arguments))}}const rt=i=>{const n=r=>r[i]||[];return n.isThemeGetter=!0,n},Pm=/^\[(?:(\w[\w-]*):)?(.+)\]$/i,Um=/^\((?:(\w[\w-]*):)?(.+)\)$/i,d2=/^\d+\/\d+$/,f2=/^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/,p2=/\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/,h2=/^(rgba?|hsla?|hwb|(ok)?(lab|lch))\(.+\)$/,m2=/^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/,g2=/^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/,qr=i=>d2.test(i),Re=i=>!!i&&!Number.isNaN(Number(i)),Un=i=>!!i&&Number.isInteger(Number(i)),Lh=i=>i.endsWith("%")&&Re(i.slice(0,-1)),zn=i=>f2.test(i),y2=()=>!0,v2=i=>p2.test(i)&&!h2.test(i),sc=()=>!1,A2=i=>m2.test(i),w2=i=>g2.test(i),C2=i=>!le(i)&&!ae(i),E2=i=>Yr(i,jm,sc),le=i=>Pm.test(i),rr=i=>Yr(i,Bm,v2),Iu=i=>Yr(i,V2,Re),x2=i=>Yr(i,zm,sc),S2=i=>Yr(i,qm,w2),b2=i=>Yr(i,sc,A2),ae=i=>Um.test(i),qi=i=>Gr(i,Bm),k2=i=>Gr(i,F2),R2=i=>Gr(i,zm),I2=i=>Gr(i,jm),N2=i=>Gr(i,qm),M2=i=>Gr(i,O2,!0),Yr=(i,n,r)=>{const s=Pm.exec(i);return s?s[1]?n(s[1]):r(s[2]):!1},Gr=(i,n,r=!1)=>{const s=Um.exec(i);return s?s[1]?n(s[1]):r:!1},zm=i=>i==="position",L2=new Set(["image","url"]),qm=i=>L2.has(i),T2=new Set(["length","size","percentage"]),jm=i=>T2.has(i),Bm=i=>i==="length",V2=i=>i==="number",F2=i=>i==="family-name",O2=i=>i==="shadow",P2=()=>{const i=rt("color"),n=rt("font"),r=rt("text"),s=rt("font-weight"),l=rt("tracking"),u=rt("leading"),d=rt("breakpoint"),p=rt("container"),h=rt("spacing"),m=rt("radius"),y=rt("shadow"),v=rt("inset-shadow"),A=rt("drop-shadow"),R=rt("blur"),C=rt("perspective"),x=rt("aspect"),k=rt("ease"),V=rt("animate"),P=()=>["auto","avoid","all","avoid-page","page","left","right","column"],U=()=>["bottom","center","left","left-bottom","left-top","right","right-bottom","right-top","top"],B=()=>["auto","hidden","clip","visible","scroll"],ne=()=>["auto","contain","none"],T=()=>[ae,le,h],O=()=>[qr,"full","auto",...T()],D=()=>[Un,"none","subgrid",ae,le],J=()=>["auto",{span:["full",Un,ae,le]},Un,ae,le],ie=()=>[Un,"auto",ae,le],X=()=>["auto","min","max","fr",ae,le],_=()=>["start","end","center","between","around","evenly","stretch","baseline"],$=()=>["start","end","center","stretch"],ee=()=>["auto",...T()],Ce=()=>[qr,"auto","full","dvw","dvh","lvw","lvh","svw","svh","min","max","fit",...T()],ce=()=>[i,ae,le],Ie=()=>[Lh,qi,rr],Q=()=>["","none","full",m,ae,le],H=()=>["",Re,qi,rr],Z=()=>["solid","dashed","dotted","double"],b=()=>["normal","multiply","screen","overlay","darken","lighten","color-dodge","color-burn","hard-light","soft-light","difference","exclusion","hue","saturation","color","luminosity"],z=()=>["","none",R,ae,le],he=()=>["center","top","top-right","right","bottom-right","bottom","bottom-left","left","top-left",ae,le],ye=()=>["none",Re,ae,le],Ae=()=>["none",Re,ae,le],Ee=()=>[Re,ae,le],we=()=>[qr,"full",...T()];return{cacheSize:500,theme:{animate:["spin","ping","pulse","bounce"],aspect:["video"],blur:[zn],breakpoint:[zn],color:[y2],container:[zn],"drop-shadow":[zn],ease:["in","out","in-out"],font:[C2],"font-weight":["thin","extralight","light","normal","medium","semibold","bold","extrabold","black"],"inset-shadow":[zn],leading:["none","tight","snug","normal","relaxed","loose"],perspective:["dramatic","near","normal","midrange","distant","none"],radius:[zn],shadow:[zn],spacing:["px",Re],text:[zn],tracking:["tighter","tight","normal","wide","wider","widest"]},classGroups:{aspect:[{aspect:["auto","square",qr,le,ae,x]}],container:["container"],columns:[{columns:[Re,le,ae,p]}],"break-after":[{"break-after":P()}],"break-before":[{"break-before":P()}],"break-inside":[{"break-inside":["auto","avoid","avoid-page","avoid-column"]}],"box-decoration":[{"box-decoration":["slice","clone"]}],box:[{box:["border","content"]}],display:["block","inline-block","inline","flex","inline-flex","table","inline-table","table-caption","table-cell","table-column","table-column-group","table-footer-group","table-header-group","table-row-group","table-row","flow-root","grid","inline-grid","contents","list-item","hidden"],sr:["sr-only","not-sr-only"],float:[{float:["right","left","none","start","end"]}],clear:[{clear:["left","right","both","none","start","end"]}],isolation:["isolate","isolation-auto"],"object-fit":[{object:["contain","cover","fill","none","scale-down"]}],"object-position":[{object:[...U(),le,ae]}],overflow:[{overflow:B()}],"overflow-x":[{"overflow-x":B()}],"overflow-y":[{"overflow-y":B()}],overscroll:[{overscroll:ne()}],"overscroll-x":[{"overscroll-x":ne()}],"overscroll-y":[{"overscroll-y":ne()}],position:["static","fixed","absolute","relative","sticky"],inset:[{inset:O()}],"inset-x":[{"inset-x":O()}],"inset-y":[{"inset-y":O()}],start:[{start:O()}],end:[{end:O()}],top:[{top:O()}],right:[{right:O()}],bottom:[{bottom:O()}],left:[{left:O()}],visibility:["visible","invisible","collapse"],z:[{z:[Un,"auto",ae,le]}],basis:[{basis:[qr,"full","auto",p,...T()]}],"flex-direction":[{flex:["row","row-reverse","col","col-reverse"]}],"flex-wrap":[{flex:["nowrap","wrap","wrap-reverse"]}],flex:[{flex:[Re,qr,"auto","initial","none",le]}],grow:[{grow:["",Re,ae,le]}],shrink:[{shrink:["",Re,ae,le]}],order:[{order:[Un,"first","last","none",ae,le]}],"grid-cols":[{"grid-cols":D()}],"col-start-end":[{col:J()}],"col-start":[{"col-start":ie()}],"col-end":[{"col-end":ie()}],"grid-rows":[{"grid-rows":D()}],"row-start-end":[{row:J()}],"row-start":[{"row-start":ie()}],"row-end":[{"row-end":ie()}],"grid-flow":[{"grid-flow":["row","col","dense","row-dense","col-dense"]}],"auto-cols":[{"auto-cols":X()}],"auto-rows":[{"auto-rows":X()}],gap:[{gap:T()}],"gap-x":[{"gap-x":T()}],"gap-y":[{"gap-y":T()}],"justify-content":[{justify:[..._(),"normal"]}],"justify-items":[{"justify-items":[...$(),"normal"]}],"justify-self":[{"justify-self":["auto",...$()]}],"align-content":[{content:["normal",..._()]}],"align-items":[{items:[...$(),"baseline"]}],"align-self":[{self:["auto",...$(),"baseline"]}],"place-content":[{"place-content":_()}],"place-items":[{"place-items":[...$(),"baseline"]}],"place-self":[{"place-self":["auto",...$()]}],p:[{p:T()}],px:[{px:T()}],py:[{py:T()}],ps:[{ps:T()}],pe:[{pe:T()}],pt:[{pt:T()}],pr:[{pr:T()}],pb:[{pb:T()}],pl:[{pl:T()}],m:[{m:ee()}],mx:[{mx:ee()}],my:[{my:ee()}],ms:[{ms:ee()}],me:[{me:ee()}],mt:[{mt:ee()}],mr:[{mr:ee()}],mb:[{mb:ee()}],ml:[{ml:ee()}],"space-x":[{"space-x":T()}],"space-x-reverse":["space-x-reverse"],"space-y":[{"space-y":T()}],"space-y-reverse":["space-y-reverse"],size:[{size:Ce()}],w:[{w:[p,"screen",...Ce()]}],"min-w":[{"min-w":[p,"screen","none",...Ce()]}],"max-w":[{"max-w":[p,"screen","none","prose",{screen:[d]},...Ce()]}],h:[{h:["screen",...Ce()]}],"min-h":[{"min-h":["screen","none",...Ce()]}],"max-h":[{"max-h":["screen",...Ce()]}],"font-size":[{text:["base",r,qi,rr]}],"font-smoothing":["antialiased","subpixel-antialiased"],"font-style":["italic","not-italic"],"font-weight":[{font:[s,ae,Iu]}],"font-stretch":[{"font-stretch":["ultra-condensed","extra-condensed","condensed","semi-condensed","normal","semi-expanded","expanded","extra-expanded","ultra-expanded",Lh,le]}],"font-family":[{font:[k2,le,n]}],"fvn-normal":["normal-nums"],"fvn-ordinal":["ordinal"],"fvn-slashed-zero":["slashed-zero"],"fvn-figure":["lining-nums","oldstyle-nums"],"fvn-spacing":["proportional-nums","tabular-nums"],"fvn-fraction":["diagonal-fractions","stacked-fractions"],tracking:[{tracking:[l,ae,le]}],"line-clamp":[{"line-clamp":[Re,"none",ae,Iu]}],leading:[{leading:[u,...T()]}],"list-image":[{"list-image":["none",ae,le]}],"list-style-position":[{list:["inside","outside"]}],"list-style-type":[{list:["disc","decimal","none",ae,le]}],"text-alignment":[{text:["left","center","right","justify","start","end"]}],"placeholder-color":[{placeholder:ce()}],"text-color":[{text:ce()}],"text-decoration":["underline","overline","line-through","no-underline"],"text-decoration-style":[{decoration:[...Z(),"wavy"]}],"text-decoration-thickness":[{decoration:[Re,"from-font","auto",ae,rr]}],"text-decoration-color":[{decoration:ce()}],"underline-offset":[{"underline-offset":[Re,"auto",ae,le]}],"text-transform":["uppercase","lowercase","capitalize","normal-case"],"text-overflow":["truncate","text-ellipsis","text-clip"],"text-wrap":[{text:["wrap","nowrap","balance","pretty"]}],indent:[{indent:T()}],"vertical-align":[{align:["baseline","top","middle","bottom","text-top","text-bottom","sub","super",ae,le]}],whitespace:[{whitespace:["normal","nowrap","pre","pre-line","pre-wrap","break-spaces"]}],break:[{break:["normal","words","all","keep"]}],hyphens:[{hyphens:["none","manual","auto"]}],content:[{content:["none",ae,le]}],"bg-attachment":[{bg:["fixed","local","scroll"]}],"bg-clip":[{"bg-clip":["border","padding","content","text"]}],"bg-origin":[{"bg-origin":["border","padding","content"]}],"bg-position":[{bg:[...U(),R2,x2]}],"bg-repeat":[{bg:["no-repeat",{repeat:["","x","y","space","round"]}]}],"bg-size":[{bg:["auto","cover","contain",I2,E2]}],"bg-image":[{bg:["none",{linear:[{to:["t","tr","r","br","b","bl","l","tl"]},Un,ae,le],radial:["",ae,le],conic:[Un,ae,le]},N2,S2]}],"bg-color":[{bg:ce()}],"gradient-from-pos":[{from:Ie()}],"gradient-via-pos":[{via:Ie()}],"gradient-to-pos":[{to:Ie()}],"gradient-from":[{from:ce()}],"gradient-via":[{via:ce()}],"gradient-to":[{to:ce()}],rounded:[{rounded:Q()}],"rounded-s":[{"rounded-s":Q()}],"rounded-e":[{"rounded-e":Q()}],"rounded-t":[{"rounded-t":Q()}],"rounded-r":[{"rounded-r":Q()}],"rounded-b":[{"rounded-b":Q()}],"rounded-l":[{"rounded-l":Q()}],"rounded-ss":[{"rounded-ss":Q()}],"rounded-se":[{"rounded-se":Q()}],"rounded-ee":[{"rounded-ee":Q()}],"rounded-es":[{"rounded-es":Q()}],"rounded-tl":[{"rounded-tl":Q()}],"rounded-tr":[{"rounded-tr":Q()}],"rounded-br":[{"rounded-br":Q()}],"rounded-bl":[{"rounded-bl":Q()}],"border-w":[{border:H()}],"border-w-x":[{"border-x":H()}],"border-w-y":[{"border-y":H()}],"border-w-s":[{"border-s":H()}],"border-w-e":[{"border-e":H()}],"border-w-t":[{"border-t":H()}],"border-w-r":[{"border-r":H()}],"border-w-b":[{"border-b":H()}],"border-w-l":[{"border-l":H()}],"divide-x":[{"divide-x":H()}],"divide-x-reverse":["divide-x-reverse"],"divide-y":[{"divide-y":H()}],"divide-y-reverse":["divide-y-reverse"],"border-style":[{border:[...Z(),"hidden","none"]}],"divide-style":[{divide:[...Z(),"hidden","none"]}],"border-color":[{border:ce()}],"border-color-x":[{"border-x":ce()}],"border-color-y":[{"border-y":ce()}],"border-color-s":[{"border-s":ce()}],"border-color-e":[{"border-e":ce()}],"border-color-t":[{"border-t":ce()}],"border-color-r":[{"border-r":ce()}],"border-color-b":[{"border-b":ce()}],"border-color-l":[{"border-l":ce()}],"divide-color":[{divide:ce()}],"outline-style":[{outline:[...Z(),"none","hidden"]}],"outline-offset":[{"outline-offset":[Re,ae,le]}],"outline-w":[{outline:["",Re,qi,rr]}],"outline-color":[{outline:[i]}],shadow:[{shadow:["","none",y,M2,b2]}],"shadow-color":[{shadow:ce()}],"inset-shadow":[{"inset-shadow":["none",ae,le,v]}],"inset-shadow-color":[{"inset-shadow":ce()}],"ring-w":[{ring:H()}],"ring-w-inset":["ring-inset"],"ring-color":[{ring:ce()}],"ring-offset-w":[{"ring-offset":[Re,rr]}],"ring-offset-color":[{"ring-offset":ce()}],"inset-ring-w":[{"inset-ring":H()}],"inset-ring-color":[{"inset-ring":ce()}],opacity:[{opacity:[Re,ae,le]}],"mix-blend":[{"mix-blend":[...b(),"plus-darker","plus-lighter"]}],"bg-blend":[{"bg-blend":b()}],filter:[{filter:["","none",ae,le]}],blur:[{blur:z()}],brightness:[{brightness:[Re,ae,le]}],contrast:[{contrast:[Re,ae,le]}],"drop-shadow":[{"drop-shadow":["","none",A,ae,le]}],grayscale:[{grayscale:["",Re,ae,le]}],"hue-rotate":[{"hue-rotate":[Re,ae,le]}],invert:[{invert:["",Re,ae,le]}],saturate:[{saturate:[Re,ae,le]}],sepia:[{sepia:["",Re,ae,le]}],"backdrop-filter":[{"backdrop-filter":["","none",ae,le]}],"backdrop-blur":[{"backdrop-blur":z()}],"backdrop-brightness":[{"backdrop-brightness":[Re,ae,le]}],"backdrop-contrast":[{"backdrop-contrast":[Re,ae,le]}],"backdrop-grayscale":[{"backdrop-grayscale":["",Re,ae,le]}],"backdrop-hue-rotate":[{"backdrop-hue-rotate":[Re,ae,le]}],"backdrop-invert":[{"backdrop-invert":["",Re,ae,le]}],"backdrop-opacity":[{"backdrop-opacity":[Re,ae,le]}],"backdrop-saturate":[{"backdrop-saturate":[Re,ae,le]}],"backdrop-sepia":[{"backdrop-sepia":["",Re,ae,le]}],"border-collapse":[{border:["collapse","separate"]}],"border-spacing":[{"border-spacing":T()}],"border-spacing-x":[{"border-spacing-x":T()}],"border-spacing-y":[{"border-spacing-y":T()}],"table-layout":[{table:["auto","fixed"]}],caption:[{caption:["top","bottom"]}],transition:[{transition:["","all","colors","opacity","shadow","transform","none",ae,le]}],"transition-behavior":[{transition:["normal","discrete"]}],duration:[{duration:[Re,"initial",ae,le]}],ease:[{ease:["linear","initial",k,ae,le]}],delay:[{delay:[Re,ae,le]}],animate:[{animate:["none",V,ae,le]}],backface:[{backface:["hidden","visible"]}],perspective:[{perspective:[C,ae,le]}],"perspective-origin":[{"perspective-origin":he()}],rotate:[{rotate:ye()}],"rotate-x":[{"rotate-x":ye()}],"rotate-y":[{"rotate-y":ye()}],"rotate-z":[{"rotate-z":ye()}],scale:[{scale:Ae()}],"scale-x":[{"scale-x":Ae()}],"scale-y":[{"scale-y":Ae()}],"scale-z":[{"scale-z":Ae()}],"scale-3d":["scale-3d"],skew:[{skew:Ee()}],"skew-x":[{"skew-x":Ee()}],"skew-y":[{"skew-y":Ee()}],transform:[{transform:[ae,le,"","none","gpu","cpu"]}],"transform-origin":[{origin:he()}],"transform-style":[{transform:["3d","flat"]}],translate:[{translate:we()}],"translate-x":[{"translate-x":we()}],"translate-y":[{"translate-y":we()}],"translate-z":[{"translate-z":we()}],"translate-none":["translate-none"],accent:[{accent:ce()}],appearance:[{appearance:["none","auto"]}],"caret-color":[{caret:ce()}],"color-scheme":[{scheme:["normal","dark","light","light-dark","only-dark","only-light"]}],cursor:[{cursor:["auto","default","pointer","wait","text","move","help","not-allowed","none","context-menu","progress","cell","crosshair","vertical-text","alias","copy","no-drop","grab","grabbing","all-scroll","col-resize","row-resize","n-resize","e-resize","s-resize","w-resize","ne-resize","nw-resize","se-resize","sw-resize","ew-resize","ns-resize","nesw-resize","nwse-resize","zoom-in","zoom-out",ae,le]}],"field-sizing":[{"field-sizing":["fixed","content"]}],"pointer-events":[{"pointer-events":["auto","none"]}],resize:[{resize:["none","","y","x"]}],"scroll-behavior":[{scroll:["auto","smooth"]}],"scroll-m":[{"scroll-m":T()}],"scroll-mx":[{"scroll-mx":T()}],"scroll-my":[{"scroll-my":T()}],"scroll-ms":[{"scroll-ms":T()}],"scroll-me":[{"scroll-me":T()}],"scroll-mt":[{"scroll-mt":T()}],"scroll-mr":[{"scroll-mr":T()}],"scroll-mb":[{"scroll-mb":T()}],"scroll-ml":[{"scroll-ml":T()}],"scroll-p":[{"scroll-p":T()}],"scroll-px":[{"scroll-px":T()}],"scroll-py":[{"scroll-py":T()}],"scroll-ps":[{"scroll-ps":T()}],"scroll-pe":[{"scroll-pe":T()}],"scroll-pt":[{"scroll-pt":T()}],"scroll-pr":[{"scroll-pr":T()}],"scroll-pb":[{"scroll-pb":T()}],"scroll-pl":[{"scroll-pl":T()}],"snap-align":[{snap:["start","end","center","align-none"]}],"snap-stop":[{snap:["normal","always"]}],"snap-type":[{snap:["none","x","y","both"]}],"snap-strictness":[{snap:["mandatory","proximity"]}],touch:[{touch:["auto","none","manipulation"]}],"touch-x":[{"touch-pan":["x","left","right"]}],"touch-y":[{"touch-pan":["y","up","down"]}],"touch-pz":["touch-pinch-zoom"],select:[{select:["none","text","all","auto"]}],"will-change":[{"will-change":["auto","scroll","contents","transform",ae,le]}],fill:[{fill:["none",...ce()]}],"stroke-w":[{stroke:[Re,qi,rr,Iu]}],stroke:[{stroke:["none",...ce()]}],"forced-color-adjust":[{"forced-color-adjust":["auto","none"]}]},conflictingClassGroups:{overflow:["overflow-x","overflow-y"],overscroll:["overscroll-x","overscroll-y"],inset:["inset-x","inset-y","start","end","top","right","bottom","left"],"inset-x":["right","left"],"inset-y":["top","bottom"],flex:["basis","grow","shrink"],gap:["gap-x","gap-y"],p:["px","py","ps","pe","pt","pr","pb","pl"],px:["pr","pl"],py:["pt","pb"],m:["mx","my","ms","me","mt","mr","mb","ml"],mx:["mr","ml"],my:["mt","mb"],size:["w","h"],"font-size":["leading"],"fvn-normal":["fvn-ordinal","fvn-slashed-zero","fvn-figure","fvn-spacing","fvn-fraction"],"fvn-ordinal":["fvn-normal"],"fvn-slashed-zero":["fvn-normal"],"fvn-figure":["fvn-normal"],"fvn-spacing":["fvn-normal"],"fvn-fraction":["fvn-normal"],"line-clamp":["display","overflow"],rounded:["rounded-s","rounded-e","rounded-t","rounded-r","rounded-b","rounded-l","rounded-ss","rounded-se","rounded-ee","rounded-es","rounded-tl","rounded-tr","rounded-br","rounded-bl"],"rounded-s":["rounded-ss","rounded-es"],"rounded-e":["rounded-se","rounded-ee"],"rounded-t":["rounded-tl","rounded-tr"],"rounded-r":["rounded-tr","rounded-br"],"rounded-b":["rounded-br","rounded-bl"],"rounded-l":["rounded-tl","rounded-bl"],"border-spacing":["border-spacing-x","border-spacing-y"],"border-w":["border-w-s","border-w-e","border-w-t","border-w-r","border-w-b","border-w-l"],"border-w-x":["border-w-r","border-w-l"],"border-w-y":["border-w-t","border-w-b"],"border-color":["border-color-s","border-color-e","border-color-t","border-color-r","border-color-b","border-color-l"],"border-color-x":["border-color-r","border-color-l"],"border-color-y":["border-color-t","border-color-b"],translate:["translate-x","translate-y","translate-none"],"translate-none":["translate","translate-x","translate-y","translate-z"],"scroll-m":["scroll-mx","scroll-my","scroll-ms","scroll-me","scroll-mt","scroll-mr","scroll-mb","scroll-ml"],"scroll-mx":["scroll-mr","scroll-ml"],"scroll-my":["scroll-mt","scroll-mb"],"scroll-p":["scroll-px","scroll-py","scroll-ps","scroll-pe","scroll-pt","scroll-pr","scroll-pb","scroll-pl"],"scroll-px":["scroll-pr","scroll-pl"],"scroll-py":["scroll-pt","scroll-pb"],touch:["touch-x","touch-y","touch-pz"],"touch-x":["touch"],"touch-y":["touch"],"touch-pz":["touch"]},conflictingClassGroupModifiers:{"font-size":["leading"]},orderSensitiveModifiers:["before","after","placeholder","file","marker","selection","first-line","first-letter","backdrop","*","**"]}},U2=c2(P2);function jt(...i){return U2(Vm(i))}const Wm=G.forwardRef(({className:i,...n},r)=>M.jsx("div",{ref:r,className:jt("rounded-xl border border-zinc-200 bg-white text-zinc-950 shadow dark:border-zinc-800 dark:bg-zinc-950 dark:text-zinc-50",i),...n}));Wm.displayName="Card";const Dm=G.forwardRef(({className:i,...n},r)=>M.jsx("div",{ref:r,className:jt("flex flex-col space-y-1.5 p-6",i),...n}));Dm.displayName="CardHeader";const Km=G.forwardRef(({className:i,...n},r)=>M.jsx("div",{ref:r,className:jt("font-semibold leading-none tracking-tight",i),...n}));Km.displayName="CardTitle";const z2=G.forwardRef(({className:i,...n},r)=>M.jsx("div",{ref:r,className:jt("text-sm text-zinc-500 dark:text-zinc-400",i),...n}));z2.displayName="CardDescription";const Qm=G.forwardRef(({className:i,...n},r)=>M.jsx("div",{ref:r,className:jt("p-6 pt-0",i),...n}));Qm.displayName="CardContent";const q2=G.forwardRef(({className:i,...n},r)=>M.jsx("div",{ref:r,className:jt("flex items-center p-6 pt-0",i),...n}));q2.displayName="CardFooter";Ph();function Th(i,n){if(typeof i=="function")return i(n);i!=null&&(i.current=n)}function Ym(...i){return n=>{let r=!1;const s=i.map(l=>{const u=Th(l,n);return!r&&typeof u=="function"&&(r=!0),u});if(r)return()=>{for(let l=0;l<s.length;l++){const u=s[l];typeof u=="function"?u():Th(i[l],null)}}}}function qs(...i){return G.useCallback(Ym(...i),i)}var Ji=G.forwardRef((i,n)=>{const{children:r,...s}=i,l=G.Children.toArray(r),u=l.find(B2);if(u){const d=u.props.children,p=l.map(h=>h===u?G.Children.count(d)>1?G.Children.only(null):G.isValidElement(d)?d.props.children:null:h);return M.jsx(Qu,{...s,ref:n,children:G.isValidElement(d)?G.cloneElement(d,void 0,p):null})}return M.jsx(Qu,{...s,ref:n,children:r})});Ji.displayName="Slot";var Qu=G.forwardRef((i,n)=>{const{children:r,...s}=i;if(G.isValidElement(r)){const l=D2(r),u=W2(s,r.props);return r.type!==G.Fragment&&(u.ref=n?Ym(n,l):l),G.cloneElement(r,u)}return G.Children.count(r)>1?G.Children.only(null):null});Qu.displayName="SlotClone";var j2=({children:i})=>M.jsx(M.Fragment,{children:i});function B2(i){return G.isValidElement(i)&&i.type===j2}function W2(i,n){const r={...n};for(const s in n){const l=i[s],u=n[s];/^on[A-Z]/.test(s)?l&&u?r[s]=(...p)=>{u(...p),l(...p)}:l&&(r[s]=l):s==="style"?r[s]={...l,...u}:s==="className"&&(r[s]=[l,u].filter(Boolean).join(" "))}return{...i,...r}}function D2(i){var s,l;let n=(s=Object.getOwnPropertyDescriptor(i.props,"ref"))==null?void 0:s.get,r=n&&"isReactWarning"in n&&n.isReactWarning;return r?i.ref:(n=(l=Object.getOwnPropertyDescriptor(i,"ref"))==null?void 0:l.get,r=n&&"isReactWarning"in n&&n.isReactWarning,r?i.props.ref:i.props.ref||i.ref)}var K2=["a","button","div","form","h2","h3","img","input","label","li","nav","ol","p","span","svg","ul"],cr=K2.reduce((i,n)=>{const r=G.forwardRef((s,l)=>{const{asChild:u,...d}=s,p=u?Ji:n;return typeof window<"u"&&(window[Symbol.for("radix-ui")]=!0),M.jsx(p,{...d,ref:l})});return r.displayName=`Primitive.${n}`,{...i,[n]:r}},{}),Q2="Label",Gm=G.forwardRef((i,n)=>M.jsx(cr.label,{...i,ref:n,onMouseDown:r=>{var l;r.target.closest("button, input, select, textarea")||((l=i.onMouseDown)==null||l.call(i,r),!r.defaultPrevented&&r.detail>1&&r.preventDefault())}}));Gm.displayName=Q2;var Zm=Gm;const Vh=i=>typeof i=="boolean"?`${i}`:i===0?"0":i,Fh=Vm,Jm=(i,n)=>r=>{var s;if((n==null?void 0:n.variants)==null)return Fh(i,r==null?void 0:r.class,r==null?void 0:r.className);const{variants:l,defaultVariants:u}=n,d=Object.keys(l).map(m=>{const y=r==null?void 0:r[m],v=u==null?void 0:u[m];if(y===null)return null;const A=Vh(y)||Vh(v);return l[m][A]}),p=r&&Object.entries(r).reduce((m,y)=>{let[v,A]=y;return A===void 0||(m[v]=A),m},{}),h=n==null||(s=n.compoundVariants)===null||s===void 0?void 0:s.reduce((m,y)=>{let{class:v,className:A,...R}=y;return Object.entries(R).every(C=>{let[x,k]=C;return Array.isArray(k)?k.includes({...u,...p}[x]):{...u,...p}[x]===k})?[...m,v,A]:m},[]);return Fh(i,d,h,r==null?void 0:r.class,r==null?void 0:r.className)},Y2=Jm("text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70"),Zt=G.forwardRef(({className:i,...n},r)=>M.jsx(Zm,{ref:r,className:jt(Y2(),i),...n}));Zt.displayName=Zm.displayName;const Mt=G.forwardRef(({className:i,type:n,...r},s)=>M.jsx("input",{type:n,className:jt("flex h-9 w-full rounded-md border border-zinc-200 bg-transparent px-3 py-1 text-base shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-zinc-950 placeholder:text-zinc-500 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-zinc-950 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm dark:border-zinc-800 dark:file:text-zinc-50 dark:placeholder:text-zinc-400 dark:focus-visible:ring-zinc-300",i),ref:s,...r}));Mt.displayName="Input";function gn(i,n,{checkForDefaultPrevented:r=!0}={}){return function(l){if(i==null||i(l),r===!1||!l.defaultPrevented)return n==null?void 0:n(l)}}function lc(i,n=[]){let r=[];function s(u,d){const p=G.createContext(d),h=r.length;r=[...r,d];const m=v=>{var V;const{scope:A,children:R,...C}=v,x=((V=A==null?void 0:A[i])==null?void 0:V[h])||p,k=G.useMemo(()=>C,Object.values(C));return M.jsx(x.Provider,{value:k,children:R})};m.displayName=u+"Provider";function y(v,A){var x;const R=((x=A==null?void 0:A[i])==null?void 0:x[h])||p,C=G.useContext(R);if(C)return C;if(d!==void 0)return d;throw new Error(`\`${v}\` must be used within \`${u}\``)}return[m,y]}const l=()=>{const u=r.map(d=>G.createContext(d));return function(p){const h=(p==null?void 0:p[i])||u;return G.useMemo(()=>({[`__scope${i}`]:{...p,[i]:h}}),[p,h])}};return l.scopeName=i,[s,G2(l,...n)]}function G2(...i){const n=i[0];if(i.length===1)return n;const r=()=>{const s=i.map(l=>({useScope:l(),scopeName:l.scopeName}));return function(u){const d=s.reduce((p,{useScope:h,scopeName:m})=>{const v=h(u)[`__scope${m}`];return{...p,...v}},{});return G.useMemo(()=>({[`__scope${n.scopeName}`]:d}),[d])}};return r.scopeName=n.scopeName,r}function Z2(i){const n=i+"CollectionProvider",[r,s]=lc(n),[l,u]=r(n,{collectionRef:{current:null},itemMap:new Map}),d=R=>{const{scope:C,children:x}=R,k=qn.useRef(null),V=qn.useRef(new Map).current;return M.jsx(l,{scope:C,itemMap:V,collectionRef:k,children:x})};d.displayName=n;const p=i+"CollectionSlot",h=qn.forwardRef((R,C)=>{const{scope:x,children:k}=R,V=u(p,x),P=qs(C,V.collectionRef);return M.jsx(Ji,{ref:P,children:k})});h.displayName=p;const m=i+"CollectionItemSlot",y="data-radix-collection-item",v=qn.forwardRef((R,C)=>{const{scope:x,children:k,...V}=R,P=qn.useRef(null),U=qs(C,P),B=u(m,x);return qn.useEffect(()=>(B.itemMap.set(P,{ref:P,...V}),()=>void B.itemMap.delete(P))),M.jsx(Ji,{[y]:"",ref:U,children:k})});v.displayName=m;function A(R){const C=u(i+"CollectionConsumer",R);return qn.useCallback(()=>{const k=C.collectionRef.current;if(!k)return[];const V=Array.from(k.querySelectorAll(`[${y}]`));return Array.from(C.itemMap.values()).sort((B,ne)=>V.indexOf(B.ref.current)-V.indexOf(ne.ref.current))},[C.collectionRef,C.itemMap])}return[{Provider:d,Slot:h,ItemSlot:v},A,s]}var Yu=globalThis!=null&&globalThis.document?G.useLayoutEffect:()=>{},J2=C0.useId||(()=>{}),H2=0;function Hm(i){const[n,r]=G.useState(J2());return Yu(()=>{r(s=>s??String(H2++))},[i]),n?`radix-${n}`:""}function ac(i){const n=G.useRef(i);return G.useEffect(()=>{n.current=i}),G.useMemo(()=>(...r)=>{var s;return(s=n.current)==null?void 0:s.call(n,...r)},[])}function Xm({prop:i,defaultProp:n,onChange:r=()=>{}}){const[s,l]=X2({defaultProp:n,onChange:r}),u=i!==void 0,d=u?i:s,p=ac(r),h=G.useCallback(m=>{if(u){const v=typeof m=="function"?m(i):m;v!==i&&p(v)}else l(m)},[u,i,l,p]);return[d,h]}function X2({defaultProp:i,onChange:n}){const r=G.useState(i),[s]=r,l=G.useRef(s),u=ac(n);return G.useEffect(()=>{l.current!==s&&(u(s),l.current=s)},[s,l,u]),r}var _2=G.createContext(void 0);function _m(i){const n=G.useContext(_2);return i||n||"ltr"}var Nu="rovingFocusGroup.onEntryFocus",$2={bubbles:!1,cancelable:!0},Xs="RovingFocusGroup",[Gu,$m,eC]=Z2(Xs),[tC,eg]=lc(Xs,[eC]),[nC,rC]=tC(Xs),tg=G.forwardRef((i,n)=>M.jsx(Gu.Provider,{scope:i.__scopeRovingFocusGroup,children:M.jsx(Gu.Slot,{scope:i.__scopeRovingFocusGroup,children:M.jsx(iC,{...i,ref:n})})}));tg.displayName=Xs;var iC=G.forwardRef((i,n)=>{const{__scopeRovingFocusGroup:r,orientation:s,loop:l=!1,dir:u,currentTabStopId:d,defaultCurrentTabStopId:p,onCurrentTabStopIdChange:h,onEntryFocus:m,preventScrollOnEntryFocus:y=!1,...v}=i,A=G.useRef(null),R=qs(n,A),C=_m(u),[x=null,k]=Xm({prop:d,defaultProp:p,onChange:h}),[V,P]=G.useState(!1),U=ac(m),B=$m(r),ne=G.useRef(!1),[T,O]=G.useState(0);return G.useEffect(()=>{const D=A.current;if(D)return D.addEventListener(Nu,U),()=>D.removeEventListener(Nu,U)},[U]),M.jsx(nC,{scope:r,orientation:s,dir:C,loop:l,currentTabStopId:x,onItemFocus:G.useCallback(D=>k(D),[k]),onItemShiftTab:G.useCallback(()=>P(!0),[]),onFocusableItemAdd:G.useCallback(()=>O(D=>D+1),[]),onFocusableItemRemove:G.useCallback(()=>O(D=>D-1),[]),children:M.jsx(cr.div,{tabIndex:V||T===0?-1:0,"data-orientation":s,...v,ref:R,style:{outline:"none",...i.style},onMouseDown:gn(i.onMouseDown,()=>{ne.current=!0}),onFocus:gn(i.onFocus,D=>{const J=!ne.current;if(D.target===D.currentTarget&&J&&!V){const ie=new CustomEvent(Nu,$2);if(D.currentTarget.dispatchEvent(ie),!ie.defaultPrevented){const X=B().filter(ce=>ce.focusable),_=X.find(ce=>ce.active),$=X.find(ce=>ce.id===x),Ce=[_,$,...X].filter(Boolean).map(ce=>ce.ref.current);ig(Ce,y)}}ne.current=!1}),onBlur:gn(i.onBlur,()=>P(!1))})})}),ng="RovingFocusGroupItem",rg=G.forwardRef((i,n)=>{const{__scopeRovingFocusGroup:r,focusable:s=!0,active:l=!1,tabStopId:u,...d}=i,p=Hm(),h=u||p,m=rC(ng,r),y=m.currentTabStopId===h,v=$m(r),{onFocusableItemAdd:A,onFocusableItemRemove:R}=m;return G.useEffect(()=>{if(s)return A(),()=>R()},[s,A,R]),M.jsx(Gu.ItemSlot,{scope:r,id:h,focusable:s,active:l,children:M.jsx(cr.span,{tabIndex:y?0:-1,"data-orientation":m.orientation,...d,ref:n,onMouseDown:gn(i.onMouseDown,C=>{s?m.onItemFocus(h):C.preventDefault()}),onFocus:gn(i.onFocus,()=>m.onItemFocus(h)),onKeyDown:gn(i.onKeyDown,C=>{if(C.key==="Tab"&&C.shiftKey){m.onItemShiftTab();return}if(C.target!==C.currentTarget)return;const x=lC(C,m.orientation,m.dir);if(x!==void 0){if(C.metaKey||C.ctrlKey||C.altKey||C.shiftKey)return;C.preventDefault();let V=v().filter(P=>P.focusable).map(P=>P.ref.current);if(x==="last")V.reverse();else if(x==="prev"||x==="next"){x==="prev"&&V.reverse();const P=V.indexOf(C.currentTarget);V=m.loop?aC(V,P+1):V.slice(P+1)}setTimeout(()=>ig(V))}})})})});rg.displayName=ng;var oC={ArrowLeft:"prev",ArrowUp:"prev",ArrowRight:"next",ArrowDown:"next",PageUp:"first",Home:"first",PageDown:"last",End:"last"};function sC(i,n){return n!=="rtl"?i:i==="ArrowLeft"?"ArrowRight":i==="ArrowRight"?"ArrowLeft":i}function lC(i,n,r){const s=sC(i.key,r);if(!(n==="vertical"&&["ArrowLeft","ArrowRight"].includes(s))&&!(n==="horizontal"&&["ArrowUp","ArrowDown"].includes(s)))return oC[s]}function ig(i,n=!1){const r=document.activeElement;for(const s of i)if(s===r||(s.focus({preventScroll:n}),document.activeElement!==r))return}function aC(i,n){return i.map((r,s)=>i[(n+s)%i.length])}var uC=tg,cC=rg;function dC(i,n){return G.useReducer((r,s)=>n[r][s]??r,i)}var og=i=>{const{present:n,children:r}=i,s=fC(n),l=typeof r=="function"?r({present:s.isPresent}):G.Children.only(r),u=qs(s.ref,pC(l));return typeof r=="function"||s.isPresent?G.cloneElement(l,{ref:u}):null};og.displayName="Presence";function fC(i){const[n,r]=G.useState(),s=G.useRef({}),l=G.useRef(i),u=G.useRef("none"),d=i?"mounted":"unmounted",[p,h]=dC(d,{mounted:{UNMOUNT:"unmounted",ANIMATION_OUT:"unmountSuspended"},unmountSuspended:{MOUNT:"mounted",ANIMATION_END:"unmounted"},unmounted:{MOUNT:"mounted"}});return G.useEffect(()=>{const m=ys(s.current);u.current=p==="mounted"?m:"none"},[p]),Yu(()=>{const m=s.current,y=l.current;if(y!==i){const A=u.current,R=ys(m);i?h("MOUNT"):R==="none"||(m==null?void 0:m.display)==="none"?h("UNMOUNT"):h(y&&A!==R?"ANIMATION_OUT":"UNMOUNT"),l.current=i}},[i,h]),Yu(()=>{if(n){let m;const y=n.ownerDocument.defaultView??window,v=R=>{const x=ys(s.current).includes(R.animationName);if(R.target===n&&x&&(h("ANIMATION_END"),!l.current)){const k=n.style.animationFillMode;n.style.animationFillMode="forwards",m=y.setTimeout(()=>{n.style.animationFillMode==="forwards"&&(n.style.animationFillMode=k)})}},A=R=>{R.target===n&&(u.current=ys(s.current))};return n.addEventListener("animationstart",A),n.addEventListener("animationcancel",v),n.addEventListener("animationend",v),()=>{y.clearTimeout(m),n.removeEventListener("animationstart",A),n.removeEventListener("animationcancel",v),n.removeEventListener("animationend",v)}}else h("ANIMATION_END")},[n,h]),{isPresent:["mounted","unmountSuspended"].includes(p),ref:G.useCallback(m=>{m&&(s.current=getComputedStyle(m)),r(m)},[])}}function ys(i){return(i==null?void 0:i.animationName)||"none"}function pC(i){var s,l;let n=(s=Object.getOwnPropertyDescriptor(i.props,"ref"))==null?void 0:s.get,r=n&&"isReactWarning"in n&&n.isReactWarning;return r?i.ref:(n=(l=Object.getOwnPropertyDescriptor(i,"ref"))==null?void 0:l.get,r=n&&"isReactWarning"in n&&n.isReactWarning,r?i.props.ref:i.props.ref||i.ref)}var uc="Tabs",[hC,YC]=lc(uc,[eg]),sg=eg(),[mC,cc]=hC(uc),lg=G.forwardRef((i,n)=>{const{__scopeTabs:r,value:s,onValueChange:l,defaultValue:u,orientation:d="horizontal",dir:p,activationMode:h="automatic",...m}=i,y=_m(p),[v,A]=Xm({prop:s,onChange:l,defaultProp:u});return M.jsx(mC,{scope:r,baseId:Hm(),value:v,onValueChange:A,orientation:d,dir:y,activationMode:h,children:M.jsx(cr.div,{dir:y,"data-orientation":d,...m,ref:n})})});lg.displayName=uc;var ag="TabsList",ug=G.forwardRef((i,n)=>{const{__scopeTabs:r,loop:s=!0,...l}=i,u=cc(ag,r),d=sg(r);return M.jsx(uC,{asChild:!0,...d,orientation:u.orientation,dir:u.dir,loop:s,children:M.jsx(cr.div,{role:"tablist","aria-orientation":u.orientation,...l,ref:n})})});ug.displayName=ag;var cg="TabsTrigger",dg=G.forwardRef((i,n)=>{const{__scopeTabs:r,value:s,disabled:l=!1,...u}=i,d=cc(cg,r),p=sg(r),h=hg(d.baseId,s),m=mg(d.baseId,s),y=s===d.value;return M.jsx(cC,{asChild:!0,...p,focusable:!l,active:y,children:M.jsx(cr.button,{type:"button",role:"tab","aria-selected":y,"aria-controls":m,"data-state":y?"active":"inactive","data-disabled":l?"":void 0,disabled:l,id:h,...u,ref:n,onMouseDown:gn(i.onMouseDown,v=>{!l&&v.button===0&&v.ctrlKey===!1?d.onValueChange(s):v.preventDefault()}),onKeyDown:gn(i.onKeyDown,v=>{[" ","Enter"].includes(v.key)&&d.onValueChange(s)}),onFocus:gn(i.onFocus,()=>{const v=d.activationMode!=="manual";!y&&!l&&v&&d.onValueChange(s)})})})});dg.displayName=cg;var fg="TabsContent",pg=G.forwardRef((i,n)=>{const{__scopeTabs:r,value:s,forceMount:l,children:u,...d}=i,p=cc(fg,r),h=hg(p.baseId,s),m=mg(p.baseId,s),y=s===p.value,v=G.useRef(y);return G.useEffect(()=>{const A=requestAnimationFrame(()=>v.current=!1);return()=>cancelAnimationFrame(A)},[]),M.jsx(og,{present:l||y,children:({present:A})=>M.jsx(cr.div,{"data-state":y?"active":"inactive","data-orientation":p.orientation,role:"tabpanel","aria-labelledby":h,hidden:!A,id:m,tabIndex:0,...d,ref:n,style:{...i.style,animationDuration:v.current?"0s":void 0},children:A&&u})})});pg.displayName=fg;function hg(i,n){return`${i}-trigger-${n}`}function mg(i,n){return`${i}-content-${n}`}var gC=lg,gg=ug,yg=dg,vg=pg;const Ag=gC,dc=G.forwardRef(({className:i,...n},r)=>M.jsx(gg,{ref:r,className:jt("inline-flex h-9 items-center justify-center rounded-lg bg-zinc-100 p-1 text-zinc-500 dark:bg-zinc-800 dark:text-zinc-400",i),...n}));dc.displayName=gg.displayName;const Hi=G.forwardRef(({className:i,...n},r)=>M.jsx(yg,{ref:r,className:jt("inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-white transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-zinc-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-white data-[state=active]:text-zinc-950 data-[state=active]:shadow dark:ring-offset-zinc-950 dark:focus-visible:ring-zinc-300 dark:data-[state=active]:bg-zinc-950 dark:data-[state=active]:text-zinc-50",i),...n}));Hi.displayName=yg.displayName;const Xi=G.forwardRef(({className:i,...n},r)=>M.jsx(vg,{ref:r,className:jt("mt-2 ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-zinc-950 focus-visible:ring-offset-2 dark:ring-offset-zinc-950 dark:focus-visible:ring-zinc-300",i),...n}));Xi.displayName=vg.displayName;const yC=Jm("inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-zinc-950 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 dark:focus-visible:ring-zinc-300",{variants:{variant:{default:"bg-zinc-900 text-zinc-50 shadow hover:bg-zinc-900/90 dark:bg-zinc-50 dark:text-zinc-900 dark:hover:bg-zinc-50/90",destructive:"bg-red-500 text-zinc-50 shadow-sm hover:bg-red-500/90 dark:bg-red-900 dark:text-zinc-50 dark:hover:bg-red-900/90",outline:"border border-zinc-200 bg-white shadow-sm hover:bg-zinc-100 hover:text-zinc-900 dark:border-zinc-800 dark:bg-zinc-950 dark:hover:bg-zinc-800 dark:hover:text-zinc-50",secondary:"bg-zinc-100 text-zinc-900 shadow-sm hover:bg-zinc-100/80 dark:bg-zinc-800 dark:text-zinc-50 dark:hover:bg-zinc-800/80",ghost:"hover:bg-zinc-100 hover:text-zinc-900 dark:hover:bg-zinc-800 dark:hover:text-zinc-50",link:"text-zinc-900 underline-offset-4 hover:underline dark:text-zinc-50"},size:{default:"h-9 px-4 py-2",sm:"h-8 rounded-md px-3 text-xs",lg:"h-10 rounded-md px-8",icon:"h-9 w-9"}},defaultVariants:{variant:"default",size:"default"}}),wg=G.forwardRef(({className:i,variant:n,size:r,asChild:s=!1,...l},u)=>{const d=s?Ji:"button";return M.jsx(d,{className:jt(yC({variant:n,size:r,className:i})),ref:u,...l})});wg.displayName="Button";/**
 * @license lucide-react v0.364.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */var vC={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};/**
 * @license lucide-react v0.364.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const AC=i=>i.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase();/**
 * @license lucide-react v0.364.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const _s=(i,n)=>{const r=G.forwardRef(({color:s="currentColor",size:l=24,strokeWidth:u=2,absoluteStrokeWidth:d,className:p="",children:h,...m},y)=>G.createElement("svg",{ref:y,...vC,width:l,height:l,stroke:s,strokeWidth:d?Number(u)*24/Number(l):u,className:["lucide",`lucide-${AC(i)}`,p].join(" "),...m},[...n.map(([v,A])=>G.createElement(v,A)),...Array.isArray(h)?h:[h]]));return r.displayName=`${i}`,r};/**
 * @license lucide-react v0.364.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const wC=_s("Code",[["polyline",{points:"16 18 22 12 16 6",key:"z7tu5w"}],["polyline",{points:"8 6 2 12 8 18",key:"1eg1df"}]]);/**
 * @license lucide-react v0.364.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const CC=_s("CreditCard",[["rect",{width:"20",height:"14",x:"2",y:"5",rx:"2",key:"ynyp8z"}],["line",{x1:"2",x2:"22",y1:"10",y2:"10",key:"1b3vmo"}]]);/**
 * @license lucide-react v0.364.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const EC=_s("Globe",[["circle",{cx:"12",cy:"12",r:"10",key:"1mglay"}],["path",{d:"M12 2a14.5 14.5 0 0 0 0 20 14.5 14.5 0 0 0 0-20",key:"13o1zl"}],["path",{d:"M2 12h20",key:"9i4pu4"}]]);/**
 * @license lucide-react v0.364.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const xC=_s("PanelsTopLeft",[["rect",{width:"18",height:"18",x:"3",y:"3",rx:"2",key:"afitv7"}],["path",{d:"M3 9h18",key:"1pudct"}],["path",{d:"M9 21V9",key:"1oto5p"}]]),SC=({onSettingsChange:i})=>{const[n,r]=G.useState({theme:"light",currencyMode:"iso",locale:"en",styles:{primaryColor:"#007bff",secondaryColor:"#6c757d",backgroundColor:"#ffffff",textPrimaryColor:"#212529",textSecondaryColor:"#6c757d",fontFamily:"Arial, sans-serif",width:700}}),s=(d,p)=>{const h={...n,[d]:p};r(h)},l=(d,p)=>{const h={...n,styles:{...n.styles,[d]:p}};r(h)},u=()=>{i(n)};return M.jsxs(Wm,{className:"w-full",children:[M.jsx(Dm,{children:M.jsx(Km,{className:"text-lg text-start font-medium",children:"Settings"})}),M.jsxs(Qm,{children:[M.jsxs(Ag,{defaultValue:"appearance",className:"w-full",children:[M.jsxs(dc,{className:"grid grid-cols-2 mb-4",children:[M.jsxs(Hi,{value:"appearance",className:"flex items-center gap-1",children:[M.jsx(xC,{className:"h-4 w-4"}),M.jsx("span",{className:"hidden sm:inline",children:"Appearance"})]}),M.jsxs(Hi,{value:"locale",className:"flex items-center gap-1",children:[M.jsx(EC,{className:"h-4 w-4"}),M.jsx("span",{className:"hidden sm:inline",children:"Locale"})]})]}),M.jsxs(Xi,{value:"appearance",className:"space-y-4",children:[M.jsxs("div",{className:"space-y-2 text-start",children:[M.jsx(Zt,{htmlFor:"theme",children:"Theme"}),M.jsxs("select",{id:"theme",className:"input-field w-full",value:n.theme,onChange:d=>s("theme",d.target.value),children:[M.jsx("option",{value:"default",children:"Default"}),M.jsx("option",{value:"dark",children:"Dark"}),M.jsx("option",{value:"light",children:"Light"})]})]}),M.jsx("div",{className:"flex items-center space-x-2",children:M.jsx(Zt,{htmlFor:"customColors",children:"Use custom styles"})}),n.styles&&M.jsxs(M.Fragment,{children:[M.jsxs("div",{className:"grid grid-cols-2 gap-4 mt-2 text-start",children:[M.jsxs("div",{className:"space-y-2",children:[M.jsx(Zt,{htmlFor:"primaryColor",children:"Primary Color"}),M.jsxs("div",{className:"flex space-x-2",children:[M.jsx(Mt,{id:"primaryColor",type:"color",value:n.styles.primaryColor,onChange:d=>l("primaryColor",d.target.value),className:"w-10 h-10 p-1"}),M.jsx(Mt,{value:n.styles.primaryColor,onChange:d=>l("primaryColor",d.target.value),className:"flex-1"})]})]}),M.jsxs("div",{className:"space-y-2",children:[M.jsx(Zt,{htmlFor:"secondaryColor",children:"Secondary Color"}),M.jsxs("div",{className:"flex space-x-2",children:[M.jsx(Mt,{id:"secondaryColor",type:"color",value:n.styles.secondaryColor,onChange:d=>l("secondaryColor",d.target.value),className:"w-10 h-10 p-1"}),M.jsx(Mt,{value:n.styles.secondaryColor,onChange:d=>l("secondaryColor",d.target.value),className:"flex-1"})]})]}),M.jsxs("div",{className:"space-y-2",children:[M.jsx(Zt,{htmlFor:"backgroundColor",children:"Background Color"}),M.jsxs("div",{className:"flex space-x-2",children:[M.jsx(Mt,{id:"backgroundColor",type:"color",value:n.styles.backgroundColor,onChange:d=>l("backgroundColor",d.target.value),className:"w-10 h-10 p-1"}),M.jsx(Mt,{value:n.styles.backgroundColor,onChange:d=>l("backgroundColor",d.target.value),className:"flex-1"})]})]}),M.jsxs("div",{className:"space-y-2",children:[M.jsx(Zt,{htmlFor:"textPrimaryColor",children:"Text primary Color"}),M.jsxs("div",{className:"flex space-x-2",children:[M.jsx(Mt,{id:"textPrimaryColor",type:"color",value:n.styles.textPrimaryColor,onChange:d=>l("textPrimaryColor",d.target.value),className:"w-10 h-10 p-1"}),M.jsx(Mt,{value:n.styles.textPrimaryColor,onChange:d=>l("textPrimaryColor",d.target.value),className:"flex-1"})]})]}),M.jsxs("div",{className:"space-y-2",children:[M.jsx(Zt,{htmlFor:"textSecondaryColor",children:"Text Secondary Color"}),M.jsxs("div",{className:"flex space-x-2",children:[M.jsx(Mt,{id:"textSecondaryColor",type:"color",value:n.styles.textSecondaryColor,onChange:d=>l("textSecondaryColor",d.target.value),className:"w-10 h-10 p-1"}),M.jsx(Mt,{value:n.styles.textSecondaryColor,onChange:d=>l("textSecondaryColor",d.target.value),className:"flex-1"})]})]})]}),M.jsxs("div",{className:"space-y-2 text-start",children:[M.jsx(Zt,{htmlFor:"fontFamily",children:"Font Family"}),M.jsx("div",{className:"flex space-x-2",children:M.jsx(Mt,{value:n.styles.fontFamily,onChange:d=>l("fontFamily",d.target.value),className:"flex-1"})})]}),M.jsxs("div",{className:"space-y-2 text-start",children:[M.jsx(Zt,{htmlFor:"width",children:"Width"}),M.jsx("div",{className:"flex space-x-2",children:M.jsx(Mt,{type:"number",value:n.styles.width,onChange:d=>l("width",d.target.value),className:"flex-1"})})]})]})]}),M.jsx(Xi,{value:"locale",className:"space-y-4",children:M.jsxs("div",{className:"space-y-2",children:[M.jsx(Zt,{htmlFor:"locale",children:"Language"}),M.jsxs("select",{id:"locale",className:"input-field w-full",value:n.locale,onChange:d=>s("locale",d.target.value),children:[M.jsx("option",{value:"en",children:"English"}),M.jsx("option",{value:"es",children:"Spanish"}),M.jsx("option",{value:"pt",children:"Portuguese"})]})]})})]}),M.jsx("div",{className:"mt-6",children:M.jsx(wg,{className:"w-full bg-ap-primary_base hover:bg-ap-primary_light",onClick:()=>u(),children:"Apply Settings"})})]})]})},bC=()=>{const[i,n]=G.useState("frontend"),[r,s]=G.useState({theme:"light",currencyMode:"iso",locale:"en"}),l=u=>{s(u)};return M.jsxs("div",{className:"min-h-screen bg-gray-50 flex flex-col",children:[M.jsx(I0,{}),M.jsxs("main",{className:"flex flex-col  py-4 px-8",children:[M.jsxs("div",{className:"w-full mb-4 text-start",children:[M.jsx("h1",{className:"text-2xl font-bold text-ap-neutral_darkest",children:"Payments Component Demo"}),M.jsx("p",{className:"mt-2 text-gray-600  text-sm md:text-base",children:"This is a demonstration of a payment component library"})]}),M.jsxs("div",{className:"flex justify-between gap-4",children:[M.jsx("div",{className:"w-full container px-0",children:M.jsx(SC,{onSettingsChange:l})}),M.jsx("div",{className:"container px-0",children:M.jsx("div",{className:"bg-white rounded-lg shadow-md",children:M.jsxs(Ag,{defaultValue:"frontend",value:i,onValueChange:n,className:"w-full",children:[M.jsx("div",{className:"border-b",children:M.jsxs(dc,{className:"w-full justify-start rounded-none border-b bg-transparent h-12 p-0",children:[M.jsxs(Hi,{value:"frontend",className:"rounded-none border-b-2 border-transparent data-[state=active]:border-ap-primary_base data-[state=active]:bg-transparent h-12",children:[M.jsx(CC,{className:"h-4 w-4 mr-2"}),"Frontend"]}),M.jsxs(Hi,{value:"layout",className:"rounded-none border-b-2 border-transparent data-[state=active]:border-ap-primary_base data-[state=active]:bg-transparent h-12",children:[M.jsx(wC,{className:"h-4 w-4 mr-2"}),"Code"]})]})}),M.jsx(Xi,{value:"frontend",className:"p-0 m-0",children:M.jsx("div",{className:"p-6",children:M.jsx(Hw,{settings:r})})}),M.jsx(Xi,{value:"layout",className:"p-0 m-0",children:M.jsx("div",{className:"p-6",children:M.jsxs("div",{className:"bg-gray-100 p-4 rounded-lg",children:[M.jsx("h3",{className:"text-lg font-semibold mb-2",children:"Sample Initialization Code"}),M.jsx("pre",{className:"text-xs md:text-sm bg-gray-900 text-gray-100 p-4 rounded overflow-x-auto text-start",children:`
${JSON.stringify(r,null,2)}
                        `})]})})})]})})})]})]}),M.jsx("footer",{className:"bg-white mt-auto border-t",children:M.jsx("div",{className:"container mx-auto py-4 px-4 text-center text-sm text-gray-500",children:"This is a testing environment"})})]})},kC=()=>M.jsx(bC,{});function RC(){return M.jsx("div",{className:"bg-gray-50 rounded-md ",children:M.jsx(kC,{})})}k0.createRoot(document.getElementById("root")).render(M.jsx(G.StrictMode,{children:M.jsx(RC,{})}));
